<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>RayLiao</title>
  
  <subtitle>不入流札记</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="http://www.rayliao.com/blog/"/>
  <updated>2020-05-19T01:45:19.050Z</updated>
  <id>http://www.rayliao.com/blog/</id>
  
  <author>
    <name>Ray Liao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>杯葛微信行动</title>
    <link href="http://www.rayliao.com/blog/2020/05/57cb9257/"/>
    <id>http://www.rayliao.com/blog/2020/05/57cb9257/</id>
    <published>2020-05-19T00:55:13.000Z</published>
    <updated>2020-05-19T01:45:19.050Z</updated>
    
    <content type="html"><![CDATA[<h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>原因一，iOS有个屏幕使用时间的功能，几次查看都发现微信的使用时间远远高于其他，秉持着时间就是金钱的原则，浪费太多时间在微信上让自身体现得过于懒散；原因二，没有对比就没有伤害，自从深度使用TG之后，越来越看不起微信了，太多限制功能，什么功能都想做，吃成胖子，导致聊天那块的功能做得不够精，不够年轻，虽然我也能体谅你，毕竟你的使用人群以中老年人占多估计，但不代表我就喜欢你；原因三，之前要做一个解散群的处理，发现并没有相关功能提供，只能一个个踢除，之后删掉自己，这样就造成了误解，在未告知的情况下，别人会误解是你把TA踢了，而不是解散群。</p><a id="more"></a><h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><p>减少自己对微信的使用时间，戒掉自己无聊时就想打开微信朋友圈看看的坏习惯，拿回属于自己的时间，做些能提升自身的事情，比如说在其他地方看些好文章，或者把这碎片时间转成专注时间，想些事情或者做些家务活，陪陪准哥。</p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>之前粗略看过一篇教程，讲如何通过其他聊天软件去收发微信消息，大抵的做法是搭一个服务器，把自己的微信登录挂在那，然后用一些工具或者脚本之类的，读取转发微信的消息。这样做有点折腾，且本质上还是使用着微信的，不适合我。要减少微信的使用，首先得分析下，自己使用了微信的哪些功能，最依赖使用哪些功能，哪些能迁移能找到替代品。</p><p>以功能去分微信的使用的话，有：</p><ol><li>社交</li></ol><p>社交这块基本无解，现在国人基本上都是使用微信联系了，不能不说，还是方便的，所以没办法找到完美的替代品，因为其他地方的社交联系人都是不齐全的，苹果的message不支持安卓，短信不可能，<code>QQ</code>过于年轻化，外网的聊天软件太高端。所以社交聊天这块做不了什么。</p><ol start="2"><li>支付，金融</li></ol><p>这块开始我是有使用的，跟支付宝同时使用，后来发现微信这块功能层级藏得比较深，很不方便，目前完全用支付宝代替了，只留了少许资金，用于临时急用，和现在每月要交房租转给房东。</p><ol start="3"><li>小程序，基本是作为工具使用</li></ol><p>使用率其实不高，偶尔用到，但也有一些常用而且无可替代的东西，如<code>粤省事</code>，因为疫情需要使用的<code>穗康码</code>，和小区开门用的<code>亲邻开门</code>。其他都是可有可无，支付宝上也有。这一块影响不大。</p><ol start="4"><li>公众号和订阅号的文章资讯阅读</li></ol><p>这个很多都是可以迁移或替代的，比如自己常看的虎嗅，可以用虎嗅APP看，其他也类似，可以回到原本的地方看，也可以去微博看，也可以通RRS，或者邮箱订阅的形式去阅读。</p><ol start="5"><li>朋友圈</li></ol><p>曾想过完全关停，但也舍不得。我发现互联网越来越发达，但是人与人之间的沟通交流反而越来越少，频率越来越低，或许就是因为太发达，觉得我随时都能联系到别人，也就不会去联系别人了。也就导致了解知道别人的生活如何的途径只剩下朋友圈了。大家似乎都知道这一点，也就各自都很精心去维护自己的朋友圈形象。</p><p>我也不知道好还是不好。但我那看到朋友圈红点就想去点的强迫症，是该去治疗一下的。</p><h3 id="行动"><a href="#行动" class="headerlink" title="行动"></a>行动</h3><p>根据上述分析，也就可以要做些什么，产生一个行动细则了。</p><ul><li>减少闲聊，该聊还是聊</li><li>用支付宝替代支付</li><li>转移文章资讯的阅读</li><li><strong>减少朋友圈的使用频率，开始做到一天只看一次，坚持住之后做到一周只看一次</strong></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h3&gt;&lt;p&gt;原因一，iOS有个屏幕使用时间的功能，几次查看都发现微信的使用时间远远高于其他，秉持着时间就是金钱的原则，浪费太多时间在微信上让自身体现得过于懒散；原因二，没有对比就没有伤害，自从深度使用TG之后，越来越看不起微信了，太多限制功能，什么功能都想做，吃成胖子，导致聊天那块的功能做得不够精，不够年轻，虽然我也能体谅你，毕竟你的使用人群以中老年人占多估计，但不代表我就喜欢你；原因三，之前要做一个解散群的处理，发现并没有相关功能提供，只能一个个踢除，之后删掉自己，这样就造成了误解，在未告知的情况下，别人会误解是你把TA踢了，而不是解散群。&lt;/p&gt;
    
    </summary>
    
    
      <category term="教程" scheme="http://www.rayliao.com/blog/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>在TypeScript项目使用ESLint和Prettier</title>
    <link href="http://www.rayliao.com/blog/2020/05/ba9da8f7/"/>
    <id>http://www.rayliao.com/blog/2020/05/ba9da8f7/</id>
    <published>2020-05-06T06:41:05.000Z</published>
    <updated>2020-05-19T01:08:33.256Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>翻译文章，<a href="https://www.robertcooper.me/using-eslint-and-prettier-in-a-typescript-project" target="_blank" rel="noopener">原文地址</a></p></blockquote><p>TypeScript语法规则和代码风格的检查工具，主要有两种，TSLint和ESLint。TSLint只能用于TypeScript的检查，ESLint同时支持JavaScript和TypeScript。</p><p>在<a href="https://github.com/Microsoft/TypeScript/issues/29288#developer-productivity-tools-and-integration" target="_blank" rel="noopener">TypeScript 2019线路</a>中，TypeScript核心团队解释说ESLint具有比TSLint更高性能的体系结构，并且在为TypeScript提供编辑器整合时，他们只会专注于ESLint。因此，我建议使用ESLint来整理TypeScript项目。</p><h3 id="在TypeScript项目中设置ESLint"><a href="#在TypeScript项目中设置ESLint" class="headerlink" title="在TypeScript项目中设置ESLint"></a>在TypeScript项目中设置ESLint</h3><p>首先安装所有需要的依赖：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">yarn</span> <span class="selector-tag">add</span> <span class="selector-tag">eslint</span> @<span class="keyword">typescript</span>-<span class="keyword">eslint</span>/<span class="keyword">parser</span> @typescript-eslint/eslint-plugin --dev</span><br></pre></td></tr></table></figure><blockquote><p>如果项目是使用create-react-app搭建，eslint已经通过react-scripts包含在依赖中，因此无需额外通过yarn去安装。</p></blockquote><ul><li>eslint：ESLint的核心库</li><li>@typescript-eslint/parser：允许ESLint转换TypeScript代码的解析器</li><li>@typescript-eslint/eslint-plugin：包含一堆特定于TypeScript的ESLint规则的插件</li></ul><a id="more"></a><p>接下来，在项目根目录创建一个配置文件：<code>.eslintrc.js</code>，以下是示例配置：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  parser: <span class="string">"@typescript-eslint/parser"</span>, <span class="comment">// Specifies the ESLint parser</span></span><br><span class="line">  parserOptions: &#123;</span><br><span class="line">    ecmaVersion: <span class="number">2020</span>, <span class="comment">// Allows for the parsing of modern ECMAScript features</span></span><br><span class="line">    sourceType: <span class="string">"module"</span> <span class="comment">// Allows for the use of imports</span></span><br><span class="line">  &#125;,</span><br><span class="line">  extends: [</span><br><span class="line">    <span class="string">"plugin:@typescript-eslint/recommended"</span> <span class="comment">// Uses the recommended rules from the @typescript-eslint/eslint-plugin</span></span><br><span class="line">  ],</span><br><span class="line">  rules: &#123;</span><br><span class="line">    <span class="comment">// Place to specify ESLint rules. Can be used to overwrite rules specified from the extended configs</span></span><br><span class="line">    <span class="comment">// e.g. "@typescript-eslint/explicit-function-return-type": "off",</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>建议使用js文件替换json文件，因为js文件支持写上注释，能更好的描述规则。</p></blockquote><p>如果项目使用react，需要安装依赖<code>eslint-plugin-react</code>，上面的配置要改为：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  parser: <span class="string">"@typescript-eslint/parser"</span>, <span class="comment">// Specifies the ESLint parser</span></span><br><span class="line">  parserOptions: &#123;</span><br><span class="line">    ecmaVersion: <span class="number">2020</span>, <span class="comment">// Allows for the parsing of modern ECMAScript features</span></span><br><span class="line">    sourceType: <span class="string">"module"</span>, <span class="comment">// Allows for the use of imports</span></span><br><span class="line">    ecmaFeatures: &#123;</span><br><span class="line">      jsx: <span class="literal">true</span> <span class="comment">// Allows for the parsing of JSX</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  settings: &#123;</span><br><span class="line">    react: &#123;</span><br><span class="line">      version: <span class="string">"detect"</span> <span class="comment">// Tells eslint-plugin-react to automatically detect the version of React to use</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  extends: [</span><br><span class="line">    <span class="string">"plugin:react/recommended"</span>, <span class="comment">// Uses the recommended rules from @eslint-plugin-react</span></span><br><span class="line">    <span class="string">"plugin:@typescript-eslint/recommended"</span> <span class="comment">// Uses the recommended rules from @typescript-eslint/eslint-plugin</span></span><br><span class="line">  ],</span><br><span class="line">  rules: &#123;</span><br><span class="line">    <span class="comment">// Place to specify ESLint rules. Can be used to overwrite rules specified from the extended configs</span></span><br><span class="line">    <span class="comment">// e.g. "@typescript-eslint/explicit-function-return-type": "off",</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>最终，在你的配置文件中，你自行决定你要导入什么规则，以及你要使用哪些规则。</p><h3 id="加入Prettier完美契合"><a href="#加入Prettier完美契合" class="headerlink" title="加入Prettier完美契合"></a>加入Prettier完美契合</h3><p>Prettier能很好的格式化你的代码，跟ESLint完美契合使用，安装依赖：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn <span class="keyword">add</span><span class="bash"> prettier eslint-config-prettier eslint-plugin-prettier --dev</span></span><br></pre></td></tr></table></figure><ul><li>prettier: prettier核心库</li><li>eslint-config-prettier: 禁用可能会跟Prettier冲突的ESLint规则</li><li>eslint-plugin-prettier: 把Prettier作为ESLint的规则使用</li></ul><p>在根目录创建配置文件<code>.prettierrc.js</code>，用来配置prettier，以下是配置示例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  semi: <span class="literal">true</span>,</span><br><span class="line">  trailingComma: <span class="string">"all"</span>,</span><br><span class="line">  singleQuote: <span class="literal">true</span>,</span><br><span class="line">  printWidth: <span class="number">120</span>,</span><br><span class="line">  tabWidth: <span class="number">4</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>然后<code>.eslintrc.js</code>中的extends数组需要加上两行：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"prettier/@typescript-eslint"</span>, <span class="comment">// Uses eslint-config-prettier to disable ESLint rules from @typescript-eslint/eslint-plugin that would conflict with prettier</span></span><br><span class="line"><span class="string">"plugin:prettier/recommended"</span> <span class="comment">// Enables eslint-plugin-prettier and eslint-config-prettier. This will display prettier errors as ESLint errors. Make sure this is always the last configuration in the extends array.</span></span><br></pre></td></tr></table></figure><blockquote><p>确保<code>plugin:prettier/recommended</code>放在extends数组的最后。</p></blockquote><p>使用eslint-plugin-prettier，把prettier作为eslint规则使用的好处是，代码可以使用ESLint的<code>--fix</code>选项自动修复。</p><h3 id="在VS-Code中自动修复代码"><a href="#在VS-Code中自动修复代码" class="headerlink" title="在VS Code中自动修复代码"></a>在VS Code中自动修复代码</h3><p>当一个文件被保存的时候，你的编辑器会自动运行ESLint的自动修复命令<code>eslint --fix</code>，是一个良好的开发体验。VS Code可以在<code>settings.json</code>文件配置保存自动修复的功能：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"editor.codeActionsOnSave"</span>: &#123;</span><br><span class="line">    <span class="attr">"source.fixAll.eslint"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="用命令行运行ESLint"><a href="#用命令行运行ESLint" class="headerlink" title="用命令行运行ESLint"></a>用命令行运行ESLint</h3><p>可以在<code>package.json</code>中添加运行ESLint的命令：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"lint"</span>: <span class="string">"eslint '*/**/*.&#123;js,ts,tsx&#125;' --quiet --fix"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以使用npm run lint或yarn lint从命令行运行以上脚本。此命令在所有的.js，.ts和.tsx（使用react）文件上运行ESLint检查。可以自动修复的都会直接自动修复，有些无法修复的，会在命令行中显示出来。</p><h3 id="阻止有ESLint错误的代码被提交"><a href="#阻止有ESLint错误的代码被提交" class="headerlink" title="阻止有ESLint错误的代码被提交"></a>阻止有ESLint错误的代码被提交</h3><p>为了确认所有提交到git上的代码都没有错误，可以使用lint-staged工具，配合husky食用，可以在git的commit之前检查代码的正确性，如果存在错误，则无法提交，在<code>package.json</code>配置如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"husky"</span>: &#123;</span><br><span class="line">      <span class="attr">"hooks"</span>: &#123;</span><br><span class="line">          <span class="attr">"pre-commit"</span>: <span class="string">"lint-staged"</span></span><br><span class="line">      &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"lint-staged"</span>: &#123;</span><br><span class="line">      <span class="attr">"*.&#123;js,ts,tsx&#125;"</span>: [</span><br><span class="line">          <span class="string">"eslint --fix"</span></span><br><span class="line">      ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>大概就是这样，写文档好累鸭，我还只是看着原文翻译过来而已了。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;翻译文章，&lt;a href=&quot;https://www.robertcooper.me/using-eslint-and-prettier-in-a-typescript-project&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;原文地址&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;TypeScript语法规则和代码风格的检查工具，主要有两种，TSLint和ESLint。TSLint只能用于TypeScript的检查，ESLint同时支持JavaScript和TypeScript。&lt;/p&gt;
&lt;p&gt;在&lt;a href=&quot;https://github.com/Microsoft/TypeScript/issues/29288#developer-productivity-tools-and-integration&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;TypeScript 2019线路&lt;/a&gt;中，TypeScript核心团队解释说ESLint具有比TSLint更高性能的体系结构，并且在为TypeScript提供编辑器整合时，他们只会专注于ESLint。因此，我建议使用ESLint来整理TypeScript项目。&lt;/p&gt;
&lt;h3 id=&quot;在TypeScript项目中设置ESLint&quot;&gt;&lt;a href=&quot;#在TypeScript项目中设置ESLint&quot; class=&quot;headerlink&quot; title=&quot;在TypeScript项目中设置ESLint&quot;&gt;&lt;/a&gt;在TypeScript项目中设置ESLint&lt;/h3&gt;&lt;p&gt;首先安装所有需要的依赖：&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;yarn&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;eslint&lt;/span&gt; @&lt;span class=&quot;keyword&quot;&gt;typescript&lt;/span&gt;-&lt;span class=&quot;keyword&quot;&gt;eslint&lt;/span&gt;/&lt;span class=&quot;keyword&quot;&gt;parser&lt;/span&gt; @typescript-eslint/eslint-plugin --dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;如果项目是使用create-react-app搭建，eslint已经通过react-scripts包含在依赖中，因此无需额外通过yarn去安装。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;eslint：ESLint的核心库&lt;/li&gt;
&lt;li&gt;@typescript-eslint/parser：允许ESLint转换TypeScript代码的解析器&lt;/li&gt;
&lt;li&gt;@typescript-eslint/eslint-plugin：包含一堆特定于TypeScript的ESLint规则的插件&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://www.rayliao.com/blog/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>react前端项目部署到iis</title>
    <link href="http://www.rayliao.com/blog/2020/05/c1176cea/"/>
    <id>http://www.rayliao.com/blog/2020/05/c1176cea/</id>
    <published>2020-05-04T02:52:34.000Z</published>
    <updated>2020-05-06T06:37:59.473Z</updated>
    
    <content type="html"><![CDATA[<p>这几天开发用于微信公众号的页面，被微信网页授权，搞得烦死了。授权好多步骤，又跟之前的小程序的<code>openid</code>有些冲突，换成<code>unionid</code>，但也遇到一系列的坑。项目是<code>create react app</code>搭建的，为了避免跨域问题，在<code>package.json</code>配置了代理。对iis不熟悉，网上搜刮了很多资料，捣腾了很久。</p><a id="more"></a><h4 id="BrowserRouter-or-HashRouter"><a href="#BrowserRouter-or-HashRouter" class="headerlink" title="BrowserRouter or HashRouter"></a>BrowserRouter or HashRouter</h4><p>直接使用<code>BrowserRouter</code>，iis不作配置的话，访问会报404错，路由问题，iis估计会把地址如<code>http://url/app</code>当作是<code>http://url/app.html</code>去访问，所以报404了。通过url rewrite应该就可以了，没去试过。直接使用HashRouter省事很多，不用配置，直接可以用。</p><h4 id="代理映射"><a href="#代理映射" class="headerlink" title="代理映射"></a>代理映射</h4><p>项目另外配置有接口地址，只需要在<code>package.json</code>配置<code>proxy: &quot;http://api.url.com/&quot;</code>，就可以了，本地运行没问题，但这个配置只是针对node服务器生效，在iis上要生效的话，得配置URL rewrite，然后这两天就卡在这里，我本身不熟悉这一块，我朋友配置服务器也不熟悉这块，网上资料也不多，所以折腾了很久。</p><p>具体就是，<code>build</code>的时候，代理接口的请求加上前缀<code>/api</code>，iis那边需要做URL的重写，把请求到<code>/api</code>的映射到接口地址去，如<code>http://api.url.com</code>，开始朋友根据网上的教程，配置成重定向了一直不行，后来配置成重写，又变成访问404。</p><p>后来才找到一个教程，是要安装ARR，配置反向代理：</p><p>具体需求：</p><p>假如我的项目地址是<code>web.url.com</code>，接口请求数据是<code>web.url.com/api/**/**</code>，例如获取用户数据<code>web.url.com/api/user/getdata</code>，实际请求接口就应该是<code>api.url.com/user/getdata</code>。</p><p>要实现上面的需求，需要iis在7及以上。</p><ol><li><p>安装ARR: <a href="http://www.iis.net/downloads/microsoft/application-request-routing" target="_blank" rel="noopener">下载地址</a></p></li><li><p>开启代理功能，进入操作版面的<code>Server Proxy Settings</code>选项，开启代理。</p></li><li><p>配置反向代理规则。进入部署的站点，进入URL重写功能。左侧操作菜单选择添加规则，新建一条入站规则，选择空白规则，目的是匹配请求的URL，当符合我们添加的规则时，则进行反向代理的操作，假定所有的接口请求都是这种<code>web.url.com/api/**/**</code>以api这个关键词开头，写一个正则表达式来匹配需要反向代理的url请求     </p></li><li><p>编辑入站规则：</p><ol><li>填写匹配URL选项相关信息，采用与模式匹配的正则表达式，表达式为：<code>^api/(.*)</code>，匹配所有前端站点的包含api的url请求</li><li>填写条件，条件是说匹配哪个域名，填写文章开头说的前端站点的域名<code>web.url.com</code>，条件输入：<code>{HTTP_HOST}</code>（请求的主机名），模式：<code>^web.url.com$</code>(如果有端口可以加上端口)</li><li>填写反向代理最终指向的地址，前面我们所做的匹配，就是为了这一步所做的准备，操作类型是重写，URL填写：<code>http://web.url.com/api/{R:1}</code>，注意前面匹配了URL中包含api关键词的URL，这里必须加上<code>/api/{R:1}</code>，<code>{R:1}</code>是说api后面的参数都带着</li></ol></li></ol><p>参考来源：</p><ul><li><a href="https://www.cnblogs.com/scudfly/p/11765282.html" target="_blank" rel="noopener">React的Api代理和IIS配置</a></li><li><a href="https://blog.csdn.net/u010696334/article/details/98944294" target="_blank" rel="noopener">IIS8反向代理，前后端分离部署解决方案</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这几天开发用于微信公众号的页面，被微信网页授权，搞得烦死了。授权好多步骤，又跟之前的小程序的&lt;code&gt;openid&lt;/code&gt;有些冲突，换成&lt;code&gt;unionid&lt;/code&gt;，但也遇到一系列的坑。项目是&lt;code&gt;create react app&lt;/code&gt;搭建的，为了避免跨域问题，在&lt;code&gt;package.json&lt;/code&gt;配置了代理。对iis不熟悉，网上搜刮了很多资料，捣腾了很久。&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://www.rayliao.com/blog/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>致儿子（二）</title>
    <link href="http://www.rayliao.com/blog/2020/05/57e4592/"/>
    <id>http://www.rayliao.com/blog/2020/05/57e4592/</id>
    <published>2020-05-04T02:15:39.000Z</published>
    <updated>2020-05-06T06:44:05.646Z</updated>
    
    <content type="html"><![CDATA[<p>你好啊，儿子。</p><p>这周事情还挺多。幸好遇五一长假，时间宽裕能很好地处理妥当。</p><p>估摸是疫情加之洛溪沙溪的社区医院尚未开放，好不容易才抢到的号。周一的时候，第一次带你外出去打预防针，南浦那边的路本身就窄，现在又在升级污水处理系统，去的时候交通不是很顺畅，但时间预留比较多，所以到达医院时间还算早。在一楼报道登记之时，有一位坐那的服务人员看了你妈的身份证说很近，原来她是潭江人。接着要上去四楼，疫情期间，只准一人进入，你妈本就手还痛着，又得抱着你，第一次来，也不熟悉，搞得你妈慌慌乱乱，大汗淋漓。不知道你是晕车呢，还是天气太热之故，吐了几次奶，但你一直都在闭着眼睛睡着，并没有哭闹，乖得很。</p><a id="more"></a><p>你妈周三去省妇幼产后检查，回的时候急着见你，开车有些大意，撞上了别人的车屁股，所幸只是小刮痕，恰逢是那块之前刮了几次的位置，刚好就报保险顺便修了。</p><p>周五我去海珠区送车子去定损回来，跟你妈一起去菜市场买菜，她先去借你邦叔叔的电单车，哪知道你妈应该是怀孕傻三年，车都还没开始开呢，在你邦叔叔驾驶教学途中，过于自信，直接电力把手一拧，车子就往前冲，你妈的脚跟就刮到了。</p><p>你妈昨晚又发烧了，估计是前两天晚上一觉到天亮，没起来挤奶，阻塞导致的，因为之前已经有过两次了，也并不慌，只是没想到这次也还挺严重，到39度了，只好喝小柴胡，喝蒲公英，吃退烧药，吃抗生素，今早还回去月子中心通乳，总算温度降了下来，现在不大碍。往后还得多加注意。</p><p>你呢，之前几天都不是很乖，白天睡得很舒服，准时十一点到十二点多，就开始哭闹，你应该是肠绞痛的，每次给你飞机抱你就不哭闹了，到了差不多时间估计你也累了，然后就一觉睡个四五个小时。也不知道是不是天气热的原因，还是你现在开始专属粘人了，现在我都哄不住你了，然而每次你姨婆抱你，你很快就不哭了。</p><p>我大概是有这方面的疑惑，以后你还记得的话，可以告诉我为何。</p><p>时间不早了，就此停笔。你刚喝完奶该睡了，我很困眼睛也不舒服也该去睡了。</p><blockquote><p>于洛涛南区10栋之二408，夜</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;你好啊，儿子。&lt;/p&gt;
&lt;p&gt;这周事情还挺多。幸好遇五一长假，时间宽裕能很好地处理妥当。&lt;/p&gt;
&lt;p&gt;估摸是疫情加之洛溪沙溪的社区医院尚未开放，好不容易才抢到的号。周一的时候，第一次带你外出去打预防针，南浦那边的路本身就窄，现在又在升级污水处理系统，去的时候交通不是很顺畅，但时间预留比较多，所以到达医院时间还算早。在一楼报道登记之时，有一位坐那的服务人员看了你妈的身份证说很近，原来她是潭江人。接着要上去四楼，疫情期间，只准一人进入，你妈本就手还痛着，又得抱着你，第一次来，也不熟悉，搞得你妈慌慌乱乱，大汗淋漓。不知道你是晕车呢，还是天气太热之故，吐了几次奶，但你一直都在闭着眼睛睡着，并没有哭闹，乖得很。&lt;/p&gt;
    
    </summary>
    
    
      <category term="日记" scheme="http://www.rayliao.com/blog/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>致父母</title>
    <link href="http://www.rayliao.com/blog/2020/04/c950c221/"/>
    <id>http://www.rayliao.com/blog/2020/04/c950c221/</id>
    <published>2020-04-12T15:07:06.000Z</published>
    <updated>2020-05-06T06:37:59.473Z</updated>
    
    <content type="html"><![CDATA[<p>我知道你们现在都在气头上，听不进我的话的，等你们平静下来再看吧。</p><p>我的表达方式并不好，很多话我说起来可能会前言不搭后语，碍于理解，所以我就通过文字的方式来表述，会相对清晰一些。</p><p>首先，我和我姐作为你们的子女，并不会偏帮你们谁，你们每一次争吵，我们苦口婆心的劝说，都是为了你们好，为了这个家好。双方我们都会劝说，这个需要你们都能听进去才行，可很多时候你们都认定自己心中的理，什么话也听不进去，稍有奉劝之词，就会觉得我们是站在你们的对立面。</p><a id="more"></a><p>人无完人，每个人都有缺点，杨沁有，我也有，因为后来我读书工作，一个人生活惯了，很多生活上的事情都比较邋遢，随性，懒惰。这个需要慢慢改过来。</p><p>我发现你们每次吵架的起因都是很小件的鸡毛蒜皮的事，然后各自就以不耐烦的语气跟对方说话，接着扯出过往的种种事情，得理不饶人，或一开始就不给对方台阶下，无理就发脾气，最后争锋相对。争吵吵架是件两个人的事，一个巴掌拍不响。很多时候各自退让一步，少说一句，就可以终止争吵。</p><p>所以每次我都想不明白，何必呢，都是一些小事，为什么一定要争个输赢。</p><p>私心的说，为了我自己，我也不想你们经常这样吵架，现在多了一个阿准要照顾，我发现已经越来越忙了，在广州生活压力也比较大，你们可以经常打电话来问候，聊聊家常，谈些开心的事的话很好。但时不时就会得知你们又因一些小事争吵起来，我也会很烦躁，因为得抓破脑袋想好要怎么跟你们各自沟通，话要怎么说，要如何做，才能顺到你们的意，才不至于变得更严重。</p><p>道理大家都是懂的，你们所经历的岁月比我多得多，为人处事很多大道理你也比我明白，如果上面我有什么说得不好或不对的，可以指正我。我写这些也并不是为了要教育或指责你们，完全谈不上，虽然我也三十多岁了，但很多人情世故，家里风俗很多东西还得你们教呢，我只是表达下我的想法，</p><p>这个本来是上次你们争吵想发的，但后来看你们又相安无事，就没发给你们了。这次估计又是小事情引起的，没必要去争论谁对谁错了，各自都收敛下，说话动手之前先想想。</p><p>爸你脾气收敛下，说话耐心一点。</p><p>妈你少说两句，不要一说话就毫不留情面。</p><p>各自都是，不要一开口说话就针锋相对，你们仔细想想！！！是不是每次都是因小事而起，都是因为自己或对方语气不好，引来对方语气更不好的还击，自己觉得生气，想要用更难听的话骂回去？！！哎，何必呢。</p><p>杨沁和小孩都很好，望家里亦安好。</p><p>你说，现在家里又不是缺吃少穿的，你们偶尔吵吵没什么问题，现在也不要求你们有说有笑的相处，各自都少说点，少动气就是了，都是些芝麻蒜皮的小事，不要把家里的事情闹大，弄得人尽皆知，何必呢。</p><p>别人家里都是多灾多难，现在疫情这样，湖北武汉没了多少家庭，又有多少家庭因为太穷，太多疾病，太多杀人放火的事而去争吵。</p><p>何必呢？要知足，处不来就各自忙各自的事，该种菜种菜该聊天聊天，喜欢做什么就做什么，互相之间有冲突的，不喜欢对方的做法的，不碍着你的话，就由着它，冒犯到你无法解决的，那就打电话给我跟我姐来评理裁定，没必要伤肝动气，得不偿失。</p><p>你们都多大年纪了，说句不好听的，已经是知天命的年龄，何必经常为了这些小小事情争吵，自己开开心心过活不好吗。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我知道你们现在都在气头上，听不进我的话的，等你们平静下来再看吧。&lt;/p&gt;
&lt;p&gt;我的表达方式并不好，很多话我说起来可能会前言不搭后语，碍于理解，所以我就通过文字的方式来表述，会相对清晰一些。&lt;/p&gt;
&lt;p&gt;首先，我和我姐作为你们的子女，并不会偏帮你们谁，你们每一次争吵，我们苦口婆心的劝说，都是为了你们好，为了这个家好。双方我们都会劝说，这个需要你们都能听进去才行，可很多时候你们都认定自己心中的理，什么话也听不进去，稍有奉劝之词，就会觉得我们是站在你们的对立面。&lt;/p&gt;
    
    </summary>
    
    
      <category term="日记" scheme="http://www.rayliao.com/blog/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>致儿子（一）</title>
    <link href="http://www.rayliao.com/blog/2020/04/3568a94a/"/>
    <id>http://www.rayliao.com/blog/2020/04/3568a94a/</id>
    <published>2020-04-05T14:26:05.000Z</published>
    <updated>2020-05-06T06:43:57.732Z</updated>
    
    <content type="html"><![CDATA[<p>你好啊，儿子。</p><p>你现在应该在婴儿室睡得挺好的，虽然刚才吃完帮你换完纸尿裤，给你做排气操的时候你吐了挺多奶的，我看你表情挺舒服的呢，怪我，太早给你做了，你都还没消化好。吐完奶你就打隔了，只得催你妈赶紧洗澡，让你喝几口奶才缓解打嗝。</p><p>你初为人子，我初为人父，大家都是花姑娘上轿——头一遭。关于怎么照顾你这件事，我一直在练习恶补知识中，虽然你的成长还很漫长，我相信我跟你妈会慢慢地把你照顾得越来越好。</p><p>说到你妈，你以后可得好好对你妈，生你可真不容易。怀你10个月，从开始吐到结束，好几次都吐出血，伤了喉咙，你小子也挺好动的，时不时的拳打脚踢，搞得你妈经常睡不好觉。你爸的厨房经验很少，所以怀你那么久，多数都还得你妈做饭煮菜，厉害吧。以后你就多跟你妈学学，学会了终身受用，不是有句话这样说嘛——「唯有爱与美食不可辜负」。</p><a id="more"></a><p>你已经有了名字了，你知道吗。叫「廖准」，上个礼拜我去省妇幼已经帮你办法出生证了。很早之前我跟你妈晚上吃完去江边散步的时候，就帮你取名字，那时候我一度决定是想取名为「廖让」，低调中带点特别，还带有一些法国风味，英文名都有了：<code>Jean Liao</code>，想想以后你同学呼喊你的时候，大声喊：「让」！是不是还带点日本漫画feel，你爸不喜欢随大众，也不喜欢传统的（毕竟传统的太容易撞名了），喜欢特别但又不能太过于特殊，太特殊明显的话，以后你上学了会怪我的。但后来才知道你爷爷的爷爷名字中有「让」字，只能作罢。后来跟你妈又陆续想了很多名字，太多我就略过了。接着你出生的前两个晚上，你妈洗完澡（应该是你妈洗澡的时候想到的，洗澡的时候灵感特别好）出来跟我打趣的说，要是你准时出来不让你爸为难（这事，等你大点我再跟你说），就叫你「廖准」，结果你还真听话，预产期那天就出来了。</p><p>你妈生你真是辛苦，虽然我无法感受到到底有多痛，但多少我能够想象到。早上吃早餐的时候羊水就破了，送你妈去医院的时候还一路磅礴大雨，你到晚上六点二十三分才出生，当天你妈都没怎么吃，还得忍受那么大的疼痛，出那么大的力气把你生出来。但我觉得你妈跟我一样，第一眼看到你的时候，会觉得一切都是值得的。</p><p>我们沉浸在幸福中没多久，还得面对更多的难题呢，你妈生你侧切了，有伤口。开始坐立难安，然后伤口还发肿发紫，疼得要命。住进月子中心之后，等伤口好了，又面对急性乳腺炎引起的发烧，好了之后昨天又复发。你小子吸奶劲挺大，咬得你妈疼得面目狰狞，你以后得好好补偿你妈，知道不。</p><p>被你折腾的日子还长着，很多事慢慢再跟你说，以后你大点了，我再教你怎么拍照，如何习得蝶泳，代码要怎么敲，如何追女孩（这不能让你妈知道），世界很大，慢慢探索。</p><p>好了，先这样。准哥你差不多应该要醒了，我得服侍你了，月子中心还是不错的吧？有那么多个小姐姐照顾你。</p><p>顺祝准哥，吃好睡好拉好，笑口常开。</p><blockquote><p>于沙溪熹月国际月子会所6027，夜</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;你好啊，儿子。&lt;/p&gt;
&lt;p&gt;你现在应该在婴儿室睡得挺好的，虽然刚才吃完帮你换完纸尿裤，给你做排气操的时候你吐了挺多奶的，我看你表情挺舒服的呢，怪我，太早给你做了，你都还没消化好。吐完奶你就打隔了，只得催你妈赶紧洗澡，让你喝几口奶才缓解打嗝。&lt;/p&gt;
&lt;p&gt;你初为人子，我初为人父，大家都是花姑娘上轿——头一遭。关于怎么照顾你这件事，我一直在练习恶补知识中，虽然你的成长还很漫长，我相信我跟你妈会慢慢地把你照顾得越来越好。&lt;/p&gt;
&lt;p&gt;说到你妈，你以后可得好好对你妈，生你可真不容易。怀你10个月，从开始吐到结束，好几次都吐出血，伤了喉咙，你小子也挺好动的，时不时的拳打脚踢，搞得你妈经常睡不好觉。你爸的厨房经验很少，所以怀你那么久，多数都还得你妈做饭煮菜，厉害吧。以后你就多跟你妈学学，学会了终身受用，不是有句话这样说嘛——「唯有爱与美食不可辜负」。&lt;/p&gt;
    
    </summary>
    
    
      <category term="日记" scheme="http://www.rayliao.com/blog/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>急性乳腺炎的解决方法</title>
    <link href="http://www.rayliao.com/blog/2020/04/62beaf6f/"/>
    <id>http://www.rayliao.com/blog/2020/04/62beaf6f/</id>
    <published>2020-04-04T18:05:55.000Z</published>
    <updated>2020-04-22T02:23:51.219Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>急性乳腺炎是乳腺的急性化脓性感染，是乳腺管内和周围结缔组织炎症，多发生于产后哺乳期的妇女，尤其是初产妇更为多见。有文献报道急性乳腺炎初产妇患病占50%，初产妇与经产妇之比为2.4：1。哺乳期的任何时间均可发生，但以产后3～4周最为常见，故又称产褥期乳腺炎。</p></blockquote><p>这里说的是产后哺乳，因涨奶，有硬块阻塞引起的急性乳腺炎，会发烧，全身无力酸痛。因为爱人现在坐月子，已经两次了，开始的时候非常担心，到处在网上查找资料，还计划着如何去医院，毕竟又是疫情期间，去药房买小柴胡还得拿身份证登记。各种方法都有尝试过，下面把有用的方法归纳总结一下。</p><a id="more"></a><h3 id="吮奶：宝宝-爸爸齐上阵"><a href="#吮奶：宝宝-爸爸齐上阵" class="headerlink" title="吮奶：宝宝/爸爸齐上阵"></a>吮奶：宝宝/爸爸齐上阵</h3><p>最有用的还是宝宝的吸吮，劲够大能把奶吸出来，爸爸的话就因人而异了，反正我尝试了，吸不出来。不知道要如何吸吮，虽然能吸出来一些，但总觉得怪怪的。</p><h3 id="按摩的方式"><a href="#按摩的方式" class="headerlink" title="按摩的方式"></a>按摩的方式</h3><p>按摩的方式和手法有很多种，网上随便搜都能搜到相关的视频教程或者手法图解。原理就是要疏通硬块阻塞的地方，把奶挤出来。</p><p>首先是要把乳房里边阻塞浓稠的奶水弄散，可以通过抖动，轻拍，轻抚按摩的方式，让阻塞的地方稍微放松下。接着要先疏通靠近出口，也就是乳头乳晕的地方，力度要由轻到重，慢慢来，然后才拨硬块处，往乳头方向拨，最后把奶挤出来。</p><h3 id="内外服"><a href="#内外服" class="headerlink" title="内外服"></a>内外服</h3><ul><li><p>外服可使用土豆冷敷法，原理不清楚，应该是酸碱性中和之类的，月子中心的人教的，把冷藏后的土豆切成薄片，敷在硬块胀痛处，不能敷盖乳头乳晕，差不多十来分钟，土豆片不冷就可以拿下来了。</p></li><li><p>内服可煲蒲公英水喝，蒲公英药店都有卖，很便宜，平时上火什么的，也可以煲来喝。</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;急性乳腺炎是乳腺的急性化脓性感染，是乳腺管内和周围结缔组织炎症，多发生于产后哺乳期的妇女，尤其是初产妇更为多见。有文献报道急性乳腺炎初产妇患病占50%，初产妇与经产妇之比为2.4：1。哺乳期的任何时间均可发生，但以产后3～4周最为常见，故又称产褥期乳腺炎。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这里说的是产后哺乳，因涨奶，有硬块阻塞引起的急性乳腺炎，会发烧，全身无力酸痛。因为爱人现在坐月子，已经两次了，开始的时候非常担心，到处在网上查找资料，还计划着如何去医院，毕竟又是疫情期间，去药房买小柴胡还得拿身份证登记。各种方法都有尝试过，下面把有用的方法归纳总结一下。&lt;/p&gt;
    
    </summary>
    
    
      <category term="知识" scheme="http://www.rayliao.com/blog/tags/%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>蒙迪欧使用一年多体验</title>
    <link href="http://www.rayliao.com/blog/2020/04/4641fb0c/"/>
    <id>http://www.rayliao.com/blog/2020/04/4641fb0c/</id>
    <published>2020-04-03T06:29:30.000Z</published>
    <updated>2020-04-22T02:23:51.219Z</updated>
    
    <content type="html"><![CDATA[<p>车子是去年十一月份买的了，当时买的时候也挺快的，虽然一开始在几款车中犹豫了挺久。开始完全没有想过要买福特，几个牌子都去看了下，马自达的阿特兹外形很好看但内部后排空间不足且老婆没那么喜欢，丰田的八代凯美瑞很喜欢，但要买到心仪的配置钱包很为难，广汽传祺的GS4终究低了一个档次，坐上去的体验很差，本田的十代雅阁各方面都挺满意的，本打算选择，那晚临时联系了高中同学勇廷，具体过程忘记了，好像有先去4S看了试下过，也了解了价格和配置，发现都挺好的，接着勇廷给我们介绍了在福特当销售经理的同校校友，如此在有熟人的情况下，最终就决定选择了蒙迪欧，但最终没有等国六，现在觉得稍有遗憾，不然就可以安心地继续摇号，不会像现在一样比较尴尬，觉得没必要去摇号了，毕竟摇到了也上不了车牌，但所幸广州的开四停四并没多大影响。</p><a id="more"></a><p>车子是<code>2018款 EcoBoost 180 智控豪华型</code>,现在开了一年多，整体可以打个90分吧。</p><p>先说说好的方面，美系车够重，开起来很稳，平时回家走广河飙到160都没什么感觉。内饰的质感都可以接受，虽然我体验过的车不多，但也稍微有横向比较了下同时期的雅阁，天籁还有奥迪A4，座椅的沙发的柔软度和那纹理都挺好的，不像雅阁或奥迪那种很平滑的感觉。因为是豪华型，配置都挺齐全的，比如自动远近灯，自动折叠后视镜，可以使用<code>Apple CarPlay</code>，也有比较低调的氛围灯，后尾箱够宽敞，外形耐看。</p><p>不好的方面，虽然不关车子的事，但遇到了比较坑的事，就是买车的4S店浩伟福特因土地回收问题停运了，但我并没有及时收到告知消息，后来去海珠区的4s店保养，浪费了一张赠送的保养券。</p><p>比较耗油，但这个没买车之前就已知的了，既然还是选择就该自己承受，后来发现其实也还好，一个月差不多也就加两次油，最多400块。没力，油门踩下去不够柔顺，换挡有些滞后，虽然熟悉了车子的脾性之后也能很好掌控，但跟别的车子对比起来，偶尔还是会不爽。显示屏是不是会出现黄色的扳手的提示图标，每次去4s让维修人员帮忙看下，但每次检查完他们说修复好了，没什么问题的，但依旧还会。</p><p>开了一年多，老天庇佑，没出过什么事故，都是一些小的磕磕碰碰，如人生般。</p><p>一次是回去梅州上牌的那次，在回老家的路上，原本开过了，但倒回去想走捷径的乡道，没留意到下坡的高度差，车子地盘直接卡在那，慌死！还好遇到路过好心的大爷，跟我爱人两人一起稍微抬起车头，往后退回来，车底的铁皮有些凹进去。</p><p>然后是在小叔小区那刮到一次，小区停车多，比较窄，上坡加转弯，没留意到就压到了车右侧的车门，凹度还挺深，心疼后悔了很久。</p><p>接着后面几次的时间忘记了，一次是回家高速服务器的加油站，太大意车头蹭到了柱子，老婆在白云的停车场停车的时候车头蹭到别人的车牌，最近一次就是，过年从老家出来，才出发没两公里，家里路太小，跟来车避让的时候，刮到了车头，这次也是刮得挺严重的，有凹进去。</p><p>和爱人一直安慰自己，车嘛，刮刮蹭蹭的难免的，有刮蹭车技才有进度，往后自己开车才会更加小心谨慎，本来就是嘛！</p><p>所以每次剐蹭都会安慰自己，刮都已经刮了，既成的事实，就不要去多想了，但如果内心偶尔想起，还是会懊恼不已。</p><p>如今也组建了家庭，多了个小家伙，我想这部车之后还会陪伴我的家庭一起走过许多个年头，会去很多地方，会经历很多事情，希望我们都好好的。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;车子是去年十一月份买的了，当时买的时候也挺快的，虽然一开始在几款车中犹豫了挺久。开始完全没有想过要买福特，几个牌子都去看了下，马自达的阿特兹外形很好看但内部后排空间不足且老婆没那么喜欢，丰田的八代凯美瑞很喜欢，但要买到心仪的配置钱包很为难，广汽传祺的GS4终究低了一个档次，坐上去的体验很差，本田的十代雅阁各方面都挺满意的，本打算选择，那晚临时联系了高中同学勇廷，具体过程忘记了，好像有先去4S看了试下过，也了解了价格和配置，发现都挺好的，接着勇廷给我们介绍了在福特当销售经理的同校校友，如此在有熟人的情况下，最终就决定选择了蒙迪欧，但最终没有等国六，现在觉得稍有遗憾，不然就可以安心地继续摇号，不会像现在一样比较尴尬，觉得没必要去摇号了，毕竟摇到了也上不了车牌，但所幸广州的开四停四并没多大影响。&lt;/p&gt;
    
    </summary>
    
    
      <category term="用户体验" scheme="http://www.rayliao.com/blog/tags/%E7%94%A8%E6%88%B7%E4%BD%93%E9%AA%8C/"/>
    
      <category term="汽车" scheme="http://www.rayliao.com/blog/tags/%E6%B1%BD%E8%BD%A6/"/>
    
  </entry>
  
  <entry>
    <title>香港爬山攻略</title>
    <link href="http://www.rayliao.com/blog/2020/03/41772/"/>
    <id>http://www.rayliao.com/blog/2020/03/41772/</id>
    <published>2020-03-09T02:17:13.000Z</published>
    <updated>2020-04-03T06:26:41.319Z</updated>
    
    <content type="html"><![CDATA[<p>似乎是老婆一个同事的老公总结的，一直很想去感受下香港爬山，但没机会，估摸着之后很长一段时间内都没什么机会了，留着以备不时之需。</p><p>每到三四天的假期就跑去香港，有山有海的轻松徒步线总结一下：</p><a id="more"></a><p>1、大屿山：中环码头出发，坐船到梅窝码头，徒步走到榆景湾码头，途中有银矿遗址和一个小瀑布景点，路程大概两小时多。榆景湾很多西餐厅，环境小资，走累了吃饭喝咖啡很好，榆景湾码头坐船回中环；</p><p>2、南丫岛线路：中环码头出发，坐船到索罟湾徒步到榕树湾，大概两小时，途中可以看海，风景好。到榕树湾有海滩可以玩水，沙滩人不多适合发呆，然后到码头附近有大排档式的餐厅吃海鲜，之后坐船回中环；</p><p>3、长洲岛线路：中环码头往返，岛上有集市可逛，也可以随便溜达溜达，有沙滩玩水，轻松打发半天时间，适合懒人带娃出行；</p><p>4、石澳郊野公园路线：从港岛区中环坐公交车到石澳郊野公园（自己开车的话45分钟），跟着指引爬龙脊，徒步大概两小时，山顶风景一流。之后下山到大浪湾沙滩，香港冲浪胜地，租个小板可以玩一整个下午，超级好玩！</p><p>5、麦理浩径第一段：湾仔坐地铁或公交到西贡郊野公园游客中心，徒步走到万宜水库西坝，六公里要一个半小时，或者走到东坝，九公里要两个多小时。吹风发呆拍照，然后原路返回或者电召的士返回；累，不适合我这种懒人，适合暴走爱好者；</p><p>6:塔门岛：湾仔坐地铁到西贡郊野公园游客中心，徒步一个半小时到黄石码头，中间会路过麦理浩径起点，拍照打卡就继续走吧，到黄石码头坐船到塔门岛，岛上有徒步线，山顶大片的草地，面对大海，超级无敌漂亮，完全原生态。可以露营，但是所有东西都要自备；</p><p>7、龙脊爬了三遍之后自创的新路：湾仔坐公交车到烂泥湾站下车，一个特别小的破站，别犹豫就是它。路边小停车场正对面有个烧烤场，烧烤场左手边有一条被人踩出来的泥巴石头路，只有二三十厘米宽，不要犹豫一直往山顶的方向爬，中间有的地方要手脚并用，植物打在胳膊上，有点新鲜刺激，大概三十分钟就到龙脊顶点了，妥妥节省一个小时！</p><p>8、赤柱路线：湾仔坐公交车到赤柱广场，路经特别出名的深水湾和浅水湾海滩和泳场，下车游泳也很爽。有毅力不下车的话就巴士坐到终点站，下车后赤柱市集逛吃逛吃，歪果仁特别多。吃饱了往赤柱军营走，半小时走到军营大门口，左手边有一条土路爬山，大概20分钟到海边的悬崖，风景超好。</p><p>9、西环码头，看日落，摄影发烧友以及网红打卡地，超多人拍照，逛中环把钱花光了的话，就来这里反思人生吧……</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;似乎是老婆一个同事的老公总结的，一直很想去感受下香港爬山，但没机会，估摸着之后很长一段时间内都没什么机会了，留着以备不时之需。&lt;/p&gt;
&lt;p&gt;每到三四天的假期就跑去香港，有山有海的轻松徒步线总结一下：&lt;/p&gt;
    
    </summary>
    
    
      <category term="旅行" scheme="http://www.rayliao.com/blog/tags/%E6%97%85%E8%A1%8C/"/>
    
      <category term="香港" scheme="http://www.rayliao.com/blog/tags/%E9%A6%99%E6%B8%AF/"/>
    
  </entry>
  
  <entry>
    <title>使用svg代替icon font</title>
    <link href="http://www.rayliao.com/blog/2019/09/664/"/>
    <id>http://www.rayliao.com/blog/2019/09/664/</id>
    <published>2019-09-25T02:25:46.000Z</published>
    <updated>2020-04-22T02:23:51.218Z</updated>
    
    <content type="html"><![CDATA[<p>工作中遇到的问题，项目中有使用字体图标，因为需求设计把logo形态的图标也加到了字体图标库中，但因为这些新加的图标并不是正方形的，而是长方形的，当使用的时候，就需要设置成很大的字号，才能显示正常，然<code>iconfont</code>上的字体图标制作标准是方形的，也就导致了字体的高度也会和宽度一样，这显然不利于页面布局。</p><p>用万能的搜索引擎寻找了下解决方案，发现可以用<code>svg</code>代替。</p><p>开始考虑想一个个<code>svg</code>图标导进去使用，但页面那里引入<code>svg</code>和使用布局混在一起，太乱了：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">class</span>=<span class="string">"icon1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">defs</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">defs</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"..."</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">class</span>=<span class="string">"icon2"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">defs</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">defs</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"..."</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><a id="more"></a><p>然后考虑<code>Symbols</code>的方式，把多个<code>svg</code>图标整合到一个<code>svg</code>中，生成类似下面这样的：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">symbol</span> <span class="attr">id</span>=<span class="string">"icon1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"..."</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">symbol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">symbol</span> <span class="attr">id</span>=<span class="string">"icon2"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"..."</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">symbol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后就可以根据<code>id</code>单独使用其中某个<code>icon</code>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">class</span>=<span class="string">"icon"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">use</span> <span class="attr">xlink:href</span>=<span class="string">"#icon1"</span>&gt;</span><span class="tag">&lt;/<span class="name">use</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="如何转换svg为symbols格式？"><a href="#如何转换svg为symbols格式？" class="headerlink" title="如何转换svg为symbols格式？"></a>如何转换svg为symbols格式？</h4><p>方式有挺多种，其他没了解，下面说下我使用的方式，用<code>gulp-svg-symbols</code></p><p>首先安装此插件:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev gulp-svg-symbols</span><br><span class="line"><span class="comment">// or use yarn</span></span><br><span class="line">yarn add -D gulp-svg-symbols</span><br></pre></td></tr></table></figure><p>配置<code>gulpfile.js</code>：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// svg转换</span></span><br><span class="line">...</span><br><span class="line">gulp.task(<span class="string">'svg'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> svgSymbols = <span class="built_in">require</span>(<span class="string">'gulp-svg-symbols'</span>)</span><br><span class="line">  <span class="keyword">const</span> path = <span class="string">'app/common/svg'</span></span><br><span class="line">  <span class="keyword">return</span> gulp</span><br><span class="line">    .src(<span class="string">`<span class="subst">$&#123;path&#125;</span>/source/*.svg`</span>)</span><br><span class="line">    .pipe(svgSymbols())</span><br><span class="line">    .pipe(rename(<span class="function"><span class="params">path</span> =&gt;</span> (path.basename = <span class="string">'partner'</span>)))</span><br><span class="line">    .pipe(gulp.dest(path))</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>插件其他参数选项请参考<a href="https://github.com/Hiswe/gulp-svg-symbols" target="_blank" rel="noopener">文档</a></p><p>参考：</p><ul><li><a href="https://io-meter.com/2014/07/20/replace-icon-fonts-with-svg/" target="_blank" rel="noopener">Web 设计新趋势: 使用 SVG 代替 Web Icon Font</a></li><li><a href="https://css-tricks.com/icon-fonts-vs-svg/" target="_blank" rel="noopener">Inline SVG vs Icon Fonts [CAGEMATCH]</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;工作中遇到的问题，项目中有使用字体图标，因为需求设计把logo形态的图标也加到了字体图标库中，但因为这些新加的图标并不是正方形的，而是长方形的，当使用的时候，就需要设置成很大的字号，才能显示正常，然&lt;code&gt;iconfont&lt;/code&gt;上的字体图标制作标准是方形的，也就导致了字体的高度也会和宽度一样，这显然不利于页面布局。&lt;/p&gt;
&lt;p&gt;用万能的搜索引擎寻找了下解决方案，发现可以用&lt;code&gt;svg&lt;/code&gt;代替。&lt;/p&gt;
&lt;p&gt;开始考虑想一个个&lt;code&gt;svg&lt;/code&gt;图标导进去使用，但页面那里引入&lt;code&gt;svg&lt;/code&gt;和使用布局混在一起，太乱了：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;svg&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;icon1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;defs&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;defs&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;d&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;...&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;path&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;svg&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;svg&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;icon2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;defs&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;defs&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;d&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;...&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;path&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;svg&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://www.rayliao.com/blog/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="前端优化" scheme="http://www.rayliao.com/blog/tags/%E5%89%8D%E7%AB%AF%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>少儿编程相关资料</title>
    <link href="http://www.rayliao.com/blog/2019/09/30386/"/>
    <id>http://www.rayliao.com/blog/2019/09/30386/</id>
    <published>2019-09-05T15:34:50.000Z</published>
    <updated>2020-04-22T02:23:51.218Z</updated>
    
    <content type="html"><![CDATA[<p>因为姐问我，小孩子是否真的能学编程，她是看了某篇文章（其实是广告）之后由此疑问，借此我也想大概了解下儿童编程的详细情况，或许将来自己也用得着，发挥自己搜集整理的功力。</p><p>少儿编程目前来说就<code>Scratch</code>做得最好最完善，一枝独秀，<code>Scratch</code>源码开放给非商业性质用途使用，但国内很多网站平台教程都是以<code>Scratch</code>作为基础进行配置，设置收费课程等，说得难听点就是敛财。</p><p>所以小孩子想要入门编程的话，<code>Scratch</code>是不二之选，具体家长要怎么做呢？</p><a id="more"></a><ol><li>首先初步了解下<code>Scratch</code>是什么，有什么用</li><li>通过书籍或者网络视频介绍进一步了解，也可以打开<code>Scratch</code>大概操作一番</li><li>准备必备的工具，iPad或者电脑</li><li>给孩子安排好学习编程的时间计划</li><li>Just do it!</li></ol><p>下面是关于<code>Scratch</code>的一些具体资料。</p><h4 id="Scratch少儿编程"><a href="#Scratch少儿编程" class="headerlink" title="Scratch少儿编程"></a>Scratch少儿编程</h4><p>Scratch是麻省理工学院的“终身幼儿园团队”开发的图形化编程工具，主要面对青少年开放。</p><p>目前已有1.4版、2.0版本（增加克隆积木，Lego和Makey makey拓展积木）、3.0版本（增加视频侦测、文字朗读、翻译等选择性下载扩展积木，并增加micro：bit和Lego mindstorms EV3拓展积木）所有人可以在任意版本中创作自己的程序。</p><p><em>可以上国内各大视频网站（优酷，爱奇艺，腾讯，哔哩哔哩）搜索Scratch相关介绍和教程，就会有一个初步的了解。</em></p><p><strong>书籍参考</strong></p><ul><li><a href="http://product.dangdang.com/25140799.html" target="_blank" rel="noopener">DK编程真好玩：6岁开始学Scratch</a></li><li><a href="https://book.douban.com/subject/27116976/" target="_blank" rel="noopener">编程真好玩</a></li><li><a href="https://book.douban.com/subject/26658602/" target="_blank" rel="noopener">动手玩转Scratch2.0编程</a></li><li><a href="http://product.dangdang.com/27896664.html" target="_blank" rel="noopener">边学边玩Scratch3.0少儿编程</a></li><li><a href="https://book.douban.com/subject/30647308/" target="_blank" rel="noopener">Scratch真好玩 教小孩学编程</a></li></ul><p><em>其他书籍可自行根据<code>Scratch</code>关键字搜索</em></p><p><strong>软件下载</strong></p><ul><li>浏览器打开：<a href="https://scratch.mit.edu/" target="_blank" rel="noopener">网页版</a></li><li>官网下载：<a href="https://scratch.mit.edu/download" target="_blank" rel="noopener">Scratch桌面软件</a></li><li>各版本网盘下载<a href="https://pan.baidu.com/share/init?surl=-6ZwZbXnQ_WaNS_8zpl9aw" target="_blank" rel="noopener">地址</a>：<code>tyv2</code></li></ul><p><strong>幼儿版Scratch</strong></p><p><a href="https://www.scratchjr.org/" target="_blank" rel="noopener">ScratchJr</a>完全免费的为幼童而设计的应用程序</p><p><a href="https://www.jianshu.com/p/1dfe9d678ef9" target="_blank" rel="noopener">安装教程</a>参考</p><p><a href="http://product.dangdang.com/24101727.html" target="_blank" rel="noopener">动手玩转ScratchJr编程</a></p><p><em>ScratchJr目前只支持iPad，不支持iPhone</em></p><p><strong>硬件要求</strong></p><p>iPad | 台式电脑 | 笔记本电脑 &amp; 家长</p><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><ul><li><a href="https://code.org/" target="_blank" rel="noopener">Code.org</a> - 网页版，有很全面的课程分类和项目</li><li><a href="https://www.apple.com/swift/playgrounds/" target="_blank" rel="noopener">playgrounds</a> - 苹果出的iPad应用程序Playgrounds</li><li><a href="http://edu.shaoerbc.org/" target="_blank" rel="noopener">少儿编程学院</a></li><li><a href="https://pmo365.cn/" target="_blank" rel="noopener">坚果学院少儿课程</a> - 课程非免费</li><li><a href="https://snap.berkeley.edu/" target="_blank" rel="noopener">snap!</a></li></ul><p><strong>线下活动</strong></p><ul><li><a href="https://www.apple.com/cn/today/" target="_blank" rel="noopener">Today at Apple</a> - 苹果店线下活动，方便的话参加下感兴趣的活动课程挺好的。</li></ul><p><strong>进阶</strong></p><ul><li><a href="https://www.tynker.com" target="_blank" rel="noopener">tynker</a></li><li><a href="https://developers.google.com/blockly/" target="_blank" rel="noopener">blockly</a></li></ul><p>参考来源：</p><ul><li><a href="https://zhuanlan.zhihu.com/p/81232709" target="_blank" rel="noopener">如何自学少儿编程？孩子如何自学，家长如何辅导，老师如何授课呢？</a></li><li><a href="https://zhuanlan.zhihu.com/p/73171468" target="_blank" rel="noopener">Scratch少儿编程是什么？</a></li><li><a href="http://www.sohu.com/a/53833199_114528" target="_blank" rel="noopener">8款让孩子快速享受编程乐趣的儿童教育app </a></li><li><a href="https://baike.baidu.com/item/Scratch/15493636?fr=aladdin" target="_blank" rel="noopener">百度百科Scratch</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;因为姐问我，小孩子是否真的能学编程，她是看了某篇文章（其实是广告）之后由此疑问，借此我也想大概了解下儿童编程的详细情况，或许将来自己也用得着，发挥自己搜集整理的功力。&lt;/p&gt;
&lt;p&gt;少儿编程目前来说就&lt;code&gt;Scratch&lt;/code&gt;做得最好最完善，一枝独秀，&lt;code&gt;Scratch&lt;/code&gt;源码开放给非商业性质用途使用，但国内很多网站平台教程都是以&lt;code&gt;Scratch&lt;/code&gt;作为基础进行配置，设置收费课程等，说得难听点就是敛财。&lt;/p&gt;
&lt;p&gt;所以小孩子想要入门编程的话，&lt;code&gt;Scratch&lt;/code&gt;是不二之选，具体家长要怎么做呢？&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://www.rayliao.com/blog/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>关于hexo</title>
    <link href="http://www.rayliao.com/blog/2019/08/27066/"/>
    <id>http://www.rayliao.com/blog/2019/08/27066/</id>
    <published>2019-08-24T04:59:33.000Z</published>
    <updated>2020-04-22T02:23:51.218Z</updated>
    
    <content type="html"><![CDATA[<p>最近神差鬼使的想着完善的<code>blog</code>的功能，想尝试加下标签的列表页，还有<code>dark mode</code>，也顺便把多语言加上。</p><p>然后在加标签的列表页的时候，弄得很烦躁，<code>jade</code>的语法不记得了，不知道是不是<code>hexo</code>自带的缓存，你怎么改都没用，本地运行的服务就是不生效，烦得很，就不想弄了。有空慢慢的把<code>jade</code>的模板改成<code>ejs</code>，方便些用，毕竟<code>hexo</code>官网上面的例子那些都是使用这个模板的，方便对照。</p><a id="more"></a><p>写这篇主要是想记录下，然后因为刚才看到之前写的一篇文章的图片没了，都忘记是放在哪的了，就想着用<code>post_asset_folder</code>试下，在config那里把这个设置为<code>true</code>，创建文章的时候就会自动创建一个同名的文件夹，然后在文章中加上就可以了：</p><h4 id="ejs模板比较好用"><a href="#ejs模板比较好用" class="headerlink" title="ejs模板比较好用"></a>ejs模板比较好用</h4><p>这两天在把博客在用的主题从<code>jade</code>改成<code>ejs</code>，发现<code>ejs</code>确实比较好用，至少你不知道如何写的时候能参考文档或对照他人写的。</p><p>个人觉得，html模板还是以html的语法为主，加上绑定判断这些语法糖即可，如果像<code>jade</code>（现在叫<code>pug</code>）把html的语法整个改了，虽说语法简洁也易懂，但就多了一层学习成本，使用模板很重要的一点就是用起来容易，不用花费太多时间。</p><p>–</p><p>有人说hexo的文档写得不好，可我觉得还行吧，基本上想要实现的，官方文档都能找到相对应的。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近神差鬼使的想着完善的&lt;code&gt;blog&lt;/code&gt;的功能，想尝试加下标签的列表页，还有&lt;code&gt;dark mode&lt;/code&gt;，也顺便把多语言加上。&lt;/p&gt;
&lt;p&gt;然后在加标签的列表页的时候，弄得很烦躁，&lt;code&gt;jade&lt;/code&gt;的语法不记得了，不知道是不是&lt;code&gt;hexo&lt;/code&gt;自带的缓存，你怎么改都没用，本地运行的服务就是不生效，烦得很，就不想弄了。有空慢慢的把&lt;code&gt;jade&lt;/code&gt;的模板改成&lt;code&gt;ejs&lt;/code&gt;，方便些用，毕竟&lt;code&gt;hexo&lt;/code&gt;官网上面的例子那些都是使用这个模板的，方便对照。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="http://www.rayliao.com/blog/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>用什么标题好呢</title>
    <link href="http://www.rayliao.com/blog/2019/06/50633/"/>
    <id>http://www.rayliao.com/blog/2019/06/50633/</id>
    <published>2019-06-01T16:43:14.000Z</published>
    <updated>2020-04-22T02:23:51.218Z</updated>
    
    <content type="html"><![CDATA[<p>这是有两年没有动过blog了啊。</p><p>虽然自己好像热衷于学习，但是不好的是，对某件事开始热情满满，但没多久就会因这因那的原因冷却了。最近是有重新开始写周记了，希望能一直坚持下去。</p><p>blog往后估计是会比较少更新的了。</p><p>原因有三，其一是年纪，不可避免的年纪越来越大，事情也就越来越多，很多事情没办法兼顾到了；其二是文笔，写blog还是需要有点好笔头的，不然写得空泛有何用；其三是内容，自己还是一直在学习的过程中，并不是一个很好的内容生产者。</p><a id="more"></a><p>希望通过坚持写周记，能稍微练好自己写文章的能力，不管多忙，还是要抽时间学习，然后把自己所学整理归纳成文章知识。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是有两年没有动过blog了啊。&lt;/p&gt;
&lt;p&gt;虽然自己好像热衷于学习，但是不好的是，对某件事开始热情满满，但没多久就会因这因那的原因冷却了。最近是有重新开始写周记了，希望能一直坚持下去。&lt;/p&gt;
&lt;p&gt;blog往后估计是会比较少更新的了。&lt;/p&gt;
&lt;p&gt;原因有三，其一是年纪，不可避免的年纪越来越大，事情也就越来越多，很多事情没办法兼顾到了；其二是文笔，写blog还是需要有点好笔头的，不然写得空泛有何用；其三是内容，自己还是一直在学习的过程中，并不是一个很好的内容生产者。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Ray" scheme="http://www.rayliao.com/blog/tags/Ray/"/>
    
  </entry>
  
  <entry>
    <title>hashtag</title>
    <link href="http://www.rayliao.com/blog/2017/03/31952/"/>
    <id>http://www.rayliao.com/blog/2017/03/31952/</id>
    <published>2017-03-08T01:57:53.000Z</published>
    <updated>2020-04-22T02:23:51.217Z</updated>
    
    <content type="html"><![CDATA[<p><code>#过了追港剧的年岁</code></p><p><code>#会拍一点照片</code>、<code>#会看许多电影</code>、<code>#会喜欢看些剧</code>、<code>#会阅读一些书</code></p><p><code>#绘画学习家</code></p><p><code>#设计热衷家</code></p><p><code>#前端渣滓</code></p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;#过了追港剧的年岁&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#会拍一点照片&lt;/code&gt;、&lt;code&gt;#会看许多电影&lt;/code&gt;、&lt;code&gt;#会喜欢看些剧&lt;/code&gt;、&lt;code&gt;#会阅读一些书&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#绘画学习家&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#设计热衷家&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#前端渣滓&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Ray" scheme="http://www.rayliao.com/blog/tags/Ray/"/>
    
  </entry>
  
  <entry>
    <title>Something</title>
    <link href="http://www.rayliao.com/blog/2016/07/21770/"/>
    <id>http://www.rayliao.com/blog/2016/07/21770/</id>
    <published>2016-07-14T04:21:52.000Z</published>
    <updated>2020-04-03T06:26:41.309Z</updated>
    
    <content type="html"><![CDATA[<p>昨晚邦哥上课开始略微讲了下脚手架的知识，提了下yeoman，然后讲了怎么通过命令行来配置项目，根据模板的方式来生成项目文件和内容，后面就是聊人生的部分了，其实各自还是对自己的未来迷茫的，不清楚需要去学什么，<br>要达到什么目的，我也不知道，虽然我知道我要去学什么，怎么学，但我不知道我最终是想要到达什么目标，以及没有详细的学习计划。<br>前端的知识体系很庞大，很容易让人迷失，捡了西瓜忘了芝麻，所以很有必要时常停下来想一下，总结一下，才不至于荡失路。</p><p>最终我认为，应该要一个个来，持续性有效的专注于某一件事，会学得更好。</p><p>后来又叫了宵夜，看了《魔兽》，又很晚睡了，看得时候都差点睡着了，一来自己没有魔兽情节，二来下载的字幕很渣。</p><a id="more"></a><p>—关于yeoman—<br>其实通常没必要自己去写一个脚手架用来搭建完整的项目吧，不过项目搭建好了，像redux-cli一样，用命名行的文件生成必要的文件是挺好的，便捷省时间。<br>不过yeoman可以使用，因为可以很方便的搭建一个项目，只要在yeoman没找到有合适的脚手架的情况，才自己去创建一个脚手架，但其实如果你的项目是用于一次搭建的话，也没必要脚手架啊？</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;昨晚邦哥上课开始略微讲了下脚手架的知识，提了下yeoman，然后讲了怎么通过命令行来配置项目，根据模板的方式来生成项目文件和内容，后面就是聊人生的部分了，其实各自还是对自己的未来迷茫的，不清楚需要去学什么，&lt;br&gt;要达到什么目的，我也不知道，虽然我知道我要去学什么，怎么学，但我不知道我最终是想要到达什么目标，以及没有详细的学习计划。&lt;br&gt;前端的知识体系很庞大，很容易让人迷失，捡了西瓜忘了芝麻，所以很有必要时常停下来想一下，总结一下，才不至于荡失路。&lt;/p&gt;
&lt;p&gt;最终我认为，应该要一个个来，持续性有效的专注于某一件事，会学得更好。&lt;/p&gt;
&lt;p&gt;后来又叫了宵夜，看了《魔兽》，又很晚睡了，看得时候都差点睡着了，一来自己没有魔兽情节，二来下载的字幕很渣。&lt;/p&gt;
    
    </summary>
    
    
      <category term="日记" scheme="http://www.rayliao.com/blog/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>好久没有写文章了</title>
    <link href="http://www.rayliao.com/blog/2016/06/23274/"/>
    <id>http://www.rayliao.com/blog/2016/06/23274/</id>
    <published>2016-06-23T06:33:07.000Z</published>
    <updated>2020-04-03T06:26:41.310Z</updated>
    
    <content type="html"><![CDATA[<p>太久没有写东西了。</p><p>主要是太懒了，其次不知道应该写些什么，最近一直来没什么新鲜事，自己也没有取得多大的进步，虽然生活一如既往的进行着，一切有条不紊的进行着，是有在一直学习中，只是<br>有种像一站到底的长途火车般，一直行进中，没有停留，没有停留站点。</p><p>恩，需要趁现在说下最近的事。</p><p>现在的生活规律其实挺好的，一切都很积极向上，舒心自然，当然了某个时候，如中午小憩之后，下午吃完水果在阳台眺望远方的时候，吃完饭望着夕阳的时候，晚上夜深人静的<br>时候，难免有其他心思，渴望改变，羡慕那些旅行者，思考为什么处在这样一种生活，而不是更好，又或者孤独感爬满身。间歇性的，是不是撩我一下。</p><p>首先说下娱乐方面，最近减少了电影和电视剧的观影量，没有做到像去年那样一星期能最少看两部了，现在可能一星期才看没一部，剧集的话除了持续追踪的<code>生活大爆炸</code>，<br><code>权利的游戏</code>和<code>海贼王</code>之外，偶尔会忍不住看下其他的剧集，像最近看的<code>家族的形式</code>，看日剧看完罪恶感没那么强烈，因为花的时间少。游戏的话，一直都不感冒，不过<br>昨天还是安装了<code>炉石传说</code>，就试玩下吧，我想我不会沉迷的，大学沉迷往事还历历在目，还深刻。</p><a id="more"></a><p>尤克里里终于练了几首歌，虽然都不熟练，但有空练习下，还是很好的，作为陶冶生活的来说，效果很好，整天盯着手机电脑毕竟不好，适当让眼睛休息下，练下手，棒棒哒。</p><p>健身房还有持续在check in，为了健康为了身材为了自信为了未来，<code>游泳</code>作为去年一年点一个技能的技能选择，现在已经get到了，点亮之后喜欢上了，现在健身房大部分时间<br>也是花在游泳池里面，毕竟还能练更好点，以及游泳本来就很健康啊，或许接下来差不多可以尝一些新鲜事物，如跳舞，动感单车这些没试过的。</p><p><code>英语</code>应该是作为今年想要点亮的技能的，奈何进度有点恼人，有时不时背单词，听广播，阅读英文原著，但总是没有突破那个卡，还是不会说，其实最需要学习的是说和听，也就是<br>日常交流，这是最想提高掌握的，或许过段时间是要尝试去找个老师来系统学习下。</p><p>最后，前端技能学习上，发现一直只靠自己都只能一知半解，掌握得很片面，新知识了解得也很浅，最近邦哥来了之后启动react学习项目，很好啊，感觉很兴奋，也很快乐，<br>学习新的有趣的东西，大家坐在一起开发写代码，快乐不枯燥，到时候做个项目出来，实战能掌握得更好，也能真正做一些东西，非常好，期待之，就看接下来做什么项目。</p><p>以上。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;太久没有写东西了。&lt;/p&gt;
&lt;p&gt;主要是太懒了，其次不知道应该写些什么，最近一直来没什么新鲜事，自己也没有取得多大的进步，虽然生活一如既往的进行着，一切有条不紊的进行着，是有在一直学习中，只是&lt;br&gt;有种像一站到底的长途火车般，一直行进中，没有停留，没有停留站点。&lt;/p&gt;
&lt;p&gt;恩，需要趁现在说下最近的事。&lt;/p&gt;
&lt;p&gt;现在的生活规律其实挺好的，一切都很积极向上，舒心自然，当然了某个时候，如中午小憩之后，下午吃完水果在阳台眺望远方的时候，吃完饭望着夕阳的时候，晚上夜深人静的&lt;br&gt;时候，难免有其他心思，渴望改变，羡慕那些旅行者，思考为什么处在这样一种生活，而不是更好，又或者孤独感爬满身。间歇性的，是不是撩我一下。&lt;/p&gt;
&lt;p&gt;首先说下娱乐方面，最近减少了电影和电视剧的观影量，没有做到像去年那样一星期能最少看两部了，现在可能一星期才看没一部，剧集的话除了持续追踪的&lt;code&gt;生活大爆炸&lt;/code&gt;，&lt;br&gt;&lt;code&gt;权利的游戏&lt;/code&gt;和&lt;code&gt;海贼王&lt;/code&gt;之外，偶尔会忍不住看下其他的剧集，像最近看的&lt;code&gt;家族的形式&lt;/code&gt;，看日剧看完罪恶感没那么强烈，因为花的时间少。游戏的话，一直都不感冒，不过&lt;br&gt;昨天还是安装了&lt;code&gt;炉石传说&lt;/code&gt;，就试玩下吧，我想我不会沉迷的，大学沉迷往事还历历在目，还深刻。&lt;/p&gt;
    
    </summary>
    
    
      <category term="日记" scheme="http://www.rayliao.com/blog/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>字体图标的压缩</title>
    <link href="http://www.rayliao.com/blog/2016/02/6187/"/>
    <id>http://www.rayliao.com/blog/2016/02/6187/</id>
    <published>2016-02-26T03:31:20.000Z</published>
    <updated>2020-04-22T02:23:51.220Z</updated>
    
    <content type="html"><![CDATA[<p>字体图标管理办法：</p><ul><li><a href="http://iconfont.cn/" target="_blank" rel="noopener">阿里巴巴矢量图标库</a>，可以新建图标管理项目，上传添加你想要的图标上去，图标项目可以添加成员共同管理。</li><li><a href="http://font.baidu.com/editor/" target="_blank" rel="noopener">百度字体编辑器</a>，百度这个，可以打开多个ttf，woff，eot，otf格式的字体文件，然后可以复制剪切修改单个字体。</li></ul><p>所以字体图标的压缩方法，就是通过百度字体编辑器，删除没用上的字体图标，只保留需要的字体图标。</p><p>然后因为字体图标需要有多种字体格式，以适应浏览器的多样性，且在IIS部署的时候，还需要专门设置一下，针对<code>*.woff</code>和<code>*.svg</code>格式的加载问题。同时，在移动端宽带的限制下，加载多个字体文件，是不好的。所以，要换另外一种方式，就是把字体文件转换成<code>base64编码</code>格式。</p><p>使用的工具叫<code>fontmin</code>，详细使用方法可以浏览<a href="http://efe.baidu.com/blog/fontmin-getting-started/" target="_blank" rel="noopener">fontmin官网</a>。</p><a id="more"></a><p>安装<code>fontmin</code>：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> fontmin</span><br></pre></td></tr></table></figure><p>在<code>gulpfile.js</code>添加转换字体的任务：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'fontmin'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> Fontmin = <span class="built_in">require</span>(<span class="string">'fontmin'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> srcPath = <span class="string">'app/fonts/origin/xxxxx.ttf'</span>; <span class="comment">// 字体源文件</span></span><br><span class="line">    <span class="keyword">var</span> destPath = <span class="string">'app/fonts'</span>;    <span class="comment">// 输出路径</span></span><br><span class="line">    <span class="keyword">var</span> text = <span class="string">'需要提取的字体'</span>;  </span><br><span class="line">    <span class="comment">//用于设计稿有使用特殊字体，然引用整个字体文件太大，就可以提取需要的文字，比如设计稿中只使用了“风生水起”四个字，那么text的值改成“风生水起”，运行之后，就只生成这四个字的字体文件和base64编码</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化</span></span><br><span class="line">    <span class="keyword">var</span> fontmin = <span class="keyword">new</span> Fontmin()</span><br><span class="line">        .src(srcPath)               <span class="comment">// 输入配置</span></span><br><span class="line">        .use(Fontmin.glyph(&#123;        <span class="comment">// 字型提取插件</span></span><br><span class="line">            <span class="comment">// text: text</span></span><br><span class="line">        &#125;))</span><br><span class="line">        <span class="comment">// .use(Fontmin.ttf2eot())     // eot 转换插件</span></span><br><span class="line">        <span class="comment">// .use(Fontmin.ttf2woff())    // woff 转换插件     </span></span><br><span class="line">        <span class="comment">// .use(Fontmin.ttf2svg())     // svg 转换插件</span></span><br><span class="line">        .use(Fontmin.css(&#123;</span><br><span class="line">            base64: <span class="literal">true</span>,</span><br><span class="line">            glyph: <span class="literal">true</span>,</span><br><span class="line">            iconPrefix: <span class="string">'ioniconsmin-icon'</span>,  <span class="comment">// class prefix, only work when glyph is `true`. default to "icon"</span></span><br><span class="line">            fontFamily: <span class="string">'ioniconsmin'</span>,   <span class="comment">// custom fontFamily, default to filename or get from analysed ttf file</span></span><br><span class="line">            asFileName: <span class="literal">false</span>       </span><br><span class="line">        &#125;))</span><br><span class="line">        .dest(destPath);            <span class="comment">// 输出配置</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 执行</span></span><br><span class="line">    fontmin.run(<span class="function"><span class="keyword">function</span> (<span class="params">err, files, stream</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (err) &#123;                  <span class="comment">// 异常捕捉</span></span><br><span class="line">            <span class="built_in">console</span>.error(err);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'done'</span>);        <span class="comment">// 成功</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>打开命令行，输入命令：<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>gulp fontmin</span><br></pre></td></tr></table></figure></p><p>会生成字体文件和样式文件。</p><p>done.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;字体图标管理办法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://iconfont.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;阿里巴巴矢量图标库&lt;/a&gt;，可以新建图标管理项目，上传添加你想要的图标上去，图标项目可以添加成员共同管理。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://font.baidu.com/editor/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;百度字体编辑器&lt;/a&gt;，百度这个，可以打开多个ttf，woff，eot，otf格式的字体文件，然后可以复制剪切修改单个字体。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以字体图标的压缩方法，就是通过百度字体编辑器，删除没用上的字体图标，只保留需要的字体图标。&lt;/p&gt;
&lt;p&gt;然后因为字体图标需要有多种字体格式，以适应浏览器的多样性，且在IIS部署的时候，还需要专门设置一下，针对&lt;code&gt;*.woff&lt;/code&gt;和&lt;code&gt;*.svg&lt;/code&gt;格式的加载问题。同时，在移动端宽带的限制下，加载多个字体文件，是不好的。所以，要换另外一种方式，就是把字体文件转换成&lt;code&gt;base64编码&lt;/code&gt;格式。&lt;/p&gt;
&lt;p&gt;使用的工具叫&lt;code&gt;fontmin&lt;/code&gt;，详细使用方法可以浏览&lt;a href=&quot;http://efe.baidu.com/blog/fontmin-getting-started/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;fontmin官网&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://www.rayliao.com/blog/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="前端优化" scheme="http://www.rayliao.com/blog/tags/%E5%89%8D%E7%AB%AF%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>图片的合并和压缩</title>
    <link href="http://www.rayliao.com/blog/2016/02/51955/"/>
    <id>http://www.rayliao.com/blog/2016/02/51955/</id>
    <published>2016-02-26T03:29:08.000Z</published>
    <updated>2020-04-22T02:23:51.220Z</updated>
    
    <content type="html"><![CDATA[<p>主要说一下图片合并和图片压缩的方法。</p><h4 id="图片合并"><a href="#图片合并" class="headerlink" title="图片合并"></a>图片合并</h4><p><em>说明：这里的教程基于windows环境，以及认为你已经大概知道<code>gulp</code>的使用方法。</em></p><p>为了减少图片的请求次数，可以把多张图片合并成一张图片，合并的图片叫雪碧图，也可以叫精灵图。以前是依靠ps一张张图片手工合并在一起，现在可以把需要合并的图片放在同一个文件夹，然后通过工具生成雪碧图以及样式文件。</p><p>首先需要先下载安装<a href="http://www.graphicsmagick.org/" target="_blank" rel="noopener">GraphicsMagick</a>和<a href="http://www.imagemagick.org/script/index.php" target="_blank" rel="noopener">ImageMagick</a>。（这里说下为什么需要安装这两个软件，因为<code>sprity</code>默认使用的图片引擎是<code>lwip</code>，而在<code>windows</code>环境下，<code>lwip</code>是个坑，很难安装成功，所以把引擎换成<code>gm</code>，也就需要安装前面那两个软件，当然如果你是<code>mac</code>环境，可以选用<code>lwip</code>的引擎。）</p><a id="more"></a><p>安装成功之后，请重启一下电脑。接着安装<code>sprity</code>和<code>sprity-gm</code>。<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> sprity</span><br><span class="line">$ npm <span class="keyword">install</span> sprity-gm</span><br></pre></td></tr></table></figure></p><p>接着在<code>gulpfile.js</code>里写一个合并的任务：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'sprites'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> sprity = <span class="built_in">require</span>(<span class="string">'sprity'</span>);</span><br><span class="line">    sprity.src(&#123;</span><br><span class="line">        name: <span class="string">'icon'</span>,  <span class="comment">//需要合并的图片文件夹的名称</span></span><br><span class="line">        src: <span class="string">'path/*.png'</span>, <span class="comment">//图片的路径</span></span><br><span class="line">        style: <span class="string">'_icon.scss'</span>, <span class="comment">//定义生成的样式文件名</span></span><br><span class="line">        format: <span class="string">'png'</span>, <span class="comment">//指定需要合并的图片的格式</span></span><br><span class="line">        engine: <span class="string">'gm'</span>, <span class="comment">//设定图片引擎</span></span><br><span class="line">        <span class="string">'gm-use-imagemagick'</span>: <span class="literal">true</span>,</span><br><span class="line">        orientation: <span class="string">'binary-tree'</span>,  <span class="comment">//合并图片的排列方式</span></span><br><span class="line">        template: <span class="string">'./sprity-css.hbs'</span>, <span class="comment">//生成样式的模板</span></span><br><span class="line">        processor: <span class="string">'scss'</span> <span class="comment">//设定生成样式的格式</span></span><br><span class="line">    &#125;)</span><br><span class="line">    .pipe(gulpif(<span class="string">'*.png'</span>, gulp.dest(<span class="string">'img/'</span>), gulp.dest(<span class="string">'css/'</span>))); <span class="comment">//生成的雪碧图的存放位置和样式的存放位置</span></span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>具体的配置可以参考<code>sprity</code>的<a href="https://github.com/sprity/sprity" target="_blank" rel="noopener">README</a></p><p>最后在命令行中输入命令：<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>gulp sprites</span><br></pre></td></tr></table></figure></p><p>done.</p><h4 id="图片压缩"><a href="#图片压缩" class="headerlink" title="图片压缩"></a>图片压缩</h4><p>先说下<code>jpeg</code>格式的图片，尽可能的压缩图片大小，其实<code>jpeg</code>的格式是比较容易压缩的，在存储为web所用格式的时候，选择一下图片的质量或品质就可以了，选择“非常高”或者“高”就可以了，也就是品质60到80之间，尽量保证图片是小于<code>300kb</code>的。</p><p>尺寸中或大的<code>jpeg</code>格式的图片请勾选<code>连续</code>模式，而不是优化模式。为什么呢，因为优化模式的图片加载方式是从上到下加载，而<code>连续</code>模式的加载方式是从低像素到高像素加载的。</p><p><code>png</code>格式的图片压缩会比较难一点，和<code>jpeg</code>一样，尺寸中或大的请<code>交错</code>模式，交错模式和连续模式一样，加载方式是从低像素到高像素加载的。</p><p>下面有几种压缩<code>png</code>图片的方法：</p><ul><li>可以上传<code>png</code>图片到<a href="https://tinypng.com/" target="_blank" rel="noopener">tinypng</a>,但这个方式有个缺点，没办法控制压缩的量，压缩太重了，图片质量太差。</li><li>可以利用<a href="https://github.com/imagemin/imagemin-pngquant" target="_blank" rel="noopener">imagemin-pngquant</a>插件进行压缩，可以选择压缩的量，比第一种方法好点。</li><li>但有些<code>png</code>图片在必须保证图片质量的前提下，是确实没办法压缩的，但还是可以略微调整下。<code>图像</code>-<code>调整</code>-<code>色调分离</code>。利用photoshop里面的色调分离，可以压缩一下图片的大小。</li></ul><p>安装imagemin-pngquant：<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> imagemin-pngquant</span><br></pre></td></tr></table></figure></p><p>imagemin-pngquant的写法（具体可以参考<a href="https://github.com/imagemin/imagemin-pngquant" target="_blank" rel="noopener">README</a>）：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//图片压缩</span></span><br><span class="line">gulp.task(<span class="string">'imagemin'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> pngquant = <span class="built_in">require</span>(<span class="string">'imagemin-pngquant'</span>);</span><br><span class="line">    gulp.src(<span class="string">'app/common/img/src/*.png'</span>)</span><br><span class="line">        .pipe(pngquant(&#123;<span class="attr">quality</span>: <span class="string">'60'</span>, <span class="attr">speed</span>: <span class="number">4</span>&#125;)())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'app/common/img/min'</span>));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;主要说一下图片合并和图片压缩的方法。&lt;/p&gt;
&lt;h4 id=&quot;图片合并&quot;&gt;&lt;a href=&quot;#图片合并&quot; class=&quot;headerlink&quot; title=&quot;图片合并&quot;&gt;&lt;/a&gt;图片合并&lt;/h4&gt;&lt;p&gt;&lt;em&gt;说明：这里的教程基于windows环境，以及认为你已经大概知道&lt;code&gt;gulp&lt;/code&gt;的使用方法。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;为了减少图片的请求次数，可以把多张图片合并成一张图片，合并的图片叫雪碧图，也可以叫精灵图。以前是依靠ps一张张图片手工合并在一起，现在可以把需要合并的图片放在同一个文件夹，然后通过工具生成雪碧图以及样式文件。&lt;/p&gt;
&lt;p&gt;首先需要先下载安装&lt;a href=&quot;http://www.graphicsmagick.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GraphicsMagick&lt;/a&gt;和&lt;a href=&quot;http://www.imagemagick.org/script/index.php&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ImageMagick&lt;/a&gt;。（这里说下为什么需要安装这两个软件，因为&lt;code&gt;sprity&lt;/code&gt;默认使用的图片引擎是&lt;code&gt;lwip&lt;/code&gt;，而在&lt;code&gt;windows&lt;/code&gt;环境下，&lt;code&gt;lwip&lt;/code&gt;是个坑，很难安装成功，所以把引擎换成&lt;code&gt;gm&lt;/code&gt;，也就需要安装前面那两个软件，当然如果你是&lt;code&gt;mac&lt;/code&gt;环境，可以选用&lt;code&gt;lwip&lt;/code&gt;的引擎。）&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://www.rayliao.com/blog/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="前端优化" scheme="http://www.rayliao.com/blog/tags/%E5%89%8D%E7%AB%AF%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>绘制一个圆环logo</title>
    <link href="http://www.rayliao.com/blog/2016/01/13903/"/>
    <id>http://www.rayliao.com/blog/2016/01/13903/</id>
    <published>2016-01-25T15:30:27.000Z</published>
    <updated>2020-04-03T06:26:41.317Z</updated>
    
    <content type="html"><![CDATA[<p>最近趁有一点时间，想把之前很久mark下来的<a href="http://www.uisdc.com/photoshop-fabulous-colorful-ring" target="_blank" rel="noopener">ps教程</a>学一下，去到第6步就卡住了，一点都不新手啊，还好我算懂点ps，完全不懂ps的，可要怎么学哟。</p><p>所以当时我就在想，要把这个教程补充完整，新手能够看得懂的来。</p><h5 id="1-首先用绘图工具画一个椭圆形，形状按自己的需求来。"><a href="#1-首先用绘图工具画一个椭圆形，形状按自己的需求来。" class="headerlink" title="1.首先用绘图工具画一个椭圆形，形状按自己的需求来。"></a>1.首先用绘图工具画一个椭圆形，形状按自己的需求来。</h5><p>第一步之前，需要先新建一个<code>psd</code>文件，尺寸大约六七百像素就可以了，太小不好做图，太大没必要，背景色选白色就可以了，当然你也可以凭自己的爱好选择其他颜色。然后选择「椭圆工具」，按住鼠标拖拽到适合的大小，这个大小可以目测一下，跟教程里面的大小差不多就可以了。</p><p>这里有个坑，我就是因为这个坑卡住，导致我要向设计师妹子求助，可能你不会像我那么蠢，不过我还是写一下提醒一下，因为我习惯用「油漆桶工具」，所以画完椭圆形之后，因为前景色不是我要的颜色，所以我重新选择了前景色，然后用油漆桶工具把颜色填充进去，然后提示我是否要栅格化图层，我一直不懂栅格化图层是什么意思，所以义无反顾的选择了栅格化图层，然后就悲剧了，到后面第6步，一直不行。原来后面是需要这些椭圆为一个图层，而不是栅格化后的图片。</p><a id="more"></a> <h5 id="2-复制椭圆，降低透明度到30-用来观察相交的图形面积大小，平移复制的图层。"><a href="#2-复制椭圆，降低透明度到30-用来观察相交的图形面积大小，平移复制的图层。" class="headerlink" title="2.复制椭圆，降低透明度到30%用来观察相交的图形面积大小，平移复制的图层。"></a>2.复制椭圆，降低透明度到30%用来观察相交的图形面积大小，平移复制的图层。</h5><p>复制图层应该没什么难度吧，调透明度也是，所以我就不说了。</p><h5 id="3-选中这两个图层，同时复制一层，并顺时针旋转60度。"><a href="#3-选中这两个图层，同时复制一层，并顺时针旋转60度。" class="headerlink" title="3.选中这两个图层，同时复制一层，并顺时针旋转60度。"></a>3.选中这两个图层，同时复制一层，并顺时针旋转60度。</h5><h5 id="4-继续执行上一步，复制两个圆，并且旋转60度。"><a href="#4-继续执行上一步，复制两个圆，并且旋转60度。" class="headerlink" title="4.继续执行上一步，复制两个圆，并且旋转60度。"></a>4.继续执行上一步，复制两个圆，并且旋转60度。</h5><h5 id="5-以上的操作都是为了得到两个圆相交所得的月牙。"><a href="#5-以上的操作都是为了得到两个圆相交所得的月牙。" class="headerlink" title="5.以上的操作都是为了得到两个圆相交所得的月牙。"></a>5.以上的操作都是为了得到两个圆相交所得的月牙。</h5><p>那为什么要复制那么多个圆？是为了好看吧。</p><h5 id="6-选中两个圆，合并成一个图层（ctrl-E）"><a href="#6-选中两个圆，合并成一个图层（ctrl-E）" class="headerlink" title="6.选中两个圆，合并成一个图层（ctrl + E）"></a>6.选中两个圆，合并成一个图层<code>（ctrl + E）</code></h5><p>是图层的话就没问题了，如果像我一开始那样，栅格化图层转成图片的，合并之后就不一样了。</p><h5 id="7-选中形状图层，在工具栏中选择减去顶层形状并且合并形状组件。"><a href="#7-选中形状图层，在工具栏中选择减去顶层形状并且合并形状组件。" class="headerlink" title="7.选中形状图层，在工具栏中选择减去顶层形状并且合并形状组件。"></a>7.选中形状图层，在工具栏中选择减去顶层形状并且合并形状组件。</h5><p>这里要先选择ps的「直接选择工具」，然后点击需要减去的顶层形状，这里还要点击一下形状的边框，工具栏中的操作才是可执行的。</p><hr><p>后面的步骤不写了，不难的，复制出来，旋转下角度，调下颜色即可，后面的投影效果，我做得不好，总调不好符合的透视效果。</p><p><img src="img/make-logo.jpg" alt="make-logo"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近趁有一点时间，想把之前很久mark下来的&lt;a href=&quot;http://www.uisdc.com/photoshop-fabulous-colorful-ring&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ps教程&lt;/a&gt;学一下，去到第6步就卡住了，一点都不新手啊，还好我算懂点ps，完全不懂ps的，可要怎么学哟。&lt;/p&gt;
&lt;p&gt;所以当时我就在想，要把这个教程补充完整，新手能够看得懂的来。&lt;/p&gt;
&lt;h5 id=&quot;1-首先用绘图工具画一个椭圆形，形状按自己的需求来。&quot;&gt;&lt;a href=&quot;#1-首先用绘图工具画一个椭圆形，形状按自己的需求来。&quot; class=&quot;headerlink&quot; title=&quot;1.首先用绘图工具画一个椭圆形，形状按自己的需求来。&quot;&gt;&lt;/a&gt;1.首先用绘图工具画一个椭圆形，形状按自己的需求来。&lt;/h5&gt;&lt;p&gt;第一步之前，需要先新建一个&lt;code&gt;psd&lt;/code&gt;文件，尺寸大约六七百像素就可以了，太小不好做图，太大没必要，背景色选白色就可以了，当然你也可以凭自己的爱好选择其他颜色。然后选择「椭圆工具」，按住鼠标拖拽到适合的大小，这个大小可以目测一下，跟教程里面的大小差不多就可以了。&lt;/p&gt;
&lt;p&gt;这里有个坑，我就是因为这个坑卡住，导致我要向设计师妹子求助，可能你不会像我那么蠢，不过我还是写一下提醒一下，因为我习惯用「油漆桶工具」，所以画完椭圆形之后，因为前景色不是我要的颜色，所以我重新选择了前景色，然后用油漆桶工具把颜色填充进去，然后提示我是否要栅格化图层，我一直不懂栅格化图层是什么意思，所以义无反顾的选择了栅格化图层，然后就悲剧了，到后面第6步，一直不行。原来后面是需要这些椭圆为一个图层，而不是栅格化后的图片。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Design" scheme="http://www.rayliao.com/blog/tags/Design/"/>
    
      <category term="Photoshop" scheme="http://www.rayliao.com/blog/tags/Photoshop/"/>
    
  </entry>
  
  <entry>
    <title>创建新文章</title>
    <link href="http://www.rayliao.com/blog/2016/01/975/"/>
    <id>http://www.rayliao.com/blog/2016/01/975/</id>
    <published>2016-01-16T07:19:21.000Z</published>
    <updated>2020-05-06T06:41:38.437Z</updated>
    
    <content type="html"><![CDATA[<p>试一下创建一篇新的文章，感觉还是挺方便的，用hexo来写文章，就是不知道文章用中文名字行不行，我以为会自动换成拼音的写法。然后现在那个主题有点问题，不知道为什么首页的文章列表不会显示文章内容的摘要，试下创建一篇新的文章，来测试下。</p><a id="more"></a> <p>原来要加上标签隔开来才可以显示文章的摘要。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- more --&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;试一下创建一篇新的文章，感觉还是挺方便的，用hexo来写文章，就是不知道文章用中文名字行不行，我以为会自动换成拼音的写法。然后现在那个主题有点问题，不知道为什么首页的文章列表不会显示文章内容的摘要，试下创建一篇新的文章，来测试下。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="http://www.rayliao.com/blog/tags/Hexo/"/>
    
      <category term="技术" scheme="http://www.rayliao.com/blog/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
</feed>
