<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>RayLiao</title>
  
  <subtitle>不入流札记</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="http://www.rayliao.com/blog/"/>
  <updated>2020-07-17T06:36:31.844Z</updated>
  <id>http://www.rayliao.com/blog/</id>
  
  <author>
    <name>Ray Liao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>🛠前端win10开发环境配置</title>
    <link href="http://www.rayliao.com/blog/2020/07/5adce451/"/>
    <id>http://www.rayliao.com/blog/2020/07/5adce451/</id>
    <published>2020-07-17T06:18:33.000Z</published>
    <updated>2020-07-17T06:36:31.844Z</updated>
    
    <content type="html"><![CDATA[<h3 id="🗽科学上网"><a href="#🗽科学上网" class="headerlink" title="🗽科学上网"></a>🗽科学上网</h3><p>这个还是得最先配置好，才不会束手束脚的，下载软件也方便。</p><p>一句话：安装Shadowsocks，自己找线路。</p><p>不展开。</p><h3 id="📦装机必备软件"><a href="#📦装机必备软件" class="headerlink" title="📦装机必备软件"></a>📦装机必备软件</h3><ul><li>更新最新版的Microsoft Edge（自从使用谷歌的内核后，很好用了</li><li>微信客户端（不得不用的，顺便充当截图工具</li><li>Photoshop（切图仔老实安装吧</li><li>Microsoft Office（网络好的话，其实在线版就挺好，onedrive已经越来越好用了</li><li>Visual Studio Code（现今最好用的，很多插件自己选择了</li><li>Chrome浏览器</li><li>Microsoft Terminal Preview</li><li>7-Zip</li><li>Telegram（选装</li></ul><a id="more"></a><h3 id="🚧开发环境配置"><a href="#🚧开发环境配置" class="headerlink" title="🚧开发环境配置"></a>🚧开发环境配置</h3><p><strong>🎨命令行工具美化</strong></p><p>参考：</p><ul><li><a href="https://docs.microsoft.com/zh-cn/windows/terminal/" target="_blank" rel="noopener">https://docs.microsoft.com/zh-cn/windows/terminal/</a></li><li><a href="https://sspai.com/post/59380" target="_blank" rel="noopener">https://sspai.com/post/59380</a></li><li><a href="https://sspai.com/post/52868" target="_blank" rel="noopener">https://sspai.com/post/52868</a></li></ul><p>跟着官方教程就很好了。还可以顺便安装Git for windows。</p><p>选了个oh-my-posh的主题Zash还行，虽然还是没有hyper酷炫。</p><p>在配置PowerShell时，会遇到执行策略权限问题。可参考: <a href="https://www.jianshu.com/p/4eaad2163567" target="_blank" rel="noopener">https://www.jianshu.com/p/4eaad2163567</a> </p><h3 id="🔑配置ssh"><a href="#🔑配置ssh" class="headerlink" title="🔑配置ssh"></a>🔑配置ssh</h3><p>看着github的教程配置即可，常规问题的解决方案都给得很详细了。<br>参考：<a href="https://docs.github.com/cn/github/authenticating-to-github/connecting-to-github-with-ssh" target="_blank" rel="noopener">https://docs.github.com/cn/github/authenticating-to-github/connecting-to-github-with-ssh</a></p><p><strong>踩坑🕳️</strong><br>配置好ssh之后，一直提示权限被拒绝，开始以为是防火墙问题，关掉依旧不行，然后发现git bash下可以，windows terminal下不行。找了下，发现要配置config，加上host和配置文件的路径对应就可以了。</p><h3 id="🔌安装node管理工具nvm-windows和node，还有yarn"><a href="#🔌安装node管理工具nvm-windows和node，还有yarn" class="headerlink" title="🔌安装node管理工具nvm-windows和node，还有yarn"></a>🔌安装node管理工具nvm-windows和node，还有yarn</h3><p><strong>踩坑🕳️</strong><br>安装nvm-windows的时候，踩了一个坑，没有以管理员的方式去运行安装，导致node虽然安装了，但命令行无法识别，估计得手动设置环境变量，但这样不人性化，删掉nvm，重新以管理员的身份去运行安装，就可以了。</p><p>安装yarn很简单，全局安装即可：npm install -g yarn</p><p>好了，基本上环境配置好，代码clone下来之后，就可以愉快的开发了。</p><p>关于开发效率辅助的，其实还有很多可以说，比如vscode的插件，代码测试调试这些，不展开来说了，很多东西自己慢慢会熟悉的。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;🗽科学上网&quot;&gt;&lt;a href=&quot;#🗽科学上网&quot; class=&quot;headerlink&quot; title=&quot;🗽科学上网&quot;&gt;&lt;/a&gt;🗽科学上网&lt;/h3&gt;&lt;p&gt;这个还是得最先配置好，才不会束手束脚的，下载软件也方便。&lt;/p&gt;
&lt;p&gt;一句话：安装Shadowsocks，自己找线路。&lt;/p&gt;
&lt;p&gt;不展开。&lt;/p&gt;
&lt;h3 id=&quot;📦装机必备软件&quot;&gt;&lt;a href=&quot;#📦装机必备软件&quot; class=&quot;headerlink&quot; title=&quot;📦装机必备软件&quot;&gt;&lt;/a&gt;📦装机必备软件&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;更新最新版的Microsoft Edge（自从使用谷歌的内核后，很好用了&lt;/li&gt;
&lt;li&gt;微信客户端（不得不用的，顺便充当截图工具&lt;/li&gt;
&lt;li&gt;Photoshop（切图仔老实安装吧&lt;/li&gt;
&lt;li&gt;Microsoft Office（网络好的话，其实在线版就挺好，onedrive已经越来越好用了&lt;/li&gt;
&lt;li&gt;Visual Studio Code（现今最好用的，很多插件自己选择了&lt;/li&gt;
&lt;li&gt;Chrome浏览器&lt;/li&gt;
&lt;li&gt;Microsoft Terminal Preview&lt;/li&gt;
&lt;li&gt;7-Zip&lt;/li&gt;
&lt;li&gt;Telegram（选装&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="教程" scheme="http://www.rayliao.com/blog/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>🍉准初次返乡记</title>
    <link href="http://www.rayliao.com/blog/2020/06/f204d9eb/"/>
    <id>http://www.rayliao.com/blog/2020/06/f204d9eb/</id>
    <published>2020-06-28T08:40:53.000Z</published>
    <updated>2020-06-28T08:47:06.109Z</updated>
    
    <content type="html"><![CDATA[<p>归途一切也顺利，起早叫醒老准给他洗好澡，接着就带细姨去南站坐高铁，在小区江边门口走了一会就遇到有摩托佬，去到洛溪地铁站月台就刚好有车到，很快速的抵达南站，接着自己返回在洛溪买了水果，回小区准备一起出发回家。</p><p>在华快和广河塞了几段路，老准此时也不是很乖，在哭闹，或许是不适应车上的环境，或许是坐着不舒服，也或许是想吃想睡，还好没多久结束塞车完了，差不多老准也被他妈哄乖巧了，在儿童座椅上思考人生般出神的坐着，偶尔激动的吃着手，玩着小风扇。</p><a id="more"></a><p>一路顺畅，老准中间睡得很熟，乖巧得很，也没有送一泡臭臭给他爸妈，在归湖下了高速，路边很多卖水果的，问了一摊价钱，荔枝才七八块（后来想想这价钱他们也是往高开的），比起广州便宜得多，买了一串。老准开始哭闹起来，估摸着也是睡够了，确实坐不住了。所幸也很快就能到家了。</p><p>下了高速这一路到家的路况，就是地区贫富差距的最好表现。归湖一路到东留，不算路道宽敞，但路标，划线等标识清楚完善，<br>属于好走的乡道。东留到东山水电站，明显是新起的爆发富形象，一路黑溜溜的柏油路，车上走在上面安静得很，虽然划线路标等都还在完善中。东山水电站之后，一对比明显是落后的地区风貌，还是那样，更多大车的碾压之后，显得更加坑洼不平。</p><p>在老家的时间，跟我预想的不太一样。我健忘地原以为回到老家，可以去踏青，带老准拍一些山区绿意盎然，蓝天白云的照片，舒舒服服吃着喝着家乡的味道，愉快的过节，之后可以产出一篇美美的返乡记文章。</p><p>可早该预料到这时节夏日炎炎，烈日当空的天气，不该预料到也该早有准备的，自己习惯于广州有条不紊计划着的生活，回到家后一切都会打破，很多原本计划安排的事情并不能如期进行，自己的心态就会变得茫茫然。</p><p>不过我也看得很开，既然如此那就这样，虽不能留下美美的照片和文字，但在各自心中都留下了老准第一次返乡的回忆，认真感受过经历过就行了。</p><p>—</p><img src="/blog/2020/06/f204d9eb/01.GIF"><p>之前下过的那么多场大雨，老家周遭野草横生，目之所及都是绿野，好多种不同层次的绿混杂着，初晨的阳光一晒，清新的空气夹带着绿植的味道，忍不住深呼吸，吸进内心深处。有时候会遗忘时间是同步的，你在大城市拼搏，日夜快速轮替的日子里，老家的时间也在消逝着。</p><p>若没留意，你并不能感受到时间的流淌，那山还是那么高，那些楼房还在那，那路还是那么崎岖，那河流还是那么深邃。你仔细留意，老人的步履更缓慢了，脸上的皱纹密集了，头上的白发占比更多了。在我们日夜兼程忙碌拼搏的时候，他们的时间是怎么流淌的呢，余下时间并不多却又显得无所事事的状态该如何打发，这是这个地方这个时代的无可奈何。</p><p>毕竟时间往前推，那个年代不会有分离断层，且也没这个精神层面的顾虑，忙于果腹。时间往后推，虽然还不知道是如何，但我想到时候我老年的那个时代，坚定现在的想法，为自己而活吧。</p><p>一代人有一代人的烦恼和想法，不要牵挂太多。</p><img src="/blog/2020/06/f204d9eb/02.GIF"><p>—</p><p>准出生那段时间，在网上买了几颗树苗直接寄回去，那些树苗还太小，他爷爷将它们暂时种在花盆里边，这次回去也挺多事，没去查看，还有一株杨梅树，栽种在南姜田地的中间，原计划每年回去都让准跟那些树合影一张。某天早起想着去看看杨梅树如何，去到发现那一群群南姜都开了花，长得茂密又比我还高，自己穿着短裤，便打消了钻入的念头。</p><img src="/blog/2020/06/f204d9eb/03.GIF"><p>春节回去再看。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;归途一切也顺利，起早叫醒老准给他洗好澡，接着就带细姨去南站坐高铁，在小区江边门口走了一会就遇到有摩托佬，去到洛溪地铁站月台就刚好有车到，很快速的抵达南站，接着自己返回在洛溪买了水果，回小区准备一起出发回家。&lt;/p&gt;
&lt;p&gt;在华快和广河塞了几段路，老准此时也不是很乖，在哭闹，或许是不适应车上的环境，或许是坐着不舒服，也或许是想吃想睡，还好没多久结束塞车完了，差不多老准也被他妈哄乖巧了，在儿童座椅上思考人生般出神的坐着，偶尔激动的吃着手，玩着小风扇。&lt;/p&gt;
    
    </summary>
    
    
      <category term="生活" scheme="http://www.rayliao.com/blog/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>安全座椅个人深度体验</title>
    <link href="http://www.rayliao.com/blog/2020/06/f6f11f5a/"/>
    <id>http://www.rayliao.com/blog/2020/06/f6f11f5a/</id>
    <published>2020-06-28T08:39:05.000Z</published>
    <updated>2020-06-28T08:40:11.920Z</updated>
    
    <content type="html"><![CDATA[<p>我爸妈在纠结了几天之后，那天夜里终于下了决心在购物车选中，用力的按下了支付按钮。我爸当时脸上表情是贫穷的，虽然我没看到，但根据他按下按钮之前后跟我妈说“确定买？确定吗？买吗？买，买了哦，买了哦，买了！啊”可推断出。某东很快，隔天就到了，快递小哥（不对，以我的年纪应该叫快递阿伯）扛了上来，我妈抱怨我爸不该寄到家里来，又还得自己扛下去。</p><p>中午我爸回来把座椅拿出来放在客厅沙发散味，他跟我妈商量今晚吃完饭研究下趁着天未黑就把座椅拿下去安装。晚上他们吃完饭我也饿了就在房间吃奶，我爸似乎就在客厅认真的摆弄着，时不时翻阅下说明书，他以前读书的时候都没那么认真吧。然后他进来跟我妈说先下去安装好，等我吃好了带我下去体验。我妈准了。</p><a id="more"></a><p>我跟我妈下去的时候，我爸还在大汗淋漓的捣鼓着，虽然是iosfix接口，但车的卡口藏得很深，很难同时两边卡进去，这个点数楼下好多蚊子吗，还好我妈抱着我一直在晃动，不然我细皮嫩肉的会被咬惨。折腾了应该有10分钟，终于接上了，接着就调整下伸缩式支撑腿的长度就可以了。</p><p>我爸让我妈把我放上去体验下，然后我爸就教我妈如何360旋转，如何调节躺角幅度，五点式的安全带如何操作。我坐上去之后，他们觉得有点偏拥挤，可能是因为新生儿坐垫的缘故，但我爸说，拥挤的话包裹性也比较好，车行驶过程中不会过于晃动（好像有点道理）。拥挤也不用担心说觉得热，毕竟车内都是会开空调的，他们还觉得不够平躺。我倒没觉得有什么，就觉得比较好奇和新鲜，还挺舒服的，因为我最近比较喜欢这样坐着，喜欢往前倾，我比较有力气了 ，不喜欢躺着了，躺了两个多月躺烦了。</p><p>坐了没一会，我爸妈就决定回去，我爸让我妈试着旋转以及解开安全带，对我妈来说这两个操作似乎都挺吃力的，我爸也说五点式的安全带不太好操作，卡紧和解开都不太易，这是弊端。</p><p>过几天我爸妈带我回老家，我再认真感受下吧。</p><h3 id="27号续"><a href="#27号续" class="headerlink" title="27号续"></a>27号续</h3><p>安全座椅不错哦，经过回老家来回一趟，我现在到了比较喜欢坐着的年纪，所以坐在安全座椅上挺舒服的，一路在车上我基本都在睡觉呢，睡得可舒服，只是饿的时候醒来一下。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我爸妈在纠结了几天之后，那天夜里终于下了决心在购物车选中，用力的按下了支付按钮。我爸当时脸上表情是贫穷的，虽然我没看到，但根据他按下按钮之前后跟我妈说“确定买？确定吗？买吗？买，买了哦，买了哦，买了！啊”可推断出。某东很快，隔天就到了，快递小哥（不对，以我的年纪应该叫快递阿伯）扛了上来，我妈抱怨我爸不该寄到家里来，又还得自己扛下去。&lt;/p&gt;
&lt;p&gt;中午我爸回来把座椅拿出来放在客厅沙发散味，他跟我妈商量今晚吃完饭研究下趁着天未黑就把座椅拿下去安装。晚上他们吃完饭我也饿了就在房间吃奶，我爸似乎就在客厅认真的摆弄着，时不时翻阅下说明书，他以前读书的时候都没那么认真吧。然后他进来跟我妈说先下去安装好，等我吃好了带我下去体验。我妈准了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="生活" scheme="http://www.rayliao.com/blog/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>📺 如何安逸地刷剧刷电影</title>
    <link href="http://www.rayliao.com/blog/2020/06/841b4b37/"/>
    <id>http://www.rayliao.com/blog/2020/06/841b4b37/</id>
    <published>2020-06-18T04:18:45.000Z</published>
    <updated>2020-06-18T07:59:29.350Z</updated>
    
    <content type="html"><![CDATA[<p>去年有便宜买到百度网盘的会员，找好资源的磁力链接之后，在网盘下载来看，是挺愉快的。然而今年会员没优惠了，感觉负担不起，加之被动以及主动地减少观影量，所以也就不打算购入网盘会员。且后来发现，在telegram上资源还挺丰富，刷剧刷电影也挺爽的，虽然是频道推什么你看什么，比较被动，但也能找到一些经典剧集，偏欧美的多。</p><p>这次因为爱人也太久没看剧，想找些剧给她看，我想到前段时间挺火的「机智的医生生活」。原本想着在线看，但清晰度差强人意，终究还是要下载下来看比较舒服。</p><p>如此，就只能自己找找资料，搭起一个从找资源，下载到观赏的安逸舒适的观影之旅吧。</p><a id="more"></a><h3 id="🔍-资源搜索工具"><a href="#🔍-资源搜索工具" class="headerlink" title="🔍 资源搜索工具"></a>🔍 资源搜索工具</h3><p>以前有一个BT之家的论坛网址，里边资源挺齐全的，都是在那找到资源后拿去百度网盘下载，现在隔那么久打开，网址已经失效了，暂时找不回来。</p><p>FIX字幕侠官网上的资源还挺齐全的，官网做得也不错，点赞，给出的下载方式也很多种，业界良心。</p><p>传送门：<br><a href="http://www.zimuxia.cn/" target="_blank" rel="noopener">http://www.zimuxia.cn/</a> </p><p>磁力链接聚合客户端，把所有磁力资源集合一起，搜索一目了然，界面设置都做得挺好的。但我发现挺多bug的，经常不是timeout就是搜不到资源，或者搜到之后重新搜又没了。</p><img src="/blog/2020/06/841b4b37/magnetw.png" title="magnetw"><p>传送门：<br><a href="https://github.com/xiandanin/magnetW" target="_blank" rel="noopener">https://github.com/xiandanin/magnetW</a></p><h3 id="⏬-下载工具"><a href="#⏬-下载工具" class="headerlink" title="⏬ 下载工具"></a>⏬ 下载工具</h3><p>aria2gui还没尝试，各位感兴趣的可以试下好不好用，好用的话可以告诉我。这次我主要安装了motrix来使用，因为喜欢motrix的界面做得很好看。移动的龟速在github上下个几十MB的安装包都要老久。</p><img src="/blog/2020/06/841b4b37/motrix.png" title="motrix"><p>感觉不是很给力啊，下不动，可能是资源的问题吧。（晚上出去一趟拿快递回来，发现能下载动）</p><p>传送门：<br><a href="https://github.com/yangshun1029/aria2gui" target="_blank" rel="noopener">https://github.com/yangshun1029/aria2gui</a><br><a href="https://github.com/agalwood/Motrix" target="_blank" rel="noopener">https://github.com/agalwood/Motrix</a> </p><h3 id="🦐-下载到小米路由器"><a href="#🦐-下载到小米路由器" class="headerlink" title="🦐 下载到小米路由器"></a>🦐 下载到小米路由器</h3><p>额，买的AC2100竟然不支持远程下载，而且连USB接口都没有，有够鸡肋的。不过算了，买都买了，看在无线桥接之后，信号挺稳定的，就原谅它了。</p><h3 id="☁️-还是百度云香"><a href="#☁️-还是百度云香" class="headerlink" title="☁️ 还是百度云香"></a>☁️ 还是百度云香</h3><p>还是百度云香啊，找好资源离线瞬间下载好，然后iPad下载下来就可以看了。</p><h3 id="🚛-传送到iPad"><a href="#🚛-传送到iPad" class="headerlink" title="🚛 传送到iPad"></a>🚛 传送到iPad</h3><p>下载好airdrop到iPad之后发现，mp4格式的视频竟然保存失败，存放到文件目录去了，um，这又得折腾着找一个好用的播放器了。好吧，全网搜索了解</p><img src="/blog/2020/06/841b4b37/wait.jpg" title="wait"><p>先尝试免费版的，安装了sPlayer，nPlayer，infuse 6和playerXtreme，试用一番后，留下sPlayer，其他都删掉了。可能花钱买的话会不一样，网上挺多人推nPlayer。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;去年有便宜买到百度网盘的会员，找好资源的磁力链接之后，在网盘下载来看，是挺愉快的。然而今年会员没优惠了，感觉负担不起，加之被动以及主动地减少观影量，所以也就不打算购入网盘会员。且后来发现，在telegram上资源还挺丰富，刷剧刷电影也挺爽的，虽然是频道推什么你看什么，比较被动，但也能找到一些经典剧集，偏欧美的多。&lt;/p&gt;
&lt;p&gt;这次因为爱人也太久没看剧，想找些剧给她看，我想到前段时间挺火的「机智的医生生活」。原本想着在线看，但清晰度差强人意，终究还是要下载下来看比较舒服。&lt;/p&gt;
&lt;p&gt;如此，就只能自己找找资料，搭起一个从找资源，下载到观赏的安逸舒适的观影之旅吧。&lt;/p&gt;
    
    </summary>
    
    
      <category term="生活" scheme="http://www.rayliao.com/blog/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>优化下家里的网络</title>
    <link href="http://www.rayliao.com/blog/2020/06/bb608ee0/"/>
    <id>http://www.rayliao.com/blog/2020/06/bb608ee0/</id>
    <published>2020-06-09T02:58:14.000Z</published>
    <updated>2020-06-12T06:53:02.481Z</updated>
    
    <content type="html"><![CDATA[<p>用的宽带是移动的200m，房子是租的，三房一厅94平，一个TP-Link的路由器放在客厅，其实一直觉得在主卧网速很差，但没有过多去理会，以为是移动本身的问题。</p><p>上周网络差到不行，躺在床上没办法工作，就下定决定好好排查下是移动宽带的问题还是路由器问题。网上找了下，可以通过ping的方式看下发送包和丢包情况去判断下宽带的速度，还可以直接连一下移动的网关试一下如何。后来思考了下，也不用那么麻烦，直接用测速的在客厅分别连下路由器和移动的网关就行了。然后发现路由器和移动的网关速度都很可以啊。然后在几个房间分别测试了下，主卧速度差到不行，看来是Wi-Fi信号衰减的问题无疑了。</p><a id="more"></a><p>知道问题所在就好办了，接着就是选择解决方案。最高枕无忧的方法当然是拉一条网线进去主卧，但有些困难，因为是租的房子，只能明线，就会很丑，而且没有洞可以穿进房间。所以使用网线的方案都放弃。其实一开始还傻乎乎的去尝试看已有那台路由器能不能跟移动的智能网关做无线桥接，发现移动的网关并不支持，也就一直连不上。</p><ol><li>首先尝试了最实惠的方案，在某东买了TP-Link的无线信号放大器，测试插在了几个位置，但发现效果差强人意，只好退货放弃；</li><li>接着考察了下去房间的走廊情况，想着能不能把网线拉到那，再接上一台路由器，做桥接，但没有找到理想的插座，也只好作罢。</li><li>最后趁着618咬咬牙买了华硕的AC86U，有30天无忧体验挺好，把原来那个路由器放到房间做桥接，效果还行，虽然也并没有达到理想状态，但比之前好多了，信号衰减了50%吧。其实做无线桥接买个普通的路由器就好了。但自己有私心，想玩下，想刷梅林，挂下ss体验下。</li></ol><p>网上一直有说华硕这个路由器不稳定，经常断流，不知道会不会。先体验下吧，这个路由器支持华硕的AiMesh，但没那个本钱买多一台，这个功能对我暂时没用，插u盘似乎支持得挺好，后面可以弄个简易的Nas，似乎主打游戏模式，但自己现在不玩游戏，对我也没用。</p><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>再三考虑之后（流下了没钱的泪），还是把AC86U退掉了。然后换了台小米的路由器，这次拿回来之后用5G的桥接，在主卧速度竟然很棒，也就更加没有理由留下AC86U了。</p><p>本来还考虑要不要升级移动的宽带，每个月加50元，可以升级到600M，还送两台路由器，挺香的，但就是要被移动监禁两年。也是再三考虑之后（再次流下了没钱的泪），想想200M也够了，平时在家宽带使用率也不高，也就作罢了。</p><p>参考：<a href="https://zhuanlan.zhihu.com/p/51101641" target="_blank" rel="noopener">WiFi穿墙完全指南</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用的宽带是移动的200m，房子是租的，三房一厅94平，一个TP-Link的路由器放在客厅，其实一直觉得在主卧网速很差，但没有过多去理会，以为是移动本身的问题。&lt;/p&gt;
&lt;p&gt;上周网络差到不行，躺在床上没办法工作，就下定决定好好排查下是移动宽带的问题还是路由器问题。网上找了下，可以通过ping的方式看下发送包和丢包情况去判断下宽带的速度，还可以直接连一下移动的网关试一下如何。后来思考了下，也不用那么麻烦，直接用测速的在客厅分别连下路由器和移动的网关就行了。然后发现路由器和移动的网关速度都很可以啊。然后在几个房间分别测试了下，主卧速度差到不行，看来是Wi-Fi信号衰减的问题无疑了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="教程" scheme="http://www.rayliao.com/blog/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>webp是该用起来了</title>
    <link href="http://www.rayliao.com/blog/2020/05/7b2b0798/"/>
    <id>http://www.rayliao.com/blog/2020/05/7b2b0798/</id>
    <published>2020-05-22T12:54:46.000Z</published>
    <updated>2020-05-27T07:31:51.109Z</updated>
    
    <content type="html"><![CDATA[<p>webp的好处不用多说了，相比jpg和png格式，文件大小能节省很多。但因为并不是所有浏览器都支持，所以需要做一些兼容处理。</p><h3 id="得到webp"><a href="#得到webp" class="headerlink" title="得到webp"></a>得到webp</h3><p>随便搜索引擎一搜，会有很多在线转换图片格式的工具，也有很多可供下载的工具，看你自己怎么用了，比如说前端的<code>gulp</code>，会有对应的图片压缩转换的插件可使用。这里我就说下google提供的的命令行工具<code>webp</code>。</p><p>在Mac下可以使用homebrew安装webp工具：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install webp</span><br></pre></td></tr></table></figure><p>安装完成之后，就可以使用cwebp将jpg或png转成webp格式：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cwebp [-preset &lt;...&gt;] [options] in_file [-o out_file]</span><br></pre></td></tr></table></figure><p>更多的操作自行查阅<a href="https://developers.google.com/speed/webp/docs/using" target="_blank" rel="noopener">文档</a>吧。</p><a id="more"></a><h3 id="后端处理"><a href="#后端处理" class="headerlink" title="后端处理"></a>后端处理</h3><p>这里就不细说了，大概原理就是在浏览器向服务器发起请求时，对于支持webp图片的浏览器，会在请求头Accept中带上image/webp的信息，服务器就能识别浏览器是否支持webp从而返回对应的图片格式，具体可查看凹凸实验室的文章——<a href="https://aotu.io/notes/2016/06/23/explore-something-of-webp/" target="_blank" rel="noopener">探究WebP一些事儿</a></p><h3 id="前端处理"><a href="#前端处理" class="headerlink" title="前端处理"></a>前端处理</h3><p>在页面上可以使用<code>picture</code>标签来做兼容，会根据浏览器设备版本选择不同的选项：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">picture</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- JPEG --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span></span></span><br><span class="line"><span class="tag">        <span class="attr">srcset</span>=<span class="string">"./images/example.jpg"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">type</span>=<span class="string">"image/jpeg"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- WebP --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span></span></span><br><span class="line"><span class="tag">        <span class="attr">srcset</span>=<span class="string">"./images/example.webp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">type</span>=<span class="string">"image/webp"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- The fallback --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span></span></span><br><span class="line"><span class="tag">        <span class="attr">src</span>=<span class="string">"./images/example.jpg"</span> <span class="attr">alt</span>=<span class="string">"example"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">picture</span>&gt;</span></span><br></pre></td></tr></table></figure><p>但这样写会比较臃肿，可以通过<code>Service Wroker</code>来拦截网络请求，监听fetch事件，根据Accept头部来判断浏览器是否支持webp图片，并且查找是否存在<code>image/webp</code>Mime类型，这样就可以确定并替换成webp返回。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// serviceWorker.ts</span></span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'fetch'</span>, <span class="function">(<span class="params">e: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// Clone the request</span></span><br><span class="line">    <span class="keyword">const</span> req = e.request.clone()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check if the image is a jpeg</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="regexp">/\.jpg$|.png$/</span>.test(e.request.url)) &#123;</span><br><span class="line">    <span class="comment">// Get all of the headers</span></span><br><span class="line">    <span class="keyword">const</span> headers: <span class="built_in">string</span>[] = <span class="built_in">Array</span>.from(req.headers.entries())</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Inspect the accept header for WebP support</span></span><br><span class="line">    <span class="keyword">const</span> acceptHeader: <span class="built_in">string</span>[] = headers.filter(</span><br><span class="line">        (item) =&gt; item[<span class="number">0</span>] === <span class="string">'accept'</span></span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">const</span> supportsWebp = acceptHeader[<span class="number">1</span>].includes(<span class="string">'webp'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// If we support WebP</span></span><br><span class="line">    <span class="keyword">if</span> (supportsWebp) &#123;</span><br><span class="line">        <span class="comment">// Build the return URL</span></span><br><span class="line">        <span class="keyword">const</span> returnUrl =</span><br><span class="line">        req.url.substr(<span class="number">0</span>, req.url.lastIndexOf(<span class="string">'.'</span>)) + <span class="string">'.webp'</span></span><br><span class="line"></span><br><span class="line">        e.respondWith(</span><br><span class="line">        fetch(returnUrl, &#123;</span><br><span class="line">            mode: <span class="string">'no-cors'</span>,</span><br><span class="line">        &#125;)</span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>然后页面就可以写得简单些：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">picture</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span></span></span><br><span class="line"><span class="tag">        <span class="attr">srcset</span>=<span class="string">"./images/example.jpg"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">type</span>=<span class="string">"image/jpeg"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">picture</span>&gt;</span></span><br></pre></td></tr></table></figure><p>但看了下这个<a href="https://deanhume.github.io/Service-Workers-WebP/" target="_blank" rel="noopener">例子</a>，也一样会去请求jpg的图片，那这样就不起作用了。</p><h3 id="React下使用且要支持CSS内使用"><a href="#React下使用且要支持CSS内使用" class="headerlink" title="React下使用且要支持CSS内使用"></a>React下使用且要支持CSS内使用</h3><p>上面的方式是挺方便的，但因为我的个人网站目前使用react，有些图片是导入进去使用的，我试了下如此service worker的方式就不支持了。加之很多时候会在css内引入背景图片，所以不能在service worker做判断，那就还是在页面上操作：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> ImgWithFallback = (&#123;</span><br><span class="line">  src,</span><br><span class="line">  fallback,</span><br><span class="line">  type = <span class="string">'image/webp'</span>,</span><br><span class="line">  ...delegated</span><br><span class="line">&#125;) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;picture&gt;</span><br><span class="line">      &lt;source srcSet=&#123;src&#125; type=&#123;type&#125; /&gt;</span><br><span class="line">      &lt;img src=&#123;fallback&#125; &#123;...delegated&#125; /&gt;</span><br><span class="line">    &lt;<span class="regexp">/picture&gt;</span></span><br><span class="line"><span class="regexp">  );</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br></pre></td></tr></table></figure><p>使用的时候是：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;ImgWithFallback</span><br><span class="line">  src=&#123;<span class="built_in">require</span>(<span class="string">"./images/example.webp"</span>)&#125;</span><br><span class="line">  fallback=&#123;<span class="built_in">require</span>(<span class="string">"./images/example.png"</span>)&#125;</span><br><span class="line">  alt=<span class="string">"example"</span></span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure><p>想要在css内使用webp，就得知道浏览器是否支持webp，然后在html加上一个class做标识，如此在css内使用background引入图片的时候，就可以根据class去引入不同格式的图片。</p><p>如何知道浏览器是否支持webp呢，创建一个canvas判断下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">canUseWebP</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> elem = <span class="built_in">document</span>.createElement(<span class="string">'canvas'</span>);</span><br><span class="line">    <span class="keyword">if</span> (!!(elem.getContext &amp;&amp; elem.getContext(<span class="string">'2d'</span>))) &#123;</span><br><span class="line">        <span class="comment">// was able or not to get WebP representation</span></span><br><span class="line">        <span class="keyword">return</span> elem.toDataURL(<span class="string">'image/webp'</span>).indexOf(<span class="string">'data:image/webp'</span>) == <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// very old browser like IE 8, canvas not supported</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后根据判断在html标签加上class即可。</p><p>参考：</p><ul><li><a href="https://aotu.io/notes/2015/11/06/webp-responsive-image/" target="_blank" rel="noopener">https://aotu.io/notes/2015/11/06/webp-responsive-image/</a></li><li><a href="https://aotu.io/notes/2016/06/23/explore-something-of-webp/" target="_blank" rel="noopener">https://aotu.io/notes/2016/06/23/explore-something-of-webp/</a></li><li><a href="https://www.npmjs.com/package/react-image-webp" target="_blank" rel="noopener">https://www.npmjs.com/package/react-image-webp</a></li><li><a href="https://joshwcomeau.com/performance/embracing-modern-image-formats/" target="_blank" rel="noopener">https://joshwcomeau.com/performance/embracing-modern-image-formats/</a></li><li><a href="https://developers.google.com/speed/webp/docs/using" target="_blank" rel="noopener">https://developers.google.com/speed/webp/docs/using</a></li><li><a href="https://css-tricks.com/using-webp-images/#article-header-id-3" target="_blank" rel="noopener">https://css-tricks.com/using-webp-images/#article-header-id-3</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;webp的好处不用多说了，相比jpg和png格式，文件大小能节省很多。但因为并不是所有浏览器都支持，所以需要做一些兼容处理。&lt;/p&gt;
&lt;h3 id=&quot;得到webp&quot;&gt;&lt;a href=&quot;#得到webp&quot; class=&quot;headerlink&quot; title=&quot;得到webp&quot;&gt;&lt;/a&gt;得到webp&lt;/h3&gt;&lt;p&gt;随便搜索引擎一搜，会有很多在线转换图片格式的工具，也有很多可供下载的工具，看你自己怎么用了，比如说前端的&lt;code&gt;gulp&lt;/code&gt;，会有对应的图片压缩转换的插件可使用。这里我就说下google提供的的命令行工具&lt;code&gt;webp&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;在Mac下可以使用homebrew安装webp工具：&lt;/p&gt;
&lt;figure class=&quot;highlight bat&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;brew install webp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;安装完成之后，就可以使用cwebp将jpg或png转成webp格式：&lt;/p&gt;
&lt;figure class=&quot;highlight bat&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cwebp [-preset &amp;lt;...&amp;gt;] [options] in_file [-o out_file]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;更多的操作自行查阅&lt;a href=&quot;https://developers.google.com/speed/webp/docs/using&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;文档&lt;/a&gt;吧。&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://www.rayliao.com/blog/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>杯葛微信行动</title>
    <link href="http://www.rayliao.com/blog/2020/05/57cb9257/"/>
    <id>http://www.rayliao.com/blog/2020/05/57cb9257/</id>
    <published>2020-05-19T00:55:13.000Z</published>
    <updated>2020-05-19T01:45:19.050Z</updated>
    
    <content type="html"><![CDATA[<h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>原因一，iOS有个屏幕使用时间的功能，几次查看都发现微信的使用时间远远高于其他，秉持着时间就是金钱的原则，浪费太多时间在微信上让自身体现得过于懒散；原因二，没有对比就没有伤害，自从深度使用TG之后，越来越看不起微信了，太多限制功能，什么功能都想做，吃成胖子，导致聊天那块的功能做得不够精，不够年轻，虽然我也能体谅你，毕竟你的使用人群以中老年人占多估计，但不代表我就喜欢你；原因三，之前要做一个解散群的处理，发现并没有相关功能提供，只能一个个踢除，之后删掉自己，这样就造成了误解，在未告知的情况下，别人会误解是你把TA踢了，而不是解散群。</p><a id="more"></a><h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><p>减少自己对微信的使用时间，戒掉自己无聊时就想打开微信朋友圈看看的坏习惯，拿回属于自己的时间，做些能提升自身的事情，比如说在其他地方看些好文章，或者把这碎片时间转成专注时间，想些事情或者做些家务活，陪陪准哥。</p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>之前粗略看过一篇教程，讲如何通过其他聊天软件去收发微信消息，大抵的做法是搭一个服务器，把自己的微信登录挂在那，然后用一些工具或者脚本之类的，读取转发微信的消息。这样做有点折腾，且本质上还是使用着微信的，不适合我。要减少微信的使用，首先得分析下，自己使用了微信的哪些功能，最依赖使用哪些功能，哪些能迁移能找到替代品。</p><p>以功能去分微信的使用的话，有：</p><ol><li>社交</li></ol><p>社交这块基本无解，现在国人基本上都是使用微信联系了，不能不说，还是方便的，所以没办法找到完美的替代品，因为其他地方的社交联系人都是不齐全的，苹果的message不支持安卓，短信不可能，<code>QQ</code>过于年轻化，外网的聊天软件太高端。所以社交聊天这块做不了什么。</p><ol start="2"><li>支付，金融</li></ol><p>这块开始我是有使用的，跟支付宝同时使用，后来发现微信这块功能层级藏得比较深，很不方便，目前完全用支付宝代替了，只留了少许资金，用于临时急用，和现在每月要交房租转给房东。</p><ol start="3"><li>小程序，基本是作为工具使用</li></ol><p>使用率其实不高，偶尔用到，但也有一些常用而且无可替代的东西，如<code>粤省事</code>，因为疫情需要使用的<code>穗康码</code>，和小区开门用的<code>亲邻开门</code>。其他都是可有可无，支付宝上也有。这一块影响不大。</p><ol start="4"><li>公众号和订阅号的文章资讯阅读</li></ol><p>这个很多都是可以迁移或替代的，比如自己常看的虎嗅，可以用虎嗅APP看，其他也类似，可以回到原本的地方看，也可以去微博看，也可以通RRS，或者邮箱订阅的形式去阅读。</p><ol start="5"><li>朋友圈</li></ol><p>曾想过完全关停，但也舍不得。我发现互联网越来越发达，但是人与人之间的沟通交流反而越来越少，频率越来越低，或许就是因为太发达，觉得我随时都能联系到别人，也就不会去联系别人了。也就导致了解知道别人的生活如何的途径只剩下朋友圈了。大家似乎都知道这一点，也就各自都很精心去维护自己的朋友圈形象。</p><p>我也不知道好还是不好。但我那看到朋友圈红点就想去点的强迫症，是该去治疗一下的。</p><h3 id="行动"><a href="#行动" class="headerlink" title="行动"></a>行动</h3><p>根据上述分析，也就可以要做些什么，产生一个行动细则了。</p><ul><li>减少闲聊，该聊还是聊</li><li>用支付宝替代支付</li><li>转移文章资讯的阅读</li><li><strong>减少朋友圈的使用频率，开始做到一天只看一次，坚持住之后做到一周只看一次</strong></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h3&gt;&lt;p&gt;原因一，iOS有个屏幕使用时间的功能，几次查看都发现微信的使用时间远远高于其他，秉持着时间就是金钱的原则，浪费太多时间在微信上让自身体现得过于懒散；原因二，没有对比就没有伤害，自从深度使用TG之后，越来越看不起微信了，太多限制功能，什么功能都想做，吃成胖子，导致聊天那块的功能做得不够精，不够年轻，虽然我也能体谅你，毕竟你的使用人群以中老年人占多估计，但不代表我就喜欢你；原因三，之前要做一个解散群的处理，发现并没有相关功能提供，只能一个个踢除，之后删掉自己，这样就造成了误解，在未告知的情况下，别人会误解是你把TA踢了，而不是解散群。&lt;/p&gt;
    
    </summary>
    
    
      <category term="教程" scheme="http://www.rayliao.com/blog/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>在TypeScript项目使用ESLint和Prettier</title>
    <link href="http://www.rayliao.com/blog/2020/05/ba9da8f7/"/>
    <id>http://www.rayliao.com/blog/2020/05/ba9da8f7/</id>
    <published>2020-05-06T06:41:05.000Z</published>
    <updated>2020-05-19T01:08:33.256Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>翻译文章，<a href="https://www.robertcooper.me/using-eslint-and-prettier-in-a-typescript-project" target="_blank" rel="noopener">原文地址</a></p></blockquote><p>TypeScript语法规则和代码风格的检查工具，主要有两种，TSLint和ESLint。TSLint只能用于TypeScript的检查，ESLint同时支持JavaScript和TypeScript。</p><p>在<a href="https://github.com/Microsoft/TypeScript/issues/29288#developer-productivity-tools-and-integration" target="_blank" rel="noopener">TypeScript 2019线路</a>中，TypeScript核心团队解释说ESLint具有比TSLint更高性能的体系结构，并且在为TypeScript提供编辑器整合时，他们只会专注于ESLint。因此，我建议使用ESLint来整理TypeScript项目。</p><h3 id="在TypeScript项目中设置ESLint"><a href="#在TypeScript项目中设置ESLint" class="headerlink" title="在TypeScript项目中设置ESLint"></a>在TypeScript项目中设置ESLint</h3><p>首先安装所有需要的依赖：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">yarn</span> <span class="selector-tag">add</span> <span class="selector-tag">eslint</span> @<span class="keyword">typescript</span>-<span class="keyword">eslint</span>/<span class="keyword">parser</span> @typescript-eslint/eslint-plugin --dev</span><br></pre></td></tr></table></figure><blockquote><p>如果项目是使用create-react-app搭建，eslint已经通过react-scripts包含在依赖中，因此无需额外通过yarn去安装。</p></blockquote><ul><li>eslint：ESLint的核心库</li><li>@typescript-eslint/parser：允许ESLint转换TypeScript代码的解析器</li><li>@typescript-eslint/eslint-plugin：包含一堆特定于TypeScript的ESLint规则的插件</li></ul><a id="more"></a><p>接下来，在项目根目录创建一个配置文件：<code>.eslintrc.js</code>，以下是示例配置：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  parser: <span class="string">"@typescript-eslint/parser"</span>, <span class="comment">// Specifies the ESLint parser</span></span><br><span class="line">  parserOptions: &#123;</span><br><span class="line">    ecmaVersion: <span class="number">2020</span>, <span class="comment">// Allows for the parsing of modern ECMAScript features</span></span><br><span class="line">    sourceType: <span class="string">"module"</span> <span class="comment">// Allows for the use of imports</span></span><br><span class="line">  &#125;,</span><br><span class="line">  extends: [</span><br><span class="line">    <span class="string">"plugin:@typescript-eslint/recommended"</span> <span class="comment">// Uses the recommended rules from the @typescript-eslint/eslint-plugin</span></span><br><span class="line">  ],</span><br><span class="line">  rules: &#123;</span><br><span class="line">    <span class="comment">// Place to specify ESLint rules. Can be used to overwrite rules specified from the extended configs</span></span><br><span class="line">    <span class="comment">// e.g. "@typescript-eslint/explicit-function-return-type": "off",</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>建议使用js文件替换json文件，因为js文件支持写上注释，能更好的描述规则。</p></blockquote><p>如果项目使用react，需要安装依赖<code>eslint-plugin-react</code>，上面的配置要改为：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  parser: <span class="string">"@typescript-eslint/parser"</span>, <span class="comment">// Specifies the ESLint parser</span></span><br><span class="line">  parserOptions: &#123;</span><br><span class="line">    ecmaVersion: <span class="number">2020</span>, <span class="comment">// Allows for the parsing of modern ECMAScript features</span></span><br><span class="line">    sourceType: <span class="string">"module"</span>, <span class="comment">// Allows for the use of imports</span></span><br><span class="line">    ecmaFeatures: &#123;</span><br><span class="line">      jsx: <span class="literal">true</span> <span class="comment">// Allows for the parsing of JSX</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  settings: &#123;</span><br><span class="line">    react: &#123;</span><br><span class="line">      version: <span class="string">"detect"</span> <span class="comment">// Tells eslint-plugin-react to automatically detect the version of React to use</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  extends: [</span><br><span class="line">    <span class="string">"plugin:react/recommended"</span>, <span class="comment">// Uses the recommended rules from @eslint-plugin-react</span></span><br><span class="line">    <span class="string">"plugin:@typescript-eslint/recommended"</span> <span class="comment">// Uses the recommended rules from @typescript-eslint/eslint-plugin</span></span><br><span class="line">  ],</span><br><span class="line">  rules: &#123;</span><br><span class="line">    <span class="comment">// Place to specify ESLint rules. Can be used to overwrite rules specified from the extended configs</span></span><br><span class="line">    <span class="comment">// e.g. "@typescript-eslint/explicit-function-return-type": "off",</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>最终，在你的配置文件中，你自行决定你要导入什么规则，以及你要使用哪些规则。</p><h3 id="加入Prettier完美契合"><a href="#加入Prettier完美契合" class="headerlink" title="加入Prettier完美契合"></a>加入Prettier完美契合</h3><p>Prettier能很好的格式化你的代码，跟ESLint完美契合使用，安装依赖：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn <span class="keyword">add</span><span class="bash"> prettier eslint-config-prettier eslint-plugin-prettier --dev</span></span><br></pre></td></tr></table></figure><ul><li>prettier: prettier核心库</li><li>eslint-config-prettier: 禁用可能会跟Prettier冲突的ESLint规则</li><li>eslint-plugin-prettier: 把Prettier作为ESLint的规则使用</li></ul><p>在根目录创建配置文件<code>.prettierrc.js</code>，用来配置prettier，以下是配置示例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  semi: <span class="literal">true</span>,</span><br><span class="line">  trailingComma: <span class="string">"all"</span>,</span><br><span class="line">  singleQuote: <span class="literal">true</span>,</span><br><span class="line">  printWidth: <span class="number">120</span>,</span><br><span class="line">  tabWidth: <span class="number">4</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>然后<code>.eslintrc.js</code>中的extends数组需要加上两行：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"prettier/@typescript-eslint"</span>, <span class="comment">// Uses eslint-config-prettier to disable ESLint rules from @typescript-eslint/eslint-plugin that would conflict with prettier</span></span><br><span class="line"><span class="string">"plugin:prettier/recommended"</span> <span class="comment">// Enables eslint-plugin-prettier and eslint-config-prettier. This will display prettier errors as ESLint errors. Make sure this is always the last configuration in the extends array.</span></span><br></pre></td></tr></table></figure><blockquote><p>确保<code>plugin:prettier/recommended</code>放在extends数组的最后。</p></blockquote><p>使用eslint-plugin-prettier，把prettier作为eslint规则使用的好处是，代码可以使用ESLint的<code>--fix</code>选项自动修复。</p><h3 id="在VS-Code中自动修复代码"><a href="#在VS-Code中自动修复代码" class="headerlink" title="在VS Code中自动修复代码"></a>在VS Code中自动修复代码</h3><p>当一个文件被保存的时候，你的编辑器会自动运行ESLint的自动修复命令<code>eslint --fix</code>，是一个良好的开发体验。VS Code可以在<code>settings.json</code>文件配置保存自动修复的功能：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"editor.codeActionsOnSave"</span>: &#123;</span><br><span class="line">    <span class="attr">"source.fixAll.eslint"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="用命令行运行ESLint"><a href="#用命令行运行ESLint" class="headerlink" title="用命令行运行ESLint"></a>用命令行运行ESLint</h3><p>可以在<code>package.json</code>中添加运行ESLint的命令：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"lint"</span>: <span class="string">"eslint '*/**/*.&#123;js,ts,tsx&#125;' --quiet --fix"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以使用npm run lint或yarn lint从命令行运行以上脚本。此命令在所有的.js，.ts和.tsx（使用react）文件上运行ESLint检查。可以自动修复的都会直接自动修复，有些无法修复的，会在命令行中显示出来。</p><h3 id="阻止有ESLint错误的代码被提交"><a href="#阻止有ESLint错误的代码被提交" class="headerlink" title="阻止有ESLint错误的代码被提交"></a>阻止有ESLint错误的代码被提交</h3><p>为了确认所有提交到git上的代码都没有错误，可以使用lint-staged工具，配合husky食用，可以在git的commit之前检查代码的正确性，如果存在错误，则无法提交，在<code>package.json</code>配置如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"husky"</span>: &#123;</span><br><span class="line">      <span class="attr">"hooks"</span>: &#123;</span><br><span class="line">          <span class="attr">"pre-commit"</span>: <span class="string">"lint-staged"</span></span><br><span class="line">      &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"lint-staged"</span>: &#123;</span><br><span class="line">      <span class="attr">"*.&#123;js,ts,tsx&#125;"</span>: [</span><br><span class="line">          <span class="string">"eslint --fix"</span></span><br><span class="line">      ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>大概就是这样，写文档好累鸭，我还只是看着原文翻译过来而已了。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;翻译文章，&lt;a href=&quot;https://www.robertcooper.me/using-eslint-and-prettier-in-a-typescript-project&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;原文地址&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;TypeScript语法规则和代码风格的检查工具，主要有两种，TSLint和ESLint。TSLint只能用于TypeScript的检查，ESLint同时支持JavaScript和TypeScript。&lt;/p&gt;
&lt;p&gt;在&lt;a href=&quot;https://github.com/Microsoft/TypeScript/issues/29288#developer-productivity-tools-and-integration&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;TypeScript 2019线路&lt;/a&gt;中，TypeScript核心团队解释说ESLint具有比TSLint更高性能的体系结构，并且在为TypeScript提供编辑器整合时，他们只会专注于ESLint。因此，我建议使用ESLint来整理TypeScript项目。&lt;/p&gt;
&lt;h3 id=&quot;在TypeScript项目中设置ESLint&quot;&gt;&lt;a href=&quot;#在TypeScript项目中设置ESLint&quot; class=&quot;headerlink&quot; title=&quot;在TypeScript项目中设置ESLint&quot;&gt;&lt;/a&gt;在TypeScript项目中设置ESLint&lt;/h3&gt;&lt;p&gt;首先安装所有需要的依赖：&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;yarn&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;eslint&lt;/span&gt; @&lt;span class=&quot;keyword&quot;&gt;typescript&lt;/span&gt;-&lt;span class=&quot;keyword&quot;&gt;eslint&lt;/span&gt;/&lt;span class=&quot;keyword&quot;&gt;parser&lt;/span&gt; @typescript-eslint/eslint-plugin --dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;如果项目是使用create-react-app搭建，eslint已经通过react-scripts包含在依赖中，因此无需额外通过yarn去安装。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;eslint：ESLint的核心库&lt;/li&gt;
&lt;li&gt;@typescript-eslint/parser：允许ESLint转换TypeScript代码的解析器&lt;/li&gt;
&lt;li&gt;@typescript-eslint/eslint-plugin：包含一堆特定于TypeScript的ESLint规则的插件&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://www.rayliao.com/blog/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>react前端项目部署到iis</title>
    <link href="http://www.rayliao.com/blog/2020/05/c1176cea/"/>
    <id>http://www.rayliao.com/blog/2020/05/c1176cea/</id>
    <published>2020-05-04T02:52:34.000Z</published>
    <updated>2020-05-06T06:37:59.473Z</updated>
    
    <content type="html"><![CDATA[<p>这几天开发用于微信公众号的页面，被微信网页授权，搞得烦死了。授权好多步骤，又跟之前的小程序的<code>openid</code>有些冲突，换成<code>unionid</code>，但也遇到一系列的坑。项目是<code>create react app</code>搭建的，为了避免跨域问题，在<code>package.json</code>配置了代理。对iis不熟悉，网上搜刮了很多资料，捣腾了很久。</p><a id="more"></a><h4 id="BrowserRouter-or-HashRouter"><a href="#BrowserRouter-or-HashRouter" class="headerlink" title="BrowserRouter or HashRouter"></a>BrowserRouter or HashRouter</h4><p>直接使用<code>BrowserRouter</code>，iis不作配置的话，访问会报404错，路由问题，iis估计会把地址如<code>http://url/app</code>当作是<code>http://url/app.html</code>去访问，所以报404了。通过url rewrite应该就可以了，没去试过。直接使用HashRouter省事很多，不用配置，直接可以用。</p><h4 id="代理映射"><a href="#代理映射" class="headerlink" title="代理映射"></a>代理映射</h4><p>项目另外配置有接口地址，只需要在<code>package.json</code>配置<code>proxy: &quot;http://api.url.com/&quot;</code>，就可以了，本地运行没问题，但这个配置只是针对node服务器生效，在iis上要生效的话，得配置URL rewrite，然后这两天就卡在这里，我本身不熟悉这一块，我朋友配置服务器也不熟悉这块，网上资料也不多，所以折腾了很久。</p><p>具体就是，<code>build</code>的时候，代理接口的请求加上前缀<code>/api</code>，iis那边需要做URL的重写，把请求到<code>/api</code>的映射到接口地址去，如<code>http://api.url.com</code>，开始朋友根据网上的教程，配置成重定向了一直不行，后来配置成重写，又变成访问404。</p><p>后来才找到一个教程，是要安装ARR，配置反向代理：</p><p>具体需求：</p><p>假如我的项目地址是<code>web.url.com</code>，接口请求数据是<code>web.url.com/api/**/**</code>，例如获取用户数据<code>web.url.com/api/user/getdata</code>，实际请求接口就应该是<code>api.url.com/user/getdata</code>。</p><p>要实现上面的需求，需要iis在7及以上。</p><ol><li><p>安装ARR: <a href="http://www.iis.net/downloads/microsoft/application-request-routing" target="_blank" rel="noopener">下载地址</a></p></li><li><p>开启代理功能，进入操作版面的<code>Server Proxy Settings</code>选项，开启代理。</p></li><li><p>配置反向代理规则。进入部署的站点，进入URL重写功能。左侧操作菜单选择添加规则，新建一条入站规则，选择空白规则，目的是匹配请求的URL，当符合我们添加的规则时，则进行反向代理的操作，假定所有的接口请求都是这种<code>web.url.com/api/**/**</code>以api这个关键词开头，写一个正则表达式来匹配需要反向代理的url请求     </p></li><li><p>编辑入站规则：</p><ol><li>填写匹配URL选项相关信息，采用与模式匹配的正则表达式，表达式为：<code>^api/(.*)</code>，匹配所有前端站点的包含api的url请求</li><li>填写条件，条件是说匹配哪个域名，填写文章开头说的前端站点的域名<code>web.url.com</code>，条件输入：<code>{HTTP_HOST}</code>（请求的主机名），模式：<code>^web.url.com$</code>(如果有端口可以加上端口)</li><li>填写反向代理最终指向的地址，前面我们所做的匹配，就是为了这一步所做的准备，操作类型是重写，URL填写：<code>http://web.url.com/api/{R:1}</code>，注意前面匹配了URL中包含api关键词的URL，这里必须加上<code>/api/{R:1}</code>，<code>{R:1}</code>是说api后面的参数都带着</li></ol></li></ol><p>参考来源：</p><ul><li><a href="https://www.cnblogs.com/scudfly/p/11765282.html" target="_blank" rel="noopener">React的Api代理和IIS配置</a></li><li><a href="https://blog.csdn.net/u010696334/article/details/98944294" target="_blank" rel="noopener">IIS8反向代理，前后端分离部署解决方案</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这几天开发用于微信公众号的页面，被微信网页授权，搞得烦死了。授权好多步骤，又跟之前的小程序的&lt;code&gt;openid&lt;/code&gt;有些冲突，换成&lt;code&gt;unionid&lt;/code&gt;，但也遇到一系列的坑。项目是&lt;code&gt;create react app&lt;/code&gt;搭建的，为了避免跨域问题，在&lt;code&gt;package.json&lt;/code&gt;配置了代理。对iis不熟悉，网上搜刮了很多资料，捣腾了很久。&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://www.rayliao.com/blog/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>致儿子（二）</title>
    <link href="http://www.rayliao.com/blog/2020/05/57e4592/"/>
    <id>http://www.rayliao.com/blog/2020/05/57e4592/</id>
    <published>2020-05-04T02:15:39.000Z</published>
    <updated>2020-05-06T06:44:05.646Z</updated>
    
    <content type="html"><![CDATA[<p>你好啊，儿子。</p><p>这周事情还挺多。幸好遇五一长假，时间宽裕能很好地处理妥当。</p><p>估摸是疫情加之洛溪沙溪的社区医院尚未开放，好不容易才抢到的号。周一的时候，第一次带你外出去打预防针，南浦那边的路本身就窄，现在又在升级污水处理系统，去的时候交通不是很顺畅，但时间预留比较多，所以到达医院时间还算早。在一楼报道登记之时，有一位坐那的服务人员看了你妈的身份证说很近，原来她是潭江人。接着要上去四楼，疫情期间，只准一人进入，你妈本就手还痛着，又得抱着你，第一次来，也不熟悉，搞得你妈慌慌乱乱，大汗淋漓。不知道你是晕车呢，还是天气太热之故，吐了几次奶，但你一直都在闭着眼睛睡着，并没有哭闹，乖得很。</p><a id="more"></a><p>你妈周三去省妇幼产后检查，回的时候急着见你，开车有些大意，撞上了别人的车屁股，所幸只是小刮痕，恰逢是那块之前刮了几次的位置，刚好就报保险顺便修了。</p><p>周五我去海珠区送车子去定损回来，跟你妈一起去菜市场买菜，她先去借你邦叔叔的电单车，哪知道你妈应该是怀孕傻三年，车都还没开始开呢，在你邦叔叔驾驶教学途中，过于自信，直接电力把手一拧，车子就往前冲，你妈的脚跟就刮到了。</p><p>你妈昨晚又发烧了，估计是前两天晚上一觉到天亮，没起来挤奶，阻塞导致的，因为之前已经有过两次了，也并不慌，只是没想到这次也还挺严重，到39度了，只好喝小柴胡，喝蒲公英，吃退烧药，吃抗生素，今早还回去月子中心通乳，总算温度降了下来，现在不大碍。往后还得多加注意。</p><p>你呢，之前几天都不是很乖，白天睡得很舒服，准时十一点到十二点多，就开始哭闹，你应该是肠绞痛的，每次给你飞机抱你就不哭闹了，到了差不多时间估计你也累了，然后就一觉睡个四五个小时。也不知道是不是天气热的原因，还是你现在开始专属粘人了，现在我都哄不住你了，然而每次你姨婆抱你，你很快就不哭了。</p><p>我大概是有这方面的疑惑，以后你还记得的话，可以告诉我为何。</p><p>时间不早了，就此停笔。你刚喝完奶该睡了，我很困眼睛也不舒服也该去睡了。</p><blockquote><p>于洛涛南区10栋之二408，夜</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;你好啊，儿子。&lt;/p&gt;
&lt;p&gt;这周事情还挺多。幸好遇五一长假，时间宽裕能很好地处理妥当。&lt;/p&gt;
&lt;p&gt;估摸是疫情加之洛溪沙溪的社区医院尚未开放，好不容易才抢到的号。周一的时候，第一次带你外出去打预防针，南浦那边的路本身就窄，现在又在升级污水处理系统，去的时候交通不是很顺畅，但时间预留比较多，所以到达医院时间还算早。在一楼报道登记之时，有一位坐那的服务人员看了你妈的身份证说很近，原来她是潭江人。接着要上去四楼，疫情期间，只准一人进入，你妈本就手还痛着，又得抱着你，第一次来，也不熟悉，搞得你妈慌慌乱乱，大汗淋漓。不知道你是晕车呢，还是天气太热之故，吐了几次奶，但你一直都在闭着眼睛睡着，并没有哭闹，乖得很。&lt;/p&gt;
    
    </summary>
    
    
      <category term="日记" scheme="http://www.rayliao.com/blog/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>致父母</title>
    <link href="http://www.rayliao.com/blog/2020/04/c950c221/"/>
    <id>http://www.rayliao.com/blog/2020/04/c950c221/</id>
    <published>2020-04-12T15:07:06.000Z</published>
    <updated>2020-05-06T06:37:59.473Z</updated>
    
    <content type="html"><![CDATA[<p>我知道你们现在都在气头上，听不进我的话的，等你们平静下来再看吧。</p><p>我的表达方式并不好，很多话我说起来可能会前言不搭后语，碍于理解，所以我就通过文字的方式来表述，会相对清晰一些。</p><p>首先，我和我姐作为你们的子女，并不会偏帮你们谁，你们每一次争吵，我们苦口婆心的劝说，都是为了你们好，为了这个家好。双方我们都会劝说，这个需要你们都能听进去才行，可很多时候你们都认定自己心中的理，什么话也听不进去，稍有奉劝之词，就会觉得我们是站在你们的对立面。</p><a id="more"></a><p>人无完人，每个人都有缺点，杨沁有，我也有，因为后来我读书工作，一个人生活惯了，很多生活上的事情都比较邋遢，随性，懒惰。这个需要慢慢改过来。</p><p>我发现你们每次吵架的起因都是很小件的鸡毛蒜皮的事，然后各自就以不耐烦的语气跟对方说话，接着扯出过往的种种事情，得理不饶人，或一开始就不给对方台阶下，无理就发脾气，最后争锋相对。争吵吵架是件两个人的事，一个巴掌拍不响。很多时候各自退让一步，少说一句，就可以终止争吵。</p><p>所以每次我都想不明白，何必呢，都是一些小事，为什么一定要争个输赢。</p><p>私心的说，为了我自己，我也不想你们经常这样吵架，现在多了一个阿准要照顾，我发现已经越来越忙了，在广州生活压力也比较大，你们可以经常打电话来问候，聊聊家常，谈些开心的事的话很好。但时不时就会得知你们又因一些小事争吵起来，我也会很烦躁，因为得抓破脑袋想好要怎么跟你们各自沟通，话要怎么说，要如何做，才能顺到你们的意，才不至于变得更严重。</p><p>道理大家都是懂的，你们所经历的岁月比我多得多，为人处事很多大道理你也比我明白，如果上面我有什么说得不好或不对的，可以指正我。我写这些也并不是为了要教育或指责你们，完全谈不上，虽然我也三十多岁了，但很多人情世故，家里风俗很多东西还得你们教呢，我只是表达下我的想法，</p><p>这个本来是上次你们争吵想发的，但后来看你们又相安无事，就没发给你们了。这次估计又是小事情引起的，没必要去争论谁对谁错了，各自都收敛下，说话动手之前先想想。</p><p>爸你脾气收敛下，说话耐心一点。</p><p>妈你少说两句，不要一说话就毫不留情面。</p><p>各自都是，不要一开口说话就针锋相对，你们仔细想想！！！是不是每次都是因小事而起，都是因为自己或对方语气不好，引来对方语气更不好的还击，自己觉得生气，想要用更难听的话骂回去？！！哎，何必呢。</p><p>杨沁和小孩都很好，望家里亦安好。</p><p>你说，现在家里又不是缺吃少穿的，你们偶尔吵吵没什么问题，现在也不要求你们有说有笑的相处，各自都少说点，少动气就是了，都是些芝麻蒜皮的小事，不要把家里的事情闹大，弄得人尽皆知，何必呢。</p><p>别人家里都是多灾多难，现在疫情这样，湖北武汉没了多少家庭，又有多少家庭因为太穷，太多疾病，太多杀人放火的事而去争吵。</p><p>何必呢？要知足，处不来就各自忙各自的事，该种菜种菜该聊天聊天，喜欢做什么就做什么，互相之间有冲突的，不喜欢对方的做法的，不碍着你的话，就由着它，冒犯到你无法解决的，那就打电话给我跟我姐来评理裁定，没必要伤肝动气，得不偿失。</p><p>你们都多大年纪了，说句不好听的，已经是知天命的年龄，何必经常为了这些小小事情争吵，自己开开心心过活不好吗。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我知道你们现在都在气头上，听不进我的话的，等你们平静下来再看吧。&lt;/p&gt;
&lt;p&gt;我的表达方式并不好，很多话我说起来可能会前言不搭后语，碍于理解，所以我就通过文字的方式来表述，会相对清晰一些。&lt;/p&gt;
&lt;p&gt;首先，我和我姐作为你们的子女，并不会偏帮你们谁，你们每一次争吵，我们苦口婆心的劝说，都是为了你们好，为了这个家好。双方我们都会劝说，这个需要你们都能听进去才行，可很多时候你们都认定自己心中的理，什么话也听不进去，稍有奉劝之词，就会觉得我们是站在你们的对立面。&lt;/p&gt;
    
    </summary>
    
    
      <category term="日记" scheme="http://www.rayliao.com/blog/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>致儿子（一）</title>
    <link href="http://www.rayliao.com/blog/2020/04/3568a94a/"/>
    <id>http://www.rayliao.com/blog/2020/04/3568a94a/</id>
    <published>2020-04-05T14:26:05.000Z</published>
    <updated>2020-05-06T06:43:57.732Z</updated>
    
    <content type="html"><![CDATA[<p>你好啊，儿子。</p><p>你现在应该在婴儿室睡得挺好的，虽然刚才吃完帮你换完纸尿裤，给你做排气操的时候你吐了挺多奶的，我看你表情挺舒服的呢，怪我，太早给你做了，你都还没消化好。吐完奶你就打隔了，只得催你妈赶紧洗澡，让你喝几口奶才缓解打嗝。</p><p>你初为人子，我初为人父，大家都是花姑娘上轿——头一遭。关于怎么照顾你这件事，我一直在练习恶补知识中，虽然你的成长还很漫长，我相信我跟你妈会慢慢地把你照顾得越来越好。</p><p>说到你妈，你以后可得好好对你妈，生你可真不容易。怀你10个月，从开始吐到结束，好几次都吐出血，伤了喉咙，你小子也挺好动的，时不时的拳打脚踢，搞得你妈经常睡不好觉。你爸的厨房经验很少，所以怀你那么久，多数都还得你妈做饭煮菜，厉害吧。以后你就多跟你妈学学，学会了终身受用，不是有句话这样说嘛——「唯有爱与美食不可辜负」。</p><a id="more"></a><p>你已经有了名字了，你知道吗。叫「廖准」，上个礼拜我去省妇幼已经帮你办法出生证了。很早之前我跟你妈晚上吃完去江边散步的时候，就帮你取名字，那时候我一度决定是想取名为「廖让」，低调中带点特别，还带有一些法国风味，英文名都有了：<code>Jean Liao</code>，想想以后你同学呼喊你的时候，大声喊：「让」！是不是还带点日本漫画feel，你爸不喜欢随大众，也不喜欢传统的（毕竟传统的太容易撞名了），喜欢特别但又不能太过于特殊，太特殊明显的话，以后你上学了会怪我的。但后来才知道你爷爷的爷爷名字中有「让」字，只能作罢。后来跟你妈又陆续想了很多名字，太多我就略过了。接着你出生的前两个晚上，你妈洗完澡（应该是你妈洗澡的时候想到的，洗澡的时候灵感特别好）出来跟我打趣的说，要是你准时出来不让你爸为难（这事，等你大点我再跟你说），就叫你「廖准」，结果你还真听话，预产期那天就出来了。</p><p>你妈生你真是辛苦，虽然我无法感受到到底有多痛，但多少我能够想象到。早上吃早餐的时候羊水就破了，送你妈去医院的时候还一路磅礴大雨，你到晚上六点二十三分才出生，当天你妈都没怎么吃，还得忍受那么大的疼痛，出那么大的力气把你生出来。但我觉得你妈跟我一样，第一眼看到你的时候，会觉得一切都是值得的。</p><p>我们沉浸在幸福中没多久，还得面对更多的难题呢，你妈生你侧切了，有伤口。开始坐立难安，然后伤口还发肿发紫，疼得要命。住进月子中心之后，等伤口好了，又面对急性乳腺炎引起的发烧，好了之后昨天又复发。你小子吸奶劲挺大，咬得你妈疼得面目狰狞，你以后得好好补偿你妈，知道不。</p><p>被你折腾的日子还长着，很多事慢慢再跟你说，以后你大点了，我再教你怎么拍照，如何习得蝶泳，代码要怎么敲，如何追女孩（这不能让你妈知道），世界很大，慢慢探索。</p><p>好了，先这样。准哥你差不多应该要醒了，我得服侍你了，月子中心还是不错的吧？有那么多个小姐姐照顾你。</p><p>顺祝准哥，吃好睡好拉好，笑口常开。</p><blockquote><p>于沙溪熹月国际月子会所6027，夜</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;你好啊，儿子。&lt;/p&gt;
&lt;p&gt;你现在应该在婴儿室睡得挺好的，虽然刚才吃完帮你换完纸尿裤，给你做排气操的时候你吐了挺多奶的，我看你表情挺舒服的呢，怪我，太早给你做了，你都还没消化好。吐完奶你就打隔了，只得催你妈赶紧洗澡，让你喝几口奶才缓解打嗝。&lt;/p&gt;
&lt;p&gt;你初为人子，我初为人父，大家都是花姑娘上轿——头一遭。关于怎么照顾你这件事，我一直在练习恶补知识中，虽然你的成长还很漫长，我相信我跟你妈会慢慢地把你照顾得越来越好。&lt;/p&gt;
&lt;p&gt;说到你妈，你以后可得好好对你妈，生你可真不容易。怀你10个月，从开始吐到结束，好几次都吐出血，伤了喉咙，你小子也挺好动的，时不时的拳打脚踢，搞得你妈经常睡不好觉。你爸的厨房经验很少，所以怀你那么久，多数都还得你妈做饭煮菜，厉害吧。以后你就多跟你妈学学，学会了终身受用，不是有句话这样说嘛——「唯有爱与美食不可辜负」。&lt;/p&gt;
    
    </summary>
    
    
      <category term="日记" scheme="http://www.rayliao.com/blog/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>急性乳腺炎的解决方法</title>
    <link href="http://www.rayliao.com/blog/2020/04/62beaf6f/"/>
    <id>http://www.rayliao.com/blog/2020/04/62beaf6f/</id>
    <published>2020-04-04T18:05:55.000Z</published>
    <updated>2020-04-22T02:23:51.219Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>急性乳腺炎是乳腺的急性化脓性感染，是乳腺管内和周围结缔组织炎症，多发生于产后哺乳期的妇女，尤其是初产妇更为多见。有文献报道急性乳腺炎初产妇患病占50%，初产妇与经产妇之比为2.4：1。哺乳期的任何时间均可发生，但以产后3～4周最为常见，故又称产褥期乳腺炎。</p></blockquote><p>这里说的是产后哺乳，因涨奶，有硬块阻塞引起的急性乳腺炎，会发烧，全身无力酸痛。因为爱人现在坐月子，已经两次了，开始的时候非常担心，到处在网上查找资料，还计划着如何去医院，毕竟又是疫情期间，去药房买小柴胡还得拿身份证登记。各种方法都有尝试过，下面把有用的方法归纳总结一下。</p><a id="more"></a><h3 id="吮奶：宝宝-爸爸齐上阵"><a href="#吮奶：宝宝-爸爸齐上阵" class="headerlink" title="吮奶：宝宝/爸爸齐上阵"></a>吮奶：宝宝/爸爸齐上阵</h3><p>最有用的还是宝宝的吸吮，劲够大能把奶吸出来，爸爸的话就因人而异了，反正我尝试了，吸不出来。不知道要如何吸吮，虽然能吸出来一些，但总觉得怪怪的。</p><h3 id="按摩的方式"><a href="#按摩的方式" class="headerlink" title="按摩的方式"></a>按摩的方式</h3><p>按摩的方式和手法有很多种，网上随便搜都能搜到相关的视频教程或者手法图解。原理就是要疏通硬块阻塞的地方，把奶挤出来。</p><p>首先是要把乳房里边阻塞浓稠的奶水弄散，可以通过抖动，轻拍，轻抚按摩的方式，让阻塞的地方稍微放松下。接着要先疏通靠近出口，也就是乳头乳晕的地方，力度要由轻到重，慢慢来，然后才拨硬块处，往乳头方向拨，最后把奶挤出来。</p><h3 id="内外服"><a href="#内外服" class="headerlink" title="内外服"></a>内外服</h3><ul><li><p>外服可使用土豆冷敷法，原理不清楚，应该是酸碱性中和之类的，月子中心的人教的，把冷藏后的土豆切成薄片，敷在硬块胀痛处，不能敷盖乳头乳晕，差不多十来分钟，土豆片不冷就可以拿下来了。</p></li><li><p>内服可煲蒲公英水喝，蒲公英药店都有卖，很便宜，平时上火什么的，也可以煲来喝。</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;急性乳腺炎是乳腺的急性化脓性感染，是乳腺管内和周围结缔组织炎症，多发生于产后哺乳期的妇女，尤其是初产妇更为多见。有文献报道急性乳腺炎初产妇患病占50%，初产妇与经产妇之比为2.4：1。哺乳期的任何时间均可发生，但以产后3～4周最为常见，故又称产褥期乳腺炎。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这里说的是产后哺乳，因涨奶，有硬块阻塞引起的急性乳腺炎，会发烧，全身无力酸痛。因为爱人现在坐月子，已经两次了，开始的时候非常担心，到处在网上查找资料，还计划着如何去医院，毕竟又是疫情期间，去药房买小柴胡还得拿身份证登记。各种方法都有尝试过，下面把有用的方法归纳总结一下。&lt;/p&gt;
    
    </summary>
    
    
      <category term="知识" scheme="http://www.rayliao.com/blog/tags/%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>蒙迪欧使用一年多体验</title>
    <link href="http://www.rayliao.com/blog/2020/04/4641fb0c/"/>
    <id>http://www.rayliao.com/blog/2020/04/4641fb0c/</id>
    <published>2020-04-03T06:29:30.000Z</published>
    <updated>2020-04-22T02:23:51.219Z</updated>
    
    <content type="html"><![CDATA[<p>车子是去年十一月份买的了，当时买的时候也挺快的，虽然一开始在几款车中犹豫了挺久。开始完全没有想过要买福特，几个牌子都去看了下，马自达的阿特兹外形很好看但内部后排空间不足且老婆没那么喜欢，丰田的八代凯美瑞很喜欢，但要买到心仪的配置钱包很为难，广汽传祺的GS4终究低了一个档次，坐上去的体验很差，本田的十代雅阁各方面都挺满意的，本打算选择，那晚临时联系了高中同学勇廷，具体过程忘记了，好像有先去4S看了试下过，也了解了价格和配置，发现都挺好的，接着勇廷给我们介绍了在福特当销售经理的同校校友，如此在有熟人的情况下，最终就决定选择了蒙迪欧，但最终没有等国六，现在觉得稍有遗憾，不然就可以安心地继续摇号，不会像现在一样比较尴尬，觉得没必要去摇号了，毕竟摇到了也上不了车牌，但所幸广州的开四停四并没多大影响。</p><a id="more"></a><p>车子是<code>2018款 EcoBoost 180 智控豪华型</code>,现在开了一年多，整体可以打个90分吧。</p><p>先说说好的方面，美系车够重，开起来很稳，平时回家走广河飙到160都没什么感觉。内饰的质感都可以接受，虽然我体验过的车不多，但也稍微有横向比较了下同时期的雅阁，天籁还有奥迪A4，座椅的沙发的柔软度和那纹理都挺好的，不像雅阁或奥迪那种很平滑的感觉。因为是豪华型，配置都挺齐全的，比如自动远近灯，自动折叠后视镜，可以使用<code>Apple CarPlay</code>，也有比较低调的氛围灯，后尾箱够宽敞，外形耐看。</p><p>不好的方面，虽然不关车子的事，但遇到了比较坑的事，就是买车的4S店浩伟福特因土地回收问题停运了，但我并没有及时收到告知消息，后来去海珠区的4s店保养，浪费了一张赠送的保养券。</p><p>比较耗油，但这个没买车之前就已知的了，既然还是选择就该自己承受，后来发现其实也还好，一个月差不多也就加两次油，最多400块。没力，油门踩下去不够柔顺，换挡有些滞后，虽然熟悉了车子的脾性之后也能很好掌控，但跟别的车子对比起来，偶尔还是会不爽。显示屏是不是会出现黄色的扳手的提示图标，每次去4s让维修人员帮忙看下，但每次检查完他们说修复好了，没什么问题的，但依旧还会。</p><p>开了一年多，老天庇佑，没出过什么事故，都是一些小的磕磕碰碰，如人生般。</p><p>一次是回去梅州上牌的那次，在回老家的路上，原本开过了，但倒回去想走捷径的乡道，没留意到下坡的高度差，车子地盘直接卡在那，慌死！还好遇到路过好心的大爷，跟我爱人两人一起稍微抬起车头，往后退回来，车底的铁皮有些凹进去。</p><p>然后是在小叔小区那刮到一次，小区停车多，比较窄，上坡加转弯，没留意到就压到了车右侧的车门，凹度还挺深，心疼后悔了很久。</p><p>接着后面几次的时间忘记了，一次是回家高速服务器的加油站，太大意车头蹭到了柱子，老婆在白云的停车场停车的时候车头蹭到别人的车牌，最近一次就是，过年从老家出来，才出发没两公里，家里路太小，跟来车避让的时候，刮到了车头，这次也是刮得挺严重的，有凹进去。</p><p>和爱人一直安慰自己，车嘛，刮刮蹭蹭的难免的，有刮蹭车技才有进度，往后自己开车才会更加小心谨慎，本来就是嘛！</p><p>所以每次剐蹭都会安慰自己，刮都已经刮了，既成的事实，就不要去多想了，但如果内心偶尔想起，还是会懊恼不已。</p><p>如今也组建了家庭，多了个小家伙，我想这部车之后还会陪伴我的家庭一起走过许多个年头，会去很多地方，会经历很多事情，希望我们都好好的。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;车子是去年十一月份买的了，当时买的时候也挺快的，虽然一开始在几款车中犹豫了挺久。开始完全没有想过要买福特，几个牌子都去看了下，马自达的阿特兹外形很好看但内部后排空间不足且老婆没那么喜欢，丰田的八代凯美瑞很喜欢，但要买到心仪的配置钱包很为难，广汽传祺的GS4终究低了一个档次，坐上去的体验很差，本田的十代雅阁各方面都挺满意的，本打算选择，那晚临时联系了高中同学勇廷，具体过程忘记了，好像有先去4S看了试下过，也了解了价格和配置，发现都挺好的，接着勇廷给我们介绍了在福特当销售经理的同校校友，如此在有熟人的情况下，最终就决定选择了蒙迪欧，但最终没有等国六，现在觉得稍有遗憾，不然就可以安心地继续摇号，不会像现在一样比较尴尬，觉得没必要去摇号了，毕竟摇到了也上不了车牌，但所幸广州的开四停四并没多大影响。&lt;/p&gt;
    
    </summary>
    
    
      <category term="用户体验" scheme="http://www.rayliao.com/blog/tags/%E7%94%A8%E6%88%B7%E4%BD%93%E9%AA%8C/"/>
    
      <category term="汽车" scheme="http://www.rayliao.com/blog/tags/%E6%B1%BD%E8%BD%A6/"/>
    
  </entry>
  
  <entry>
    <title>香港爬山攻略</title>
    <link href="http://www.rayliao.com/blog/2020/03/41772/"/>
    <id>http://www.rayliao.com/blog/2020/03/41772/</id>
    <published>2020-03-09T02:17:13.000Z</published>
    <updated>2020-04-03T06:26:41.319Z</updated>
    
    <content type="html"><![CDATA[<p>似乎是老婆一个同事的老公总结的，一直很想去感受下香港爬山，但没机会，估摸着之后很长一段时间内都没什么机会了，留着以备不时之需。</p><p>每到三四天的假期就跑去香港，有山有海的轻松徒步线总结一下：</p><a id="more"></a><p>1、大屿山：中环码头出发，坐船到梅窝码头，徒步走到榆景湾码头，途中有银矿遗址和一个小瀑布景点，路程大概两小时多。榆景湾很多西餐厅，环境小资，走累了吃饭喝咖啡很好，榆景湾码头坐船回中环；</p><p>2、南丫岛线路：中环码头出发，坐船到索罟湾徒步到榕树湾，大概两小时，途中可以看海，风景好。到榕树湾有海滩可以玩水，沙滩人不多适合发呆，然后到码头附近有大排档式的餐厅吃海鲜，之后坐船回中环；</p><p>3、长洲岛线路：中环码头往返，岛上有集市可逛，也可以随便溜达溜达，有沙滩玩水，轻松打发半天时间，适合懒人带娃出行；</p><p>4、石澳郊野公园路线：从港岛区中环坐公交车到石澳郊野公园（自己开车的话45分钟），跟着指引爬龙脊，徒步大概两小时，山顶风景一流。之后下山到大浪湾沙滩，香港冲浪胜地，租个小板可以玩一整个下午，超级好玩！</p><p>5、麦理浩径第一段：湾仔坐地铁或公交到西贡郊野公园游客中心，徒步走到万宜水库西坝，六公里要一个半小时，或者走到东坝，九公里要两个多小时。吹风发呆拍照，然后原路返回或者电召的士返回；累，不适合我这种懒人，适合暴走爱好者；</p><p>6:塔门岛：湾仔坐地铁到西贡郊野公园游客中心，徒步一个半小时到黄石码头，中间会路过麦理浩径起点，拍照打卡就继续走吧，到黄石码头坐船到塔门岛，岛上有徒步线，山顶大片的草地，面对大海，超级无敌漂亮，完全原生态。可以露营，但是所有东西都要自备；</p><p>7、龙脊爬了三遍之后自创的新路：湾仔坐公交车到烂泥湾站下车，一个特别小的破站，别犹豫就是它。路边小停车场正对面有个烧烤场，烧烤场左手边有一条被人踩出来的泥巴石头路，只有二三十厘米宽，不要犹豫一直往山顶的方向爬，中间有的地方要手脚并用，植物打在胳膊上，有点新鲜刺激，大概三十分钟就到龙脊顶点了，妥妥节省一个小时！</p><p>8、赤柱路线：湾仔坐公交车到赤柱广场，路经特别出名的深水湾和浅水湾海滩和泳场，下车游泳也很爽。有毅力不下车的话就巴士坐到终点站，下车后赤柱市集逛吃逛吃，歪果仁特别多。吃饱了往赤柱军营走，半小时走到军营大门口，左手边有一条土路爬山，大概20分钟到海边的悬崖，风景超好。</p><p>9、西环码头，看日落，摄影发烧友以及网红打卡地，超多人拍照，逛中环把钱花光了的话，就来这里反思人生吧……</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;似乎是老婆一个同事的老公总结的，一直很想去感受下香港爬山，但没机会，估摸着之后很长一段时间内都没什么机会了，留着以备不时之需。&lt;/p&gt;
&lt;p&gt;每到三四天的假期就跑去香港，有山有海的轻松徒步线总结一下：&lt;/p&gt;
    
    </summary>
    
    
      <category term="旅行" scheme="http://www.rayliao.com/blog/tags/%E6%97%85%E8%A1%8C/"/>
    
      <category term="香港" scheme="http://www.rayliao.com/blog/tags/%E9%A6%99%E6%B8%AF/"/>
    
  </entry>
  
  <entry>
    <title>使用svg代替icon font</title>
    <link href="http://www.rayliao.com/blog/2019/09/664/"/>
    <id>http://www.rayliao.com/blog/2019/09/664/</id>
    <published>2019-09-25T02:25:46.000Z</published>
    <updated>2020-04-22T02:23:51.218Z</updated>
    
    <content type="html"><![CDATA[<p>工作中遇到的问题，项目中有使用字体图标，因为需求设计把logo形态的图标也加到了字体图标库中，但因为这些新加的图标并不是正方形的，而是长方形的，当使用的时候，就需要设置成很大的字号，才能显示正常，然<code>iconfont</code>上的字体图标制作标准是方形的，也就导致了字体的高度也会和宽度一样，这显然不利于页面布局。</p><p>用万能的搜索引擎寻找了下解决方案，发现可以用<code>svg</code>代替。</p><p>开始考虑想一个个<code>svg</code>图标导进去使用，但页面那里引入<code>svg</code>和使用布局混在一起，太乱了：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">class</span>=<span class="string">"icon1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">defs</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">defs</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"..."</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">class</span>=<span class="string">"icon2"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">defs</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">defs</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"..."</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><a id="more"></a><p>然后考虑<code>Symbols</code>的方式，把多个<code>svg</code>图标整合到一个<code>svg</code>中，生成类似下面这样的：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">symbol</span> <span class="attr">id</span>=<span class="string">"icon1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"..."</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">symbol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">symbol</span> <span class="attr">id</span>=<span class="string">"icon2"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"..."</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">symbol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后就可以根据<code>id</code>单独使用其中某个<code>icon</code>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">class</span>=<span class="string">"icon"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">use</span> <span class="attr">xlink:href</span>=<span class="string">"#icon1"</span>&gt;</span><span class="tag">&lt;/<span class="name">use</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="如何转换svg为symbols格式？"><a href="#如何转换svg为symbols格式？" class="headerlink" title="如何转换svg为symbols格式？"></a>如何转换svg为symbols格式？</h4><p>方式有挺多种，其他没了解，下面说下我使用的方式，用<code>gulp-svg-symbols</code></p><p>首先安装此插件:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev gulp-svg-symbols</span><br><span class="line"><span class="comment">// or use yarn</span></span><br><span class="line">yarn add -D gulp-svg-symbols</span><br></pre></td></tr></table></figure><p>配置<code>gulpfile.js</code>：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// svg转换</span></span><br><span class="line">...</span><br><span class="line">gulp.task(<span class="string">'svg'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> svgSymbols = <span class="built_in">require</span>(<span class="string">'gulp-svg-symbols'</span>)</span><br><span class="line">  <span class="keyword">const</span> path = <span class="string">'app/common/svg'</span></span><br><span class="line">  <span class="keyword">return</span> gulp</span><br><span class="line">    .src(<span class="string">`<span class="subst">$&#123;path&#125;</span>/source/*.svg`</span>)</span><br><span class="line">    .pipe(svgSymbols())</span><br><span class="line">    .pipe(rename(<span class="function"><span class="params">path</span> =&gt;</span> (path.basename = <span class="string">'partner'</span>)))</span><br><span class="line">    .pipe(gulp.dest(path))</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>插件其他参数选项请参考<a href="https://github.com/Hiswe/gulp-svg-symbols" target="_blank" rel="noopener">文档</a></p><p>参考：</p><ul><li><a href="https://io-meter.com/2014/07/20/replace-icon-fonts-with-svg/" target="_blank" rel="noopener">Web 设计新趋势: 使用 SVG 代替 Web Icon Font</a></li><li><a href="https://css-tricks.com/icon-fonts-vs-svg/" target="_blank" rel="noopener">Inline SVG vs Icon Fonts [CAGEMATCH]</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;工作中遇到的问题，项目中有使用字体图标，因为需求设计把logo形态的图标也加到了字体图标库中，但因为这些新加的图标并不是正方形的，而是长方形的，当使用的时候，就需要设置成很大的字号，才能显示正常，然&lt;code&gt;iconfont&lt;/code&gt;上的字体图标制作标准是方形的，也就导致了字体的高度也会和宽度一样，这显然不利于页面布局。&lt;/p&gt;
&lt;p&gt;用万能的搜索引擎寻找了下解决方案，发现可以用&lt;code&gt;svg&lt;/code&gt;代替。&lt;/p&gt;
&lt;p&gt;开始考虑想一个个&lt;code&gt;svg&lt;/code&gt;图标导进去使用，但页面那里引入&lt;code&gt;svg&lt;/code&gt;和使用布局混在一起，太乱了：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;svg&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;icon1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;defs&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;defs&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;d&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;...&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;path&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;svg&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;svg&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;icon2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;defs&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;defs&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;d&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;...&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;path&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;svg&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://www.rayliao.com/blog/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="前端优化" scheme="http://www.rayliao.com/blog/tags/%E5%89%8D%E7%AB%AF%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>少儿编程相关资料</title>
    <link href="http://www.rayliao.com/blog/2019/09/30386/"/>
    <id>http://www.rayliao.com/blog/2019/09/30386/</id>
    <published>2019-09-05T15:34:50.000Z</published>
    <updated>2020-04-22T02:23:51.218Z</updated>
    
    <content type="html"><![CDATA[<p>因为姐问我，小孩子是否真的能学编程，她是看了某篇文章（其实是广告）之后由此疑问，借此我也想大概了解下儿童编程的详细情况，或许将来自己也用得着，发挥自己搜集整理的功力。</p><p>少儿编程目前来说就<code>Scratch</code>做得最好最完善，一枝独秀，<code>Scratch</code>源码开放给非商业性质用途使用，但国内很多网站平台教程都是以<code>Scratch</code>作为基础进行配置，设置收费课程等，说得难听点就是敛财。</p><p>所以小孩子想要入门编程的话，<code>Scratch</code>是不二之选，具体家长要怎么做呢？</p><a id="more"></a><ol><li>首先初步了解下<code>Scratch</code>是什么，有什么用</li><li>通过书籍或者网络视频介绍进一步了解，也可以打开<code>Scratch</code>大概操作一番</li><li>准备必备的工具，iPad或者电脑</li><li>给孩子安排好学习编程的时间计划</li><li>Just do it!</li></ol><p>下面是关于<code>Scratch</code>的一些具体资料。</p><h4 id="Scratch少儿编程"><a href="#Scratch少儿编程" class="headerlink" title="Scratch少儿编程"></a>Scratch少儿编程</h4><p>Scratch是麻省理工学院的“终身幼儿园团队”开发的图形化编程工具，主要面对青少年开放。</p><p>目前已有1.4版、2.0版本（增加克隆积木，Lego和Makey makey拓展积木）、3.0版本（增加视频侦测、文字朗读、翻译等选择性下载扩展积木，并增加micro：bit和Lego mindstorms EV3拓展积木）所有人可以在任意版本中创作自己的程序。</p><p><em>可以上国内各大视频网站（优酷，爱奇艺，腾讯，哔哩哔哩）搜索Scratch相关介绍和教程，就会有一个初步的了解。</em></p><p><strong>书籍参考</strong></p><ul><li><a href="http://product.dangdang.com/25140799.html" target="_blank" rel="noopener">DK编程真好玩：6岁开始学Scratch</a></li><li><a href="https://book.douban.com/subject/27116976/" target="_blank" rel="noopener">编程真好玩</a></li><li><a href="https://book.douban.com/subject/26658602/" target="_blank" rel="noopener">动手玩转Scratch2.0编程</a></li><li><a href="http://product.dangdang.com/27896664.html" target="_blank" rel="noopener">边学边玩Scratch3.0少儿编程</a></li><li><a href="https://book.douban.com/subject/30647308/" target="_blank" rel="noopener">Scratch真好玩 教小孩学编程</a></li></ul><p><em>其他书籍可自行根据<code>Scratch</code>关键字搜索</em></p><p><strong>软件下载</strong></p><ul><li>浏览器打开：<a href="https://scratch.mit.edu/" target="_blank" rel="noopener">网页版</a></li><li>官网下载：<a href="https://scratch.mit.edu/download" target="_blank" rel="noopener">Scratch桌面软件</a></li><li>各版本网盘下载<a href="https://pan.baidu.com/share/init?surl=-6ZwZbXnQ_WaNS_8zpl9aw" target="_blank" rel="noopener">地址</a>：<code>tyv2</code></li></ul><p><strong>幼儿版Scratch</strong></p><p><a href="https://www.scratchjr.org/" target="_blank" rel="noopener">ScratchJr</a>完全免费的为幼童而设计的应用程序</p><p><a href="https://www.jianshu.com/p/1dfe9d678ef9" target="_blank" rel="noopener">安装教程</a>参考</p><p><a href="http://product.dangdang.com/24101727.html" target="_blank" rel="noopener">动手玩转ScratchJr编程</a></p><p><em>ScratchJr目前只支持iPad，不支持iPhone</em></p><p><strong>硬件要求</strong></p><p>iPad | 台式电脑 | 笔记本电脑 &amp; 家长</p><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><ul><li><a href="https://code.org/" target="_blank" rel="noopener">Code.org</a> - 网页版，有很全面的课程分类和项目</li><li><a href="https://www.apple.com/swift/playgrounds/" target="_blank" rel="noopener">playgrounds</a> - 苹果出的iPad应用程序Playgrounds</li><li><a href="http://edu.shaoerbc.org/" target="_blank" rel="noopener">少儿编程学院</a></li><li><a href="https://pmo365.cn/" target="_blank" rel="noopener">坚果学院少儿课程</a> - 课程非免费</li><li><a href="https://snap.berkeley.edu/" target="_blank" rel="noopener">snap!</a></li></ul><p><strong>线下活动</strong></p><ul><li><a href="https://www.apple.com/cn/today/" target="_blank" rel="noopener">Today at Apple</a> - 苹果店线下活动，方便的话参加下感兴趣的活动课程挺好的。</li></ul><p><strong>进阶</strong></p><ul><li><a href="https://www.tynker.com" target="_blank" rel="noopener">tynker</a></li><li><a href="https://developers.google.com/blockly/" target="_blank" rel="noopener">blockly</a></li></ul><p>参考来源：</p><ul><li><a href="https://zhuanlan.zhihu.com/p/81232709" target="_blank" rel="noopener">如何自学少儿编程？孩子如何自学，家长如何辅导，老师如何授课呢？</a></li><li><a href="https://zhuanlan.zhihu.com/p/73171468" target="_blank" rel="noopener">Scratch少儿编程是什么？</a></li><li><a href="http://www.sohu.com/a/53833199_114528" target="_blank" rel="noopener">8款让孩子快速享受编程乐趣的儿童教育app </a></li><li><a href="https://baike.baidu.com/item/Scratch/15493636?fr=aladdin" target="_blank" rel="noopener">百度百科Scratch</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;因为姐问我，小孩子是否真的能学编程，她是看了某篇文章（其实是广告）之后由此疑问，借此我也想大概了解下儿童编程的详细情况，或许将来自己也用得着，发挥自己搜集整理的功力。&lt;/p&gt;
&lt;p&gt;少儿编程目前来说就&lt;code&gt;Scratch&lt;/code&gt;做得最好最完善，一枝独秀，&lt;code&gt;Scratch&lt;/code&gt;源码开放给非商业性质用途使用，但国内很多网站平台教程都是以&lt;code&gt;Scratch&lt;/code&gt;作为基础进行配置，设置收费课程等，说得难听点就是敛财。&lt;/p&gt;
&lt;p&gt;所以小孩子想要入门编程的话，&lt;code&gt;Scratch&lt;/code&gt;是不二之选，具体家长要怎么做呢？&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://www.rayliao.com/blog/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>关于hexo</title>
    <link href="http://www.rayliao.com/blog/2019/08/27066/"/>
    <id>http://www.rayliao.com/blog/2019/08/27066/</id>
    <published>2019-08-24T04:59:33.000Z</published>
    <updated>2020-04-22T02:23:51.218Z</updated>
    
    <content type="html"><![CDATA[<p>最近神差鬼使的想着完善的<code>blog</code>的功能，想尝试加下标签的列表页，还有<code>dark mode</code>，也顺便把多语言加上。</p><p>然后在加标签的列表页的时候，弄得很烦躁，<code>jade</code>的语法不记得了，不知道是不是<code>hexo</code>自带的缓存，你怎么改都没用，本地运行的服务就是不生效，烦得很，就不想弄了。有空慢慢的把<code>jade</code>的模板改成<code>ejs</code>，方便些用，毕竟<code>hexo</code>官网上面的例子那些都是使用这个模板的，方便对照。</p><a id="more"></a><p>写这篇主要是想记录下，然后因为刚才看到之前写的一篇文章的图片没了，都忘记是放在哪的了，就想着用<code>post_asset_folder</code>试下，在config那里把这个设置为<code>true</code>，创建文章的时候就会自动创建一个同名的文件夹，然后在文章中加上就可以了：</p><img src="/blog/2019/08/27066/logo.svg" title="This is an example image"><h4 id="ejs模板比较好用"><a href="#ejs模板比较好用" class="headerlink" title="ejs模板比较好用"></a>ejs模板比较好用</h4><p>这两天在把博客在用的主题从<code>jade</code>改成<code>ejs</code>，发现<code>ejs</code>确实比较好用，至少你不知道如何写的时候能参考文档或对照他人写的。</p><p>个人觉得，html模板还是以html的语法为主，加上绑定判断这些语法糖即可，如果像<code>jade</code>（现在叫<code>pug</code>）把html的语法整个改了，虽说语法简洁也易懂，但就多了一层学习成本，使用模板很重要的一点就是用起来容易，不用花费太多时间。</p><p>–</p><p>有人说hexo的文档写得不好，可我觉得还行吧，基本上想要实现的，官方文档都能找到相对应的。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近神差鬼使的想着完善的&lt;code&gt;blog&lt;/code&gt;的功能，想尝试加下标签的列表页，还有&lt;code&gt;dark mode&lt;/code&gt;，也顺便把多语言加上。&lt;/p&gt;
&lt;p&gt;然后在加标签的列表页的时候，弄得很烦躁，&lt;code&gt;jade&lt;/code&gt;的语法不记得了，不知道是不是&lt;code&gt;hexo&lt;/code&gt;自带的缓存，你怎么改都没用，本地运行的服务就是不生效，烦得很，就不想弄了。有空慢慢的把&lt;code&gt;jade&lt;/code&gt;的模板改成&lt;code&gt;ejs&lt;/code&gt;，方便些用，毕竟&lt;code&gt;hexo&lt;/code&gt;官网上面的例子那些都是使用这个模板的，方便对照。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="http://www.rayliao.com/blog/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>用什么标题好呢</title>
    <link href="http://www.rayliao.com/blog/2019/06/50633/"/>
    <id>http://www.rayliao.com/blog/2019/06/50633/</id>
    <published>2019-06-01T16:43:14.000Z</published>
    <updated>2020-04-22T02:23:51.218Z</updated>
    
    <content type="html"><![CDATA[<p>这是有两年没有动过blog了啊。</p><p>虽然自己好像热衷于学习，但是不好的是，对某件事开始热情满满，但没多久就会因这因那的原因冷却了。最近是有重新开始写周记了，希望能一直坚持下去。</p><p>blog往后估计是会比较少更新的了。</p><p>原因有三，其一是年纪，不可避免的年纪越来越大，事情也就越来越多，很多事情没办法兼顾到了；其二是文笔，写blog还是需要有点好笔头的，不然写得空泛有何用；其三是内容，自己还是一直在学习的过程中，并不是一个很好的内容生产者。</p><a id="more"></a><p>希望通过坚持写周记，能稍微练好自己写文章的能力，不管多忙，还是要抽时间学习，然后把自己所学整理归纳成文章知识。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是有两年没有动过blog了啊。&lt;/p&gt;
&lt;p&gt;虽然自己好像热衷于学习，但是不好的是，对某件事开始热情满满，但没多久就会因这因那的原因冷却了。最近是有重新开始写周记了，希望能一直坚持下去。&lt;/p&gt;
&lt;p&gt;blog往后估计是会比较少更新的了。&lt;/p&gt;
&lt;p&gt;原因有三，其一是年纪，不可避免的年纪越来越大，事情也就越来越多，很多事情没办法兼顾到了；其二是文笔，写blog还是需要有点好笔头的，不然写得空泛有何用；其三是内容，自己还是一直在学习的过程中，并不是一个很好的内容生产者。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Ray" scheme="http://www.rayliao.com/blog/tags/Ray/"/>
    
  </entry>
  
  <entry>
    <title>hashtag</title>
    <link href="http://www.rayliao.com/blog/2017/03/31952/"/>
    <id>http://www.rayliao.com/blog/2017/03/31952/</id>
    <published>2017-03-08T01:57:53.000Z</published>
    <updated>2020-04-22T02:23:51.217Z</updated>
    
    <content type="html"><![CDATA[<p><code>#过了追港剧的年岁</code></p><p><code>#会拍一点照片</code>、<code>#会看许多电影</code>、<code>#会喜欢看些剧</code>、<code>#会阅读一些书</code></p><p><code>#绘画学习家</code></p><p><code>#设计热衷家</code></p><p><code>#前端渣滓</code></p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;#过了追港剧的年岁&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#会拍一点照片&lt;/code&gt;、&lt;code&gt;#会看许多电影&lt;/code&gt;、&lt;code&gt;#会喜欢看些剧&lt;/code&gt;、&lt;code&gt;#会阅读一些书&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#绘画学习家&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#设计热衷家&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#前端渣滓&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Ray" scheme="http://www.rayliao.com/blog/tags/Ray/"/>
    
  </entry>
  
</feed>
