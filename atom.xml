<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>RayLiao</title>
  
  
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="http://www.rayliao.com/blog/"/>
  <updated>2019-09-25T02:57:36.249Z</updated>
  <id>http://www.rayliao.com/blog/</id>
  
  <author>
    <name>Ray Liao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用svg代替icon font</title>
    <link href="http://www.rayliao.com/blog/2019/09/25/%E4%BD%BF%E7%94%A8svg%E4%BB%A3%E6%9B%BFicon-font/"/>
    <id>http://www.rayliao.com/blog/2019/09/25/使用svg代替icon-font/</id>
    <published>2019-09-25T02:25:46.000Z</published>
    <updated>2019-09-25T02:57:36.249Z</updated>
    
    <content type="html"><![CDATA[<p>工作中遇到的问题，项目中有使用字体图标，因为需求设计把logo形态的图标也加到了字体图标库中，但因为这些新加的图标并不是正方形的，而是长方形的，当使用的时候，就需要设置成很大的字号，才能显示正常，然<code>iconfont</code>上的字体图标制作标准是方形的，也就导致了字体的高度也会和宽度一样，这显然不利于页面布局。</p><p>用万能的搜索引擎寻找了下解决方案，发现可以用<code>svg</code>代替。</p><p>开始考虑想一个个<code>svg</code>图标导进去使用，但页面那里引入<code>svg</code>和使用布局混在一起，太乱了：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">class</span>=<span class="string">"icon1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">defs</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">defs</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"..."</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">class</span>=<span class="string">"icon2"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">defs</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">defs</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"..."</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><a id="more"></a><p>然后考虑<code>Symbols</code>的方式，把多个<code>svg</code>图标整合到一个<code>svg</code>中，生成类似下面这样的：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">symbol</span> <span class="attr">id</span>=<span class="string">"icon1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"..."</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">symbol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">symbol</span> <span class="attr">id</span>=<span class="string">"icon2"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"..."</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">symbol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后就可以根据<code>id</code>单独使用其中某个<code>icon</code>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">class</span>=<span class="string">"icon"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">use</span> <span class="attr">xlink:href</span>=<span class="string">"#icon1"</span>&gt;</span><span class="tag">&lt;/<span class="name">use</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="如何转换svg为symbols格式？"><a href="#如何转换svg为symbols格式？" class="headerlink" title="如何转换svg为symbols格式？"></a>如何转换svg为symbols格式？</h4><p>方式有挺多种，其他没了解，下面说下我使用的方式，用<code>gulp-svg-symbols</code></p><p>首先安装此插件:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev gulp-svg-symbols</span><br><span class="line"><span class="comment">// or use yarn</span></span><br><span class="line">yarn add -D gulp-svg-symbols</span><br></pre></td></tr></table></figure><p>配置<code>gulpfile.js</code>：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// svg转换</span></span><br><span class="line">...</span><br><span class="line">gulp.task(<span class="string">'svg'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> svgSymbols = <span class="built_in">require</span>(<span class="string">'gulp-svg-symbols'</span>)</span><br><span class="line">  <span class="keyword">const</span> path = <span class="string">'app/common/svg'</span></span><br><span class="line">  <span class="keyword">return</span> gulp</span><br><span class="line">    .src(<span class="string">`<span class="subst">$&#123;path&#125;</span>/source/*.svg`</span>)</span><br><span class="line">    .pipe(svgSymbols())</span><br><span class="line">    .pipe(rename(<span class="function"><span class="params">path</span> =&gt;</span> (path.basename = <span class="string">'partner'</span>)))</span><br><span class="line">    .pipe(gulp.dest(path))</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>插件其他参数选项请参考<a href="https://github.com/Hiswe/gulp-svg-symbols" target="_blank" rel="noopener">文档</a></p><p>参考：</p><ul><li><a href="https://io-meter.com/2014/07/20/replace-icon-fonts-with-svg/" target="_blank" rel="noopener">Web 设计新趋势: 使用 SVG 代替 Web Icon Font</a></li><li><a href="https://css-tricks.com/icon-fonts-vs-svg/" target="_blank" rel="noopener">Inline SVG vs Icon Fonts [CAGEMATCH]</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;工作中遇到的问题，项目中有使用字体图标，因为需求设计把logo形态的图标也加到了字体图标库中，但因为这些新加的图标并不是正方形的，而是长方形的，当使用的时候，就需要设置成很大的字号，才能显示正常，然&lt;code&gt;iconfont&lt;/code&gt;上的字体图标制作标准是方形的，也就导致了字体的高度也会和宽度一样，这显然不利于页面布局。&lt;/p&gt;
&lt;p&gt;用万能的搜索引擎寻找了下解决方案，发现可以用&lt;code&gt;svg&lt;/code&gt;代替。&lt;/p&gt;
&lt;p&gt;开始考虑想一个个&lt;code&gt;svg&lt;/code&gt;图标导进去使用，但页面那里引入&lt;code&gt;svg&lt;/code&gt;和使用布局混在一起，太乱了：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;svg&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;icon1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;defs&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;defs&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;d&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;...&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;path&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;svg&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;svg&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;icon2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;defs&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;defs&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;d&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;...&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;path&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;svg&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Tech" scheme="http://www.rayliao.com/blog/tags/Tech/"/>
    
      <category term="前端优化" scheme="http://www.rayliao.com/blog/tags/%E5%89%8D%E7%AB%AF%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>少儿编程相关资料</title>
    <link href="http://www.rayliao.com/blog/2019/09/05/%E5%B0%91%E5%84%BF%E7%BC%96%E7%A8%8B%E7%9B%B8%E5%85%B3%E8%B5%84%E6%96%99/"/>
    <id>http://www.rayliao.com/blog/2019/09/05/少儿编程相关资料/</id>
    <published>2019-09-05T15:34:50.000Z</published>
    <updated>2019-09-10T09:36:27.182Z</updated>
    
    <content type="html"><![CDATA[<p>因为姐问我，小孩子是否真的能学编程，她是看了某篇文章（其实是广告）之后由此疑问，借此我也想大概了解下儿童编程的详细情况，或许将来自己也用得着，发挥自己搜集整理的功力。</p><p>少儿编程目前来说就<code>Scratch</code>做得最好最完善，一枝独秀，<code>Scratch</code>源码开放给非商业性质用途使用，但国内很多网站平台教程都是以<code>Scratch</code>作为基础进行配置，设置收费课程等，说得难听点就是敛财。</p><p>所以小孩子想要入门编程的话，<code>Scratch</code>是不二之选，具体家长要怎么做呢？</p><a id="more"></a><ol><li>首先初步了解下<code>Scratch</code>是什么，有什么用</li><li>通过书籍或者网络视频介绍进一步了解，也可以打开<code>Scratch</code>大概操作一番</li><li>准备必备的工具，iPad或者电脑</li><li>给孩子安排好学习编程的时间计划</li><li>Just do it!</li></ol><p>下面是关于<code>Scratch</code>的一些具体资料。</p><h4 id="Scratch少儿编程"><a href="#Scratch少儿编程" class="headerlink" title="Scratch少儿编程"></a>Scratch少儿编程</h4><p>Scratch是麻省理工学院的“终身幼儿园团队”开发的图形化编程工具，主要面对青少年开放。</p><p>目前已有1.4版、2.0版本（增加克隆积木，Lego和Makey makey拓展积木）、3.0版本（增加视频侦测、文字朗读、翻译等选择性下载扩展积木，并增加micro：bit和Lego mindstorms EV3拓展积木）所有人可以在任意版本中创作自己的程序。</p><p><em>可以上国内各大视频网站（优酷，爱奇艺，腾讯，哔哩哔哩）搜索Scratch相关介绍和教程，就会有一个初步的了解。</em></p><p><strong>书籍参考</strong></p><ul><li><a href="http://product.dangdang.com/25140799.html" target="_blank" rel="noopener">DK编程真好玩：6岁开始学Scratch</a></li><li><a href="https://book.douban.com/subject/27116976/" target="_blank" rel="noopener">编程真好玩</a></li><li><a href="https://book.douban.com/subject/26658602/" target="_blank" rel="noopener">动手玩转Scratch2.0编程</a></li><li><a href="http://product.dangdang.com/27896664.html" target="_blank" rel="noopener">边学边玩Scratch3.0少儿编程</a></li><li><a href="https://book.douban.com/subject/30647308/" target="_blank" rel="noopener">Scratch真好玩 教小孩学编程</a></li></ul><p><em>其他书籍可自行根据<code>Scratch</code>关键字搜索</em></p><p><strong>软件下载</strong></p><ul><li>浏览器打开：<a href="https://scratch.mit.edu/" target="_blank" rel="noopener">网页版</a></li><li>官网下载：<a href="https://scratch.mit.edu/download" target="_blank" rel="noopener">Scratch桌面软件</a></li><li>各版本网盘下载<a href="https://pan.baidu.com/share/init?surl=-6ZwZbXnQ_WaNS_8zpl9aw" target="_blank" rel="noopener">地址</a>：<code>tyv2</code></li></ul><p><strong>幼儿版Scratch</strong></p><p><a href="https://www.scratchjr.org/" target="_blank" rel="noopener">ScratchJr</a>完全免费的为幼童而设计的应用程序</p><p><a href="https://www.jianshu.com/p/1dfe9d678ef9" target="_blank" rel="noopener">安装教程</a>参考</p><p><a href="http://product.dangdang.com/24101727.html" target="_blank" rel="noopener">动手玩转ScratchJr编程</a></p><p><em>ScratchJr目前只支持iPad，不支持iPhone</em></p><p><strong>硬件要求</strong></p><p>iPad | 台式电脑 | 笔记本电脑 &amp; 家长</p><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><ul><li><a href="https://code.org/" target="_blank" rel="noopener">Code.org</a> - 网页版，有很全面的课程分类和项目</li><li><a href="https://www.apple.com/swift/playgrounds/" target="_blank" rel="noopener">playgrounds</a> - 苹果出的iPad应用程序Playgrounds</li><li><a href="http://edu.shaoerbc.org/" target="_blank" rel="noopener">少儿编程学院</a></li><li><a href="https://pmo365.cn/" target="_blank" rel="noopener">坚果学院少儿课程</a> - 课程非免费</li><li><a href="https://snap.berkeley.edu/" target="_blank" rel="noopener">snap!</a></li></ul><p><strong>线下活动</strong></p><ul><li><a href="https://www.apple.com/cn/today/" target="_blank" rel="noopener">Today at Apple</a> - 苹果店线下活动，方便的话参加下感兴趣的活动课程挺好的。</li></ul><p><strong>进阶</strong></p><ul><li><a href="https://www.tynker.com" target="_blank" rel="noopener">tynker</a></li><li><a href="https://developers.google.com/blockly/" target="_blank" rel="noopener">blockly</a></li></ul><p>参考来源：</p><ul><li><a href="https://zhuanlan.zhihu.com/p/81232709" target="_blank" rel="noopener">如何自学少儿编程？孩子如何自学，家长如何辅导，老师如何授课呢？</a></li><li><a href="https://zhuanlan.zhihu.com/p/73171468" target="_blank" rel="noopener">Scratch少儿编程是什么？</a></li><li><a href="http://www.sohu.com/a/53833199_114528" target="_blank" rel="noopener">8款让孩子快速享受编程乐趣的儿童教育app </a></li><li><a href="https://baike.baidu.com/item/Scratch/15493636?fr=aladdin" target="_blank" rel="noopener">百度百科Scratch</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;因为姐问我，小孩子是否真的能学编程，她是看了某篇文章（其实是广告）之后由此疑问，借此我也想大概了解下儿童编程的详细情况，或许将来自己也用得着，发挥自己搜集整理的功力。&lt;/p&gt;
&lt;p&gt;少儿编程目前来说就&lt;code&gt;Scratch&lt;/code&gt;做得最好最完善，一枝独秀，&lt;code&gt;Scratch&lt;/code&gt;源码开放给非商业性质用途使用，但国内很多网站平台教程都是以&lt;code&gt;Scratch&lt;/code&gt;作为基础进行配置，设置收费课程等，说得难听点就是敛财。&lt;/p&gt;
&lt;p&gt;所以小孩子想要入门编程的话，&lt;code&gt;Scratch&lt;/code&gt;是不二之选，具体家长要怎么做呢？&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tech" scheme="http://www.rayliao.com/blog/tags/Tech/"/>
    
  </entry>
  
  <entry>
    <title>关于hexo</title>
    <link href="http://www.rayliao.com/blog/2019/08/24/%E5%85%B3%E4%BA%8Ehexo/"/>
    <id>http://www.rayliao.com/blog/2019/08/24/关于hexo/</id>
    <published>2019-08-24T04:59:33.000Z</published>
    <updated>2019-09-06T03:23:19.582Z</updated>
    
    <content type="html"><![CDATA[<p>最近神差鬼使的想着完善的<code>blog</code>的功能，想尝试加下标签的列表页，还有<code>dark mode</code>，也顺便把多语言加上。</p><p>然后在加标签的列表页的时候，弄得很烦躁，<code>jade</code>的语法不记得了，不知道是不是<code>hexo</code>自带的缓存，你怎么改都没用，本地运行的服务就是不生效，烦得很，就不想弄了。有空慢慢的把<code>jade</code>的模板改成<code>ejs</code>，方便些用，毕竟<code>hexo</code>官网上面的例子那些都是使用这个模板的，方便对照。</p><a id="more"></a><p>写这篇主要是想记录下，然后因为刚才看到之前写的一篇文章的图片没了，都忘记是放在哪的了，就想着用<code>post_asset_folder</code>试下，在config那里把这个设置为<code>true</code>，创建文章的时候就会自动创建一个同名的文件夹，然后在文章中加上就可以了：</p><img src="/blog/2019/08/24/关于hexo/logo.svg" title="This is an example image"><h4 id="ejs模板比较好用"><a href="#ejs模板比较好用" class="headerlink" title="ejs模板比较好用"></a>ejs模板比较好用</h4><p>这两天在把博客在用的主题从<code>jade</code>改成<code>ejs</code>，发现<code>ejs</code>确实比较好用，至少你不知道如何写的时候能参考文档或对照他人写的。</p><p>个人觉得，html模板还是以html的语法为主，加上绑定判断这些语法糖即可，如果像<code>jade</code>（现在叫<code>pug</code>）把html的语法整个改了，虽说语法简洁也易懂，但就多了一层学习成本，使用模板很重要的一点就是用起来容易，不用花费太多时间。</p><p>–</p><p>有人说hexo的文档写得不好，可我觉得还行吧，基本上想要实现的，官方文档都能找到相对应的。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近神差鬼使的想着完善的&lt;code&gt;blog&lt;/code&gt;的功能，想尝试加下标签的列表页，还有&lt;code&gt;dark mode&lt;/code&gt;，也顺便把多语言加上。&lt;/p&gt;
&lt;p&gt;然后在加标签的列表页的时候，弄得很烦躁，&lt;code&gt;jade&lt;/code&gt;的语法不记得了，不知道是不是&lt;code&gt;hexo&lt;/code&gt;自带的缓存，你怎么改都没用，本地运行的服务就是不生效，烦得很，就不想弄了。有空慢慢的把&lt;code&gt;jade&lt;/code&gt;的模板改成&lt;code&gt;ejs&lt;/code&gt;，方便些用，毕竟&lt;code&gt;hexo&lt;/code&gt;官网上面的例子那些都是使用这个模板的，方便对照。&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://www.rayliao.com/blog/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>用什么标题好呢</title>
    <link href="http://www.rayliao.com/blog/2019/06/02/%E7%94%A8%E4%BB%80%E4%B9%88%E6%A0%87%E9%A2%98%E5%A5%BD%E5%91%A2/"/>
    <id>http://www.rayliao.com/blog/2019/06/02/用什么标题好呢/</id>
    <published>2019-06-01T16:43:14.000Z</published>
    <updated>2019-09-06T03:23:19.582Z</updated>
    
    <content type="html"><![CDATA[<p>这是有两年没有动过blog了啊。</p><p>虽然自己好像热衷于学习，但是不好的是，对某件事开始热情满满，但没多久就会因这因那的原因冷却了。最近是有重新开始写周记了，希望能一直坚持下去。</p><p>blog往后估计是会比较少更新的了。</p><p>原因有三，其一是年纪，不可避免的年纪越来越大，事情也就越来越多，很多事情没办法兼顾到了；其二是文笔，写blog还是需要有点好笔头的，不然写得空泛有何用；其三是内容，自己还是一直在学习的过程中，并不是一个很好的内容生产者。</p><a id="more"></a><p>希望通过坚持写周记，能稍微练好自己写文章的能力，不管多忙，还是要抽时间学习，然后把自己所学整理归纳成文章知识。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是有两年没有动过blog了啊。&lt;/p&gt;
&lt;p&gt;虽然自己好像热衷于学习，但是不好的是，对某件事开始热情满满，但没多久就会因这因那的原因冷却了。最近是有重新开始写周记了，希望能一直坚持下去。&lt;/p&gt;
&lt;p&gt;blog往后估计是会比较少更新的了。&lt;/p&gt;
&lt;p&gt;原因有三，其一是年纪，不可避免的年纪越来越大，事情也就越来越多，很多事情没办法兼顾到了；其二是文笔，写blog还是需要有点好笔头的，不然写得空泛有何用；其三是内容，自己还是一直在学习的过程中，并不是一个很好的内容生产者。&lt;/p&gt;
    
    </summary>
    
    
      <category term="ray" scheme="http://www.rayliao.com/blog/tags/ray/"/>
    
  </entry>
  
  <entry>
    <title>hashtag</title>
    <link href="http://www.rayliao.com/blog/2017/03/08/hashtag/"/>
    <id>http://www.rayliao.com/blog/2017/03/08/hashtag/</id>
    <published>2017-03-08T01:57:53.000Z</published>
    <updated>2019-09-06T03:23:19.582Z</updated>
    
    <content type="html"><![CDATA[<p><code>#过了追港剧的年岁</code></p><p><code>#会拍一点照片</code>、<code>#会看许多电影</code>、<code>#会喜欢看些剧</code>、<code>#会阅读一些书</code></p><p><code>#绘画学习家</code></p><p><code>#设计热衷家</code></p><p><code>#前端渣滓</code></p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;#过了追港剧的年岁&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#会拍一点照片&lt;/code&gt;、&lt;code&gt;#会看许多电影&lt;/code&gt;、&lt;code&gt;#会喜欢看些剧&lt;/code&gt;、&lt;code&gt;#会阅读一些书&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#绘画学习家&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#设计热衷家&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#前端渣滓&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="ray" scheme="http://www.rayliao.com/blog/tags/ray/"/>
    
  </entry>
  
  <entry>
    <title>Something</title>
    <link href="http://www.rayliao.com/blog/2016/07/14/Something/"/>
    <id>http://www.rayliao.com/blog/2016/07/14/Something/</id>
    <published>2016-07-14T04:21:52.000Z</published>
    <updated>2019-09-06T03:23:19.581Z</updated>
    
    <content type="html"><![CDATA[<p>昨晚邦哥上课开始略微讲了下脚手架的知识，提了下yeoman，然后讲了怎么通过命令行来配置项目，根据模板的方式来生成项目文件和内容，后面就是聊人生的部分了，其实各自还是对自己的未来迷茫的，不清楚需要去学什么，<br>要达到什么目的，我也不知道，虽然我知道我要去学什么，怎么学，但我不知道我最终是想要到达什么目标，以及没有详细的学习计划。<br>前端的知识体系很庞大，很容易让人迷失，捡了西瓜忘了芝麻，所以很有必要时常停下来想一下，总结一下，才不至于荡失路。</p><p>最终我认为，应该要一个个来，持续性有效的专注于某一件事，会学得更好。</p><p>后来又叫了宵夜，看了《魔兽》，又很晚睡了，看得时候都差点睡着了，一来自己没有魔兽情节，二来下载的字幕很渣。</p><a id="more"></a><p>—关于yeoman—<br>其实通常没必要自己去写一个脚手架用来搭建完整的项目吧，不过项目搭建好了，像redux-cli一样，用命名行的文件生成必要的文件是挺好的，便捷省时间。<br>不过yeoman可以使用，因为可以很方便的搭建一个项目，只要在yeoman没找到有合适的脚手架的情况，才自己去创建一个脚手架，但其实如果你的项目是用于一次搭建的话，也没必要脚手架啊？</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;昨晚邦哥上课开始略微讲了下脚手架的知识，提了下yeoman，然后讲了怎么通过命令行来配置项目，根据模板的方式来生成项目文件和内容，后面就是聊人生的部分了，其实各自还是对自己的未来迷茫的，不清楚需要去学什么，&lt;br&gt;要达到什么目的，我也不知道，虽然我知道我要去学什么，怎么学，但我不知道我最终是想要到达什么目标，以及没有详细的学习计划。&lt;br&gt;前端的知识体系很庞大，很容易让人迷失，捡了西瓜忘了芝麻，所以很有必要时常停下来想一下，总结一下，才不至于荡失路。&lt;/p&gt;
&lt;p&gt;最终我认为，应该要一个个来，持续性有效的专注于某一件事，会学得更好。&lt;/p&gt;
&lt;p&gt;后来又叫了宵夜，看了《魔兽》，又很晚睡了，看得时候都差点睡着了，一来自己没有魔兽情节，二来下载的字幕很渣。&lt;/p&gt;
    
    </summary>
    
    
      <category term="日记" scheme="http://www.rayliao.com/blog/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>好久没有写文章了</title>
    <link href="http://www.rayliao.com/blog/2016/06/23/%E5%A5%BD%E4%B9%85%E6%B2%A1%E6%9C%89%E5%86%99%E6%96%87%E7%AB%A0%E4%BA%86/"/>
    <id>http://www.rayliao.com/blog/2016/06/23/好久没有写文章了/</id>
    <published>2016-06-23T06:33:07.000Z</published>
    <updated>2019-09-06T03:23:19.581Z</updated>
    
    <content type="html"><![CDATA[<p>太久没有写东西了。</p><p>主要是太懒了，其次不知道应该写些什么，最近一直来没什么新鲜事，自己也没有取得多大的进步，虽然生活一如既往的进行着，一切有条不紊的进行着，是有在一直学习中，只是<br>有种像一站到底的长途火车般，一直行进中，没有停留，没有停留站点。</p><p>恩，需要趁现在说下最近的事。</p><p>现在的生活规律其实挺好的，一切都很积极向上，舒心自然，当然了某个时候，如中午小憩之后，下午吃完水果在阳台眺望远方的时候，吃完饭望着夕阳的时候，晚上夜深人静的<br>时候，难免有其他心思，渴望改变，羡慕那些旅行者，思考为什么处在这样一种生活，而不是更好，又或者孤独感爬满身。间歇性的，是不是撩我一下。</p><p>首先说下娱乐方面，最近减少了电影和电视剧的观影量，没有做到像去年那样一星期能最少看两部了，现在可能一星期才看没一部，剧集的话除了持续追踪的<code>生活大爆炸</code>，<br><code>权利的游戏</code>和<code>海贼王</code>之外，偶尔会忍不住看下其他的剧集，像最近看的<code>家族的形式</code>，看日剧看完罪恶感没那么强烈，因为花的时间少。游戏的话，一直都不感冒，不过<br>昨天还是安装了<code>炉石传说</code>，就试玩下吧，我想我不会沉迷的，大学沉迷往事还历历在目，还深刻。</p><a id="more"></a><p>尤克里里终于练了几首歌，虽然都不熟练，但有空练习下，还是很好的，作为陶冶生活的来说，效果很好，整天盯着手机电脑毕竟不好，适当让眼睛休息下，练下手，棒棒哒。</p><p>健身房还有持续在check in，为了健康为了身材为了自信为了未来，<code>游泳</code>作为去年一年点一个技能的技能选择，现在已经get到了，点亮之后喜欢上了，现在健身房大部分时间<br>也是花在游泳池里面，毕竟还能练更好点，以及游泳本来就很健康啊，或许接下来差不多可以尝一些新鲜事物，如跳舞，动感单车这些没试过的。</p><p><code>英语</code>应该是作为今年想要点亮的技能的，奈何进度有点恼人，有时不时背单词，听广播，阅读英文原著，但总是没有突破那个卡，还是不会说，其实最需要学习的是说和听，也就是<br>日常交流，这是最想提高掌握的，或许过段时间是要尝试去找个老师来系统学习下。</p><p>最后，前端技能学习上，发现一直只靠自己都只能一知半解，掌握得很片面，新知识了解得也很浅，最近邦哥来了之后启动react学习项目，很好啊，感觉很兴奋，也很快乐，<br>学习新的有趣的东西，大家坐在一起开发写代码，快乐不枯燥，到时候做个项目出来，实战能掌握得更好，也能真正做一些东西，非常好，期待之，就看接下来做什么项目。</p><p>以上。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;太久没有写东西了。&lt;/p&gt;
&lt;p&gt;主要是太懒了，其次不知道应该写些什么，最近一直来没什么新鲜事，自己也没有取得多大的进步，虽然生活一如既往的进行着，一切有条不紊的进行着，是有在一直学习中，只是&lt;br&gt;有种像一站到底的长途火车般，一直行进中，没有停留，没有停留站点。&lt;/p&gt;
&lt;p&gt;恩，需要趁现在说下最近的事。&lt;/p&gt;
&lt;p&gt;现在的生活规律其实挺好的，一切都很积极向上，舒心自然，当然了某个时候，如中午小憩之后，下午吃完水果在阳台眺望远方的时候，吃完饭望着夕阳的时候，晚上夜深人静的&lt;br&gt;时候，难免有其他心思，渴望改变，羡慕那些旅行者，思考为什么处在这样一种生活，而不是更好，又或者孤独感爬满身。间歇性的，是不是撩我一下。&lt;/p&gt;
&lt;p&gt;首先说下娱乐方面，最近减少了电影和电视剧的观影量，没有做到像去年那样一星期能最少看两部了，现在可能一星期才看没一部，剧集的话除了持续追踪的&lt;code&gt;生活大爆炸&lt;/code&gt;，&lt;br&gt;&lt;code&gt;权利的游戏&lt;/code&gt;和&lt;code&gt;海贼王&lt;/code&gt;之外，偶尔会忍不住看下其他的剧集，像最近看的&lt;code&gt;家族的形式&lt;/code&gt;，看日剧看完罪恶感没那么强烈，因为花的时间少。游戏的话，一直都不感冒，不过&lt;br&gt;昨天还是安装了&lt;code&gt;炉石传说&lt;/code&gt;，就试玩下吧，我想我不会沉迷的，大学沉迷往事还历历在目，还深刻。&lt;/p&gt;
    
    </summary>
    
    
      <category term="日记" scheme="http://www.rayliao.com/blog/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>字体图标的压缩</title>
    <link href="http://www.rayliao.com/blog/2016/02/26/%E5%AD%97%E4%BD%93%E5%9B%BE%E6%A0%87%E7%9A%84%E5%8E%8B%E7%BC%A9/"/>
    <id>http://www.rayliao.com/blog/2016/02/26/字体图标的压缩/</id>
    <published>2016-02-26T03:31:20.000Z</published>
    <updated>2019-09-06T03:23:19.583Z</updated>
    
    <content type="html"><![CDATA[<p>字体图标管理办法：</p><ul><li><a href="http://iconfont.cn/" target="_blank" rel="noopener">阿里巴巴矢量图标库</a>，可以新建图标管理项目，上传添加你想要的图标上去，图标项目可以添加成员共同管理。</li><li><a href="http://font.baidu.com/editor/" target="_blank" rel="noopener">百度字体编辑器</a>，百度这个，可以打开多个ttf，woff，eot，otf格式的字体文件，然后可以复制剪切修改单个字体。</li></ul><p>所以字体图标的压缩方法，就是通过百度字体编辑器，删除没用上的字体图标，只保留需要的字体图标。</p><p>然后因为字体图标需要有多种字体格式，以适应浏览器的多样性，且在IIS部署的时候，还需要专门设置一下，针对<code>*.woff</code>和<code>*.svg</code>格式的加载问题。同时，在移动端宽带的限制下，加载多个字体文件，是不好的。所以，要换另外一种方式，就是把字体文件转换成<code>base64编码</code>格式。</p><p>使用的工具叫<code>fontmin</code>，详细使用方法可以浏览<a href="http://efe.baidu.com/blog/fontmin-getting-started/" target="_blank" rel="noopener">fontmin官网</a>。</p><a id="more"></a><p>安装<code>fontmin</code>：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> fontmin</span><br></pre></td></tr></table></figure><p>在<code>gulpfile.js</code>添加转换字体的任务：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'fontmin'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> Fontmin = <span class="built_in">require</span>(<span class="string">'fontmin'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> srcPath = <span class="string">'app/fonts/origin/xxxxx.ttf'</span>; <span class="comment">// 字体源文件</span></span><br><span class="line">    <span class="keyword">var</span> destPath = <span class="string">'app/fonts'</span>;    <span class="comment">// 输出路径</span></span><br><span class="line">    <span class="keyword">var</span> text = <span class="string">'需要提取的字体'</span>;  </span><br><span class="line">    <span class="comment">//用于设计稿有使用特殊字体，然引用整个字体文件太大，就可以提取需要的文字，比如设计稿中只使用了“风生水起”四个字，那么text的值改成“风生水起”，运行之后，就只生成这四个字的字体文件和base64编码</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化</span></span><br><span class="line">    <span class="keyword">var</span> fontmin = <span class="keyword">new</span> Fontmin()</span><br><span class="line">        .src(srcPath)               <span class="comment">// 输入配置</span></span><br><span class="line">        .use(Fontmin.glyph(&#123;        <span class="comment">// 字型提取插件</span></span><br><span class="line">            <span class="comment">// text: text</span></span><br><span class="line">        &#125;))</span><br><span class="line">        <span class="comment">// .use(Fontmin.ttf2eot())     // eot 转换插件</span></span><br><span class="line">        <span class="comment">// .use(Fontmin.ttf2woff())    // woff 转换插件     </span></span><br><span class="line">        <span class="comment">// .use(Fontmin.ttf2svg())     // svg 转换插件</span></span><br><span class="line">        .use(Fontmin.css(&#123;</span><br><span class="line">            base64: <span class="literal">true</span>,</span><br><span class="line">            glyph: <span class="literal">true</span>,</span><br><span class="line">            iconPrefix: <span class="string">'ioniconsmin-icon'</span>,  <span class="comment">// class prefix, only work when glyph is `true`. default to "icon"</span></span><br><span class="line">            fontFamily: <span class="string">'ioniconsmin'</span>,   <span class="comment">// custom fontFamily, default to filename or get from analysed ttf file</span></span><br><span class="line">            asFileName: <span class="literal">false</span>       </span><br><span class="line">        &#125;))</span><br><span class="line">        .dest(destPath);            <span class="comment">// 输出配置</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 执行</span></span><br><span class="line">    fontmin.run(<span class="function"><span class="keyword">function</span> (<span class="params">err, files, stream</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (err) &#123;                  <span class="comment">// 异常捕捉</span></span><br><span class="line">            <span class="built_in">console</span>.error(err);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'done'</span>);        <span class="comment">// 成功</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>打开命令行，输入命令：<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>gulp fontmin</span><br></pre></td></tr></table></figure></p><p>会生成字体文件和样式文件。</p><p>done.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;字体图标管理办法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://iconfont.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;阿里巴巴矢量图标库&lt;/a&gt;，可以新建图标管理项目，上传添加你想要的图标上去，图标项目可以添加成员共同管理。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://font.baidu.com/editor/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;百度字体编辑器&lt;/a&gt;，百度这个，可以打开多个ttf，woff，eot，otf格式的字体文件，然后可以复制剪切修改单个字体。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以字体图标的压缩方法，就是通过百度字体编辑器，删除没用上的字体图标，只保留需要的字体图标。&lt;/p&gt;
&lt;p&gt;然后因为字体图标需要有多种字体格式，以适应浏览器的多样性，且在IIS部署的时候，还需要专门设置一下，针对&lt;code&gt;*.woff&lt;/code&gt;和&lt;code&gt;*.svg&lt;/code&gt;格式的加载问题。同时，在移动端宽带的限制下，加载多个字体文件，是不好的。所以，要换另外一种方式，就是把字体文件转换成&lt;code&gt;base64编码&lt;/code&gt;格式。&lt;/p&gt;
&lt;p&gt;使用的工具叫&lt;code&gt;fontmin&lt;/code&gt;，详细使用方法可以浏览&lt;a href=&quot;http://efe.baidu.com/blog/fontmin-getting-started/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;fontmin官网&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tech" scheme="http://www.rayliao.com/blog/tags/Tech/"/>
    
      <category term="前端优化" scheme="http://www.rayliao.com/blog/tags/%E5%89%8D%E7%AB%AF%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>图片的合并和压缩</title>
    <link href="http://www.rayliao.com/blog/2016/02/26/%E5%9B%BE%E7%89%87%E7%9A%84%E5%90%88%E5%B9%B6%E5%92%8C%E5%8E%8B%E7%BC%A9/"/>
    <id>http://www.rayliao.com/blog/2016/02/26/图片的合并和压缩/</id>
    <published>2016-02-26T03:29:08.000Z</published>
    <updated>2019-09-06T03:23:19.583Z</updated>
    
    <content type="html"><![CDATA[<p>主要说一下图片合并和图片压缩的方法。</p><h4 id="图片合并"><a href="#图片合并" class="headerlink" title="图片合并"></a>图片合并</h4><p><em>说明：这里的教程基于windows环境，以及认为你已经大概知道<code>gulp</code>的使用方法。</em></p><p>为了减少图片的请求次数，可以把多张图片合并成一张图片，合并的图片叫雪碧图，也可以叫精灵图。以前是依靠ps一张张图片手工合并在一起，现在可以把需要合并的图片放在同一个文件夹，然后通过工具生成雪碧图以及样式文件。</p><p>首先需要先下载安装<a href="http://www.graphicsmagick.org/" target="_blank" rel="noopener">GraphicsMagick</a>和<a href="http://www.imagemagick.org/script/index.php" target="_blank" rel="noopener">ImageMagick</a>。（这里说下为什么需要安装这两个软件，因为<code>sprity</code>默认使用的图片引擎是<code>lwip</code>，而在<code>windows</code>环境下，<code>lwip</code>是个坑，很难安装成功，所以把引擎换成<code>gm</code>，也就需要安装前面那两个软件，当然如果你是<code>mac</code>环境，可以选用<code>lwip</code>的引擎。）</p><a id="more"></a><p>安装成功之后，请重启一下电脑。接着安装<code>sprity</code>和<code>sprity-gm</code>。<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> sprity</span><br><span class="line">$ npm <span class="keyword">install</span> sprity-gm</span><br></pre></td></tr></table></figure></p><p>接着在<code>gulpfile.js</code>里写一个合并的任务：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'sprites'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> sprity = <span class="built_in">require</span>(<span class="string">'sprity'</span>);</span><br><span class="line">    sprity.src(&#123;</span><br><span class="line">        name: <span class="string">'icon'</span>,  <span class="comment">//需要合并的图片文件夹的名称</span></span><br><span class="line">        src: <span class="string">'path/*.png'</span>, <span class="comment">//图片的路径</span></span><br><span class="line">        style: <span class="string">'_icon.scss'</span>, <span class="comment">//定义生成的样式文件名</span></span><br><span class="line">        format: <span class="string">'png'</span>, <span class="comment">//指定需要合并的图片的格式</span></span><br><span class="line">        engine: <span class="string">'gm'</span>, <span class="comment">//设定图片引擎</span></span><br><span class="line">        <span class="string">'gm-use-imagemagick'</span>: <span class="literal">true</span>,</span><br><span class="line">        orientation: <span class="string">'binary-tree'</span>,  <span class="comment">//合并图片的排列方式</span></span><br><span class="line">        template: <span class="string">'./sprity-css.hbs'</span>, <span class="comment">//生成样式的模板</span></span><br><span class="line">        processor: <span class="string">'scss'</span> <span class="comment">//设定生成样式的格式</span></span><br><span class="line">    &#125;)</span><br><span class="line">    .pipe(gulpif(<span class="string">'*.png'</span>, gulp.dest(<span class="string">'img/'</span>), gulp.dest(<span class="string">'css/'</span>))); <span class="comment">//生成的雪碧图的存放位置和样式的存放位置</span></span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>具体的配置可以参考<code>sprity</code>的<a href="https://github.com/sprity/sprity" target="_blank" rel="noopener">README</a></p><p>最后在命令行中输入命令：<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>gulp sprites</span><br></pre></td></tr></table></figure></p><p>done.</p><h4 id="图片压缩"><a href="#图片压缩" class="headerlink" title="图片压缩"></a>图片压缩</h4><p>先说下<code>jpeg</code>格式的图片，尽可能的压缩图片大小，其实<code>jpeg</code>的格式是比较容易压缩的，在存储为web所用格式的时候，选择一下图片的质量或品质就可以了，选择“非常高”或者“高”就可以了，也就是品质60到80之间，尽量保证图片是小于<code>300kb</code>的。</p><p>尺寸中或大的<code>jpeg</code>格式的图片请勾选<code>连续</code>模式，而不是优化模式。为什么呢，因为优化模式的图片加载方式是从上到下加载，而<code>连续</code>模式的加载方式是从低像素到高像素加载的。</p><p><code>png</code>格式的图片压缩会比较难一点，和<code>jpeg</code>一样，尺寸中或大的请<code>交错</code>模式，交错模式和连续模式一样，加载方式是从低像素到高像素加载的。</p><p>下面有几种压缩<code>png</code>图片的方法：</p><ul><li>可以上传<code>png</code>图片到<a href="https://tinypng.com/" target="_blank" rel="noopener">tinypng</a>,但这个方式有个缺点，没办法控制压缩的量，压缩太重了，图片质量太差。</li><li>可以利用<a href="https://github.com/imagemin/imagemin-pngquant" target="_blank" rel="noopener">imagemin-pngquant</a>插件进行压缩，可以选择压缩的量，比第一种方法好点。</li><li>但有些<code>png</code>图片在必须保证图片质量的前提下，是确实没办法压缩的，但还是可以略微调整下。<code>图像</code>-<code>调整</code>-<code>色调分离</code>。利用photoshop里面的色调分离，可以压缩一下图片的大小。</li></ul><p>安装imagemin-pngquant：<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> imagemin-pngquant</span><br></pre></td></tr></table></figure></p><p>imagemin-pngquant的写法（具体可以参考<a href="https://github.com/imagemin/imagemin-pngquant" target="_blank" rel="noopener">README</a>）：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//图片压缩</span></span><br><span class="line">gulp.task(<span class="string">'imagemin'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> pngquant = <span class="built_in">require</span>(<span class="string">'imagemin-pngquant'</span>);</span><br><span class="line">    gulp.src(<span class="string">'app/common/img/src/*.png'</span>)</span><br><span class="line">        .pipe(pngquant(&#123;<span class="attr">quality</span>: <span class="string">'60'</span>, <span class="attr">speed</span>: <span class="number">4</span>&#125;)())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'app/common/img/min'</span>));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;主要说一下图片合并和图片压缩的方法。&lt;/p&gt;
&lt;h4 id=&quot;图片合并&quot;&gt;&lt;a href=&quot;#图片合并&quot; class=&quot;headerlink&quot; title=&quot;图片合并&quot;&gt;&lt;/a&gt;图片合并&lt;/h4&gt;&lt;p&gt;&lt;em&gt;说明：这里的教程基于windows环境，以及认为你已经大概知道&lt;code&gt;gulp&lt;/code&gt;的使用方法。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;为了减少图片的请求次数，可以把多张图片合并成一张图片，合并的图片叫雪碧图，也可以叫精灵图。以前是依靠ps一张张图片手工合并在一起，现在可以把需要合并的图片放在同一个文件夹，然后通过工具生成雪碧图以及样式文件。&lt;/p&gt;
&lt;p&gt;首先需要先下载安装&lt;a href=&quot;http://www.graphicsmagick.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GraphicsMagick&lt;/a&gt;和&lt;a href=&quot;http://www.imagemagick.org/script/index.php&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ImageMagick&lt;/a&gt;。（这里说下为什么需要安装这两个软件，因为&lt;code&gt;sprity&lt;/code&gt;默认使用的图片引擎是&lt;code&gt;lwip&lt;/code&gt;，而在&lt;code&gt;windows&lt;/code&gt;环境下，&lt;code&gt;lwip&lt;/code&gt;是个坑，很难安装成功，所以把引擎换成&lt;code&gt;gm&lt;/code&gt;，也就需要安装前面那两个软件，当然如果你是&lt;code&gt;mac&lt;/code&gt;环境，可以选用&lt;code&gt;lwip&lt;/code&gt;的引擎。）&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tech" scheme="http://www.rayliao.com/blog/tags/Tech/"/>
    
      <category term="前端优化" scheme="http://www.rayliao.com/blog/tags/%E5%89%8D%E7%AB%AF%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>绘制一个圆环logo</title>
    <link href="http://www.rayliao.com/blog/2016/01/25/%E7%BB%98%E5%88%B6%E4%B8%80%E4%B8%AA%E5%9C%86%E7%8E%AFlogo/"/>
    <id>http://www.rayliao.com/blog/2016/01/25/绘制一个圆环logo/</id>
    <published>2016-01-25T15:30:27.000Z</published>
    <updated>2019-09-06T03:23:19.583Z</updated>
    
    <content type="html"><![CDATA[<p>最近趁有一点时间，想把之前很久mark下来的<a href="http://www.uisdc.com/photoshop-fabulous-colorful-ring" target="_blank" rel="noopener">ps教程</a>学一下，去到第6步就卡住了，一点都不新手啊，还好我算懂点ps，完全不懂ps的，可要怎么学哟。</p><p>所以当时我就在想，要把这个教程补充完整，新手能够看得懂的来。</p><h5 id="1-首先用绘图工具画一个椭圆形，形状按自己的需求来。"><a href="#1-首先用绘图工具画一个椭圆形，形状按自己的需求来。" class="headerlink" title="1.首先用绘图工具画一个椭圆形，形状按自己的需求来。"></a>1.首先用绘图工具画一个椭圆形，形状按自己的需求来。</h5><p>第一步之前，需要先新建一个<code>psd</code>文件，尺寸大约六七百像素就可以了，太小不好做图，太大没必要，背景色选白色就可以了，当然你也可以凭自己的爱好选择其他颜色。然后选择「椭圆工具」，按住鼠标拖拽到适合的大小，这个大小可以目测一下，跟教程里面的大小差不多就可以了。</p><p>这里有个坑，我就是因为这个坑卡住，导致我要向设计师妹子求助，可能你不会像我那么蠢，不过我还是写一下提醒一下，因为我习惯用「油漆桶工具」，所以画完椭圆形之后，因为前景色不是我要的颜色，所以我重新选择了前景色，然后用油漆桶工具把颜色填充进去，然后提示我是否要栅格化图层，我一直不懂栅格化图层是什么意思，所以义无反顾的选择了栅格化图层，然后就悲剧了，到后面第6步，一直不行。原来后面是需要这些椭圆为一个图层，而不是栅格化后的图片。</p><a id="more"></a> <h5 id="2-复制椭圆，降低透明度到30-用来观察相交的图形面积大小，平移复制的图层。"><a href="#2-复制椭圆，降低透明度到30-用来观察相交的图形面积大小，平移复制的图层。" class="headerlink" title="2.复制椭圆，降低透明度到30%用来观察相交的图形面积大小，平移复制的图层。"></a>2.复制椭圆，降低透明度到30%用来观察相交的图形面积大小，平移复制的图层。</h5><p>复制图层应该没什么难度吧，调透明度也是，所以我就不说了。</p><h5 id="3-选中这两个图层，同时复制一层，并顺时针旋转60度。"><a href="#3-选中这两个图层，同时复制一层，并顺时针旋转60度。" class="headerlink" title="3.选中这两个图层，同时复制一层，并顺时针旋转60度。"></a>3.选中这两个图层，同时复制一层，并顺时针旋转60度。</h5><h5 id="4-继续执行上一步，复制两个圆，并且旋转60度。"><a href="#4-继续执行上一步，复制两个圆，并且旋转60度。" class="headerlink" title="4.继续执行上一步，复制两个圆，并且旋转60度。"></a>4.继续执行上一步，复制两个圆，并且旋转60度。</h5><h5 id="5-以上的操作都是为了得到两个圆相交所得的月牙。"><a href="#5-以上的操作都是为了得到两个圆相交所得的月牙。" class="headerlink" title="5.以上的操作都是为了得到两个圆相交所得的月牙。"></a>5.以上的操作都是为了得到两个圆相交所得的月牙。</h5><p>那为什么要复制那么多个圆？是为了好看吧。</p><h5 id="6-选中两个圆，合并成一个图层（ctrl-E）"><a href="#6-选中两个圆，合并成一个图层（ctrl-E）" class="headerlink" title="6.选中两个圆，合并成一个图层（ctrl + E）"></a>6.选中两个圆，合并成一个图层<code>（ctrl + E）</code></h5><p>是图层的话就没问题了，如果像我一开始那样，栅格化图层转成图片的，合并之后就不一样了。</p><h5 id="7-选中形状图层，在工具栏中选择减去顶层形状并且合并形状组件。"><a href="#7-选中形状图层，在工具栏中选择减去顶层形状并且合并形状组件。" class="headerlink" title="7.选中形状图层，在工具栏中选择减去顶层形状并且合并形状组件。"></a>7.选中形状图层，在工具栏中选择减去顶层形状并且合并形状组件。</h5><p>这里要先选择ps的「直接选择工具」，然后点击需要减去的顶层形状，这里还要点击一下形状的边框，工具栏中的操作才是可执行的。</p><hr><p>后面的步骤不写了，不难的，复制出来，旋转下角度，调下颜色即可，后面的投影效果，我做得不好，总调不好符合的透视效果。</p><p><img src="img/make-logo.jpg" alt="make-logo"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近趁有一点时间，想把之前很久mark下来的&lt;a href=&quot;http://www.uisdc.com/photoshop-fabulous-colorful-ring&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ps教程&lt;/a&gt;学一下，去到第6步就卡住了，一点都不新手啊，还好我算懂点ps，完全不懂ps的，可要怎么学哟。&lt;/p&gt;
&lt;p&gt;所以当时我就在想，要把这个教程补充完整，新手能够看得懂的来。&lt;/p&gt;
&lt;h5 id=&quot;1-首先用绘图工具画一个椭圆形，形状按自己的需求来。&quot;&gt;&lt;a href=&quot;#1-首先用绘图工具画一个椭圆形，形状按自己的需求来。&quot; class=&quot;headerlink&quot; title=&quot;1.首先用绘图工具画一个椭圆形，形状按自己的需求来。&quot;&gt;&lt;/a&gt;1.首先用绘图工具画一个椭圆形，形状按自己的需求来。&lt;/h5&gt;&lt;p&gt;第一步之前，需要先新建一个&lt;code&gt;psd&lt;/code&gt;文件，尺寸大约六七百像素就可以了，太小不好做图，太大没必要，背景色选白色就可以了，当然你也可以凭自己的爱好选择其他颜色。然后选择「椭圆工具」，按住鼠标拖拽到适合的大小，这个大小可以目测一下，跟教程里面的大小差不多就可以了。&lt;/p&gt;
&lt;p&gt;这里有个坑，我就是因为这个坑卡住，导致我要向设计师妹子求助，可能你不会像我那么蠢，不过我还是写一下提醒一下，因为我习惯用「油漆桶工具」，所以画完椭圆形之后，因为前景色不是我要的颜色，所以我重新选择了前景色，然后用油漆桶工具把颜色填充进去，然后提示我是否要栅格化图层，我一直不懂栅格化图层是什么意思，所以义无反顾的选择了栅格化图层，然后就悲剧了，到后面第6步，一直不行。原来后面是需要这些椭圆为一个图层，而不是栅格化后的图片。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Design" scheme="http://www.rayliao.com/blog/tags/Design/"/>
    
      <category term="Photoshop" scheme="http://www.rayliao.com/blog/tags/Photoshop/"/>
    
  </entry>
  
  <entry>
    <title>创建新文章</title>
    <link href="http://www.rayliao.com/blog/2016/01/16/%E5%88%9B%E5%BB%BA%E6%96%B0%E6%96%87%E7%AB%A0/"/>
    <id>http://www.rayliao.com/blog/2016/01/16/创建新文章/</id>
    <published>2016-01-16T07:19:21.000Z</published>
    <updated>2019-09-06T03:23:19.582Z</updated>
    
    <content type="html"><![CDATA[<p>试一下创建一篇新的文章，感觉还是挺方便的，用hexo来写文章，就是不知道文章用中文名字行不行，我以为会自动换成拼音的写法。然后现在那个主题有点问题，不知道为什么首页的文章列表不会显示文章内容的摘要，试下创建一篇新的文章，来测试下。</p><a id="more"></a> <p>原来要加上标签隔开来才可以显示文章的摘要。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- more --&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;试一下创建一篇新的文章，感觉还是挺方便的，用hexo来写文章，就是不知道文章用中文名字行不行，我以为会自动换成拼音的写法。然后现在那个主题有点问题，不知道为什么首页的文章列表不会显示文章内容的摘要，试下创建一篇新的文章，来测试下。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tech" scheme="http://www.rayliao.com/blog/tags/Tech/"/>
    
      <category term="hexo" scheme="http://www.rayliao.com/blog/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.rayliao.com/blog/2016/01/10/hello-world/"/>
    <id>http://www.rayliao.com/blog/2016/01/10/hello-world/</id>
    <published>2016-01-10T07:19:21.000Z</published>
    <updated>2019-09-06T03:23:19.582Z</updated>
    
    <content type="html"><![CDATA[<p>还是保留hello world这篇文章吧，hexo的command老是会忘记，折腾了很久，现在总算有个大概认知了。<br>其实大部分时间都花在git上了，github的branch建了又删，删了又建，老是配置得不对，现在终于可以了，勉勉强强master作为默认的主支，放生成后的blog，<code>gh-source</code>存放源代码。</p><p>之前一直搞不懂git的分支是怎么一回事，经过这次折腾，边捣鼓边看文档，总算知道本地如何切换分支，如何push到相应的分支，如何把本地的分支和远程分支相连接，</p><a id="more"></a> <blockquote><p>Welcome to <a href="http://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p></blockquote><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;还是保留hello world这篇文章吧，hexo的command老是会忘记，折腾了很久，现在总算有个大概认知了。&lt;br&gt;其实大部分时间都花在git上了，github的branch建了又删，删了又建，老是配置得不对，现在终于可以了，勉勉强强master作为默认的主支，放生成后的blog，&lt;code&gt;gh-source&lt;/code&gt;存放源代码。&lt;/p&gt;
&lt;p&gt;之前一直搞不懂git的分支是怎么一回事，经过这次折腾，边捣鼓边看文档，总算知道本地如何切换分支，如何push到相应的分支，如何把本地的分支和远程分支相连接，&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tech" scheme="http://www.rayliao.com/blog/tags/Tech/"/>
    
      <category term="hexo" scheme="http://www.rayliao.com/blog/tags/hexo/"/>
    
  </entry>
  
</feed>
